Search.setIndex({"alltitles": {"3D-Printed Parts": [[175, "d-printed-parts"]], "API": [[171, null]], "Accessing the pins by hardware (for servos) and using pin uart to communicate": [[179, "accessing-the-pins-by-hardware-for-servos-and-using-pin-uart-to-communicate"]], "Actions": [[4, null]], "Active": [[5, null]], "Alarms": [[184, null], [184, "id1"]], "Aluminium Extrusions and Tubes": [[175, "aluminium-extrusions-and-tubes"]], "ArCOM": [[91, null]], "ArduinoTypes": [[92, null]], "AreaActive": [[6, null]], "Assembly instructions": [[172, null]], "Assembly of MV": [[174, null]], "Assembly of the Mouse Village": [[174, null]], "BaseEventName": [[66, null]], "BaseMessage": [[96, null]], "BehaviourWindow": [[170, null]], "Biweekly": [[186, "biweekly"]], "Bpod": [[49, null]], "BpodBase": [[51, null]], "BpodCOMProtocol": [[53, null]], "BpodCOMProtocolModules": [[55, null]], "BpodIO": [[57, null]], "BpodModule": [[86, null]], "BpodModules": [[88, null]], "CNC Machined Parts": [[175, "cnc-machined-parts"]], "CameraProtocol": [[15, null]], "ChannelName": [[60, null]], "ChannelType": [[61, null]], "Channels": [[62, null]], "Check the token of an existing bot": [[179, "check-the-token-of-an-existing-bot"]], "Classes": [[171, "classes"]], "Collection": [[2, null]], "Color": [[7, null]], "Conditions": [[148, null]], "Configure remote access": [[179, "configure-remote-access"]], "Contents:": [[178, null]], "Create a telegram bot": [[179, "create-a-telegram-bot"]], "Cycle": [[8, null]], "Daily": [[186, "daily"]], "DataTable": [[9, null]], "DataType": [[93, null]], "DebugMessage": [[98, null]], "Devices": [[171, "devices"]], "Electronic Components": [[175, "electronic-components"]], "Electronic Instructions": [[173, null]], "EndTrial": [[100, null]], "ErrorMessage": [[102, null]], "Event": [[27, null]], "EventName": [[68, null]], "EventOccurrence": [[104, null]], "EventProtocol": [[16, null]], "EventResume": [[106, null]], "EventsPositions": [[63, null]], "Experimental setup": [[187, null]], "GlobalCounters": [[150, null]], "GlobalTimers": [[152, null]], "Gui": [[171, "gui"]], "Hardware": [[70, null]], "Hardware Technical Details": [[180, null]], "I2C": [[179, "i2c"]], "If you are using 2 screens:": [[179, "if-you-are-using-2-screens"]], "If you are using one screen only:": [[179, "if-you-are-using-one-screen-only"]], "Index & Search": [[178, "index-search"]], "Info": [[10, null]], "InputName": [[73, null]], "Install MV Raspberry": [[179, null]], "Install village": [[179, "install-village"]], "Interrogate the system": [[184, "interrogate-the-system"]], "Launch Raspberry Pi OS for the first time": [[179, "launch-raspberry-pi-os-for-the-first-time"]], "List of parts": [[175, null]], "Maintenance": [[186, null]], "Make the bot triggers the alarms": [[179, "make-the-bot-triggers-the-alarms"]], "MessageParser": [[108, null]], "Monthly": [[186, "monthly"]], "NonBlockingSocketReceive": [[78, null]], "NonBlockingStreamReader": [[81, null]], "Occasionally": [[186, "occasionally"]], "Operation of MV": [[181, null]], "Operation of the Mouse Village": [[181, null]], "Option 1: with RealVNC": [[179, "option-1-with-realvnc"]], "Option 2 (things are very slow with this): with raspi-connect": [[179, "option-2-things-are-very-slow-with-this-with-raspi-connect"]], "Output": [[28, null]], "OutputChannel": [[76, null]], "PyBpod": [[37, null]], "PyBpodProtocol": [[17, null]], "PyQT5 multimedia": [[179, "pyqt5-multimedia"]], "Pybpodapi": [[171, "pybpodapi"]], "Reader": [[164, null]], "ReceiveMessageHeader": [[131, null]], "Results": [[183, null]], "Scale": [[41, null]], "ScaleProtocol": [[18, null]], "Screen": [[171, "screen"]], "Screen settings and I2C communication": [[179, "screen-settings-and-i2c-communication"]], "ScreenActive": [[11, null]], "SendMessageHeader": [[133, null]], "Session": [[143, null]], "SessionInfo": [[110, null]], "Setting": [[22, null]], "Setting .env environment": [[179, "setting-env-environment"]], "Settings": [[23, null], [32, null]], "Softcode": [[38, null]], "SoftcodeOccurrence": [[112, null]], "Software installation": [[176, null]], "Software overview": [[182, null]], "Sound settings": [[179, "sound-settings"]], "State": [[12, null]], "StateMachine": [[146, null]], "StateMachineBase": [[155, null]], "StateMachineBuilder": [[157, null]], "StateMachineRunner": [[160, null]], "StateOccurrence": [[114, null]], "StateTransition": [[116, null]], "StderrBuffer": [[135, null]], "StderrMessage": [[118, null]], "StdoutBuffer": [[137, null]], "StdoutMessage": [[120, null]], "StreamsWrapper": [[144, null]], "Subject": [[25, null]], "SuperEnum": [[13, null]], "Task": [[29, null]], "TelegramBotProtocol": [[19, null]], "TempSensor": [[44, null]], "TempSensorProtocol": [[20, null]], "Training": [[33, null]], "Trial": [[122, null]], "Udev rules": [[179, "udev-rules"]], "UntaggedMessage": [[124, null]], "Updating the system and installing software": [[179, "updating-the-system-and-installing-software"]], "Usage": [[185, null], [185, null]], "ValueMessage": [[126, null]], "WarningMessage": [[128, null]], "Weekly": [[186, "weekly"]], "Welcome to village\u2019s documentation!": [[178, null]], "What is the Mouse Village": [[177, null]], "What you need": [[179, "what-you-need"]], "Writer": [[165, null]], "arcom": [[90, null]], "base_eventname": [[65, null]], "base_message": [[95, null]], "behaviour_window": [[169, null]], "bpod": [[36, null], [48, null]], "bpod_base": [[50, null]], "bpod_com_protocol": [[52, null]], "bpod_com_protocol_modules": [[54, null]], "bpod_error": [[139, null]], "bpod_events": [[67, null]], "bpod_input_channels": [[72, null]], "bpod_io": [[56, null]], "bpod_module": [[85, null]], "bpod_modules": [[84, null], [87, null]], "bpod_output_channels": [[75, null]], "channels": [[59, null]], "classes": [[0, null]], "collection": [[1, null]], "com": [[89, null]], "conditions": [[147, null]], "csv": [[163, null]], "date_parser": [[166, null]], "debug": [[97, null]], "devices": [[35, null]], "end_trial": [[99, null]], "enums": [[3, null]], "error": [[101, null]], "event_occurrence": [[103, null]], "event_resume": [[105, null]], "events": [[64, null]], "exceptions": [[138, null]], "get_bpod": [[39, null]], "get_scale": [[42, null]], "get_temp_sensor": [[45, null]], "global_counters": [[149, null]], "global_timers": [[151, null]], "gui": [[46, null]], "hardware": [[58, null], [69, null]], "input_channels": [[71, null]], "messaging": [[94, null]], "non_blockingsocketreceive": [[77, null]], "non_blockingstreamreader": [[80, null]], "output_channels": [[74, null]], "parse": [[167, null]], "parser": [[107, null]], "protocol": [[129, null], [141, null]], "protocols": [[14, null]], "pybpodapi": [[47, null]], "recv_msg_headers": [[130, null]], "scale": [[40, null]], "screen": [[168, null]], "send_msg_headers": [[132, null]], "session": [[142, null]], "session_info": [[109, null]], "settings": [[83, null]], "settings_class": [[21, null]], "softcode_occurrence": [[111, null]], "state_machine": [[145, null]], "state_machine_base": [[153, null]], "state_machine_builder": [[156, null]], "state_machine_runner": [[159, null]], "state_occurrence": [[113, null]], "state_transition": [[115, null]], "stderr": [[117, null]], "stderr_buffer": [[134, null]], "stdout": [[119, null]], "stdout_buffer": [[136, null]], "subject": [[24, null]], "task": [[26, null]], "temp_sensor": [[43, null]], "training": [[31, null]], "trial": [[121, null]], "untagged_message": [[123, null]], "utils": [[162, null]], "value": [[125, null]], "village.classes.task.TaskError": [[30, null]], "village.classes.training.TrainingError": [[34, null]], "village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream": [[79, null]], "village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream": [[82, null]], "village.pybpodapi.exceptions.bpod_error.BpodErrorException": [[140, null]], "village.pybpodapi.state_machine.state_machine_base.SMAError": [[154, null]], "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError": [[158, null]], "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError": [[161, null]], "warning": [[127, null]]}, "docnames": ["api_generated/village.classes", "api_generated/village.classes.collection", "api_generated/village.classes.collection.Collection", "api_generated/village.classes.enums", "api_generated/village.classes.enums.Actions", "api_generated/village.classes.enums.Active", "api_generated/village.classes.enums.AreaActive", "api_generated/village.classes.enums.Color", "api_generated/village.classes.enums.Cycle", "api_generated/village.classes.enums.DataTable", "api_generated/village.classes.enums.Info", "api_generated/village.classes.enums.ScreenActive", "api_generated/village.classes.enums.State", "api_generated/village.classes.enums.SuperEnum", "api_generated/village.classes.protocols", "api_generated/village.classes.protocols.CameraProtocol", "api_generated/village.classes.protocols.EventProtocol", "api_generated/village.classes.protocols.PyBpodProtocol", "api_generated/village.classes.protocols.ScaleProtocol", "api_generated/village.classes.protocols.TelegramBotProtocol", "api_generated/village.classes.protocols.TempSensorProtocol", "api_generated/village.classes.settings_class", "api_generated/village.classes.settings_class.Setting", "api_generated/village.classes.settings_class.Settings", "api_generated/village.classes.subject", "api_generated/village.classes.subject.Subject", "api_generated/village.classes.task", "api_generated/village.classes.task.Event", "api_generated/village.classes.task.Output", "api_generated/village.classes.task.Task", "api_generated/village.classes.task.TaskError", "api_generated/village.classes.training", "api_generated/village.classes.training.Settings", "api_generated/village.classes.training.Training", "api_generated/village.classes.training.TrainingError", "api_generated/village.devices", "api_generated/village.devices.bpod", "api_generated/village.devices.bpod.PyBpod", "api_generated/village.devices.bpod.Softcode", "api_generated/village.devices.bpod.get_bpod", "api_generated/village.devices.scale", "api_generated/village.devices.scale.Scale", "api_generated/village.devices.scale.get_scale", "api_generated/village.devices.temp_sensor", "api_generated/village.devices.temp_sensor.TempSensor", "api_generated/village.devices.temp_sensor.get_temp_sensor", "api_generated/village.gui", "api_generated/village.pybpodapi", "api_generated/village.pybpodapi.bpod", "api_generated/village.pybpodapi.bpod.Bpod", "api_generated/village.pybpodapi.bpod.bpod_base", "api_generated/village.pybpodapi.bpod.bpod_base.BpodBase", "api_generated/village.pybpodapi.bpod.bpod_com_protocol", "api_generated/village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules", "api_generated/village.pybpodapi.bpod.bpod_io", "api_generated/village.pybpodapi.bpod.bpod_io.BpodIO", "api_generated/village.pybpodapi.bpod.hardware", "api_generated/village.pybpodapi.bpod.hardware.channels", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelName", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelType", "api_generated/village.pybpodapi.bpod.hardware.channels.Channels", "api_generated/village.pybpodapi.bpod.hardware.channels.EventsPositions", "api_generated/village.pybpodapi.bpod.hardware.events", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events.EventName", "api_generated/village.pybpodapi.bpod.hardware.hardware", "api_generated/village.pybpodapi.bpod.hardware.hardware.Hardware", "api_generated/village.pybpodapi.bpod.hardware.input_channels", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName", "api_generated/village.pybpodapi.bpod.hardware.output_channels", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream", "api_generated/village.pybpodapi.bpod.settings", "api_generated/village.pybpodapi.bpod_modules", "api_generated/village.pybpodapi.bpod_modules.bpod_module", "api_generated/village.pybpodapi.bpod_modules.bpod_module.BpodModule", "api_generated/village.pybpodapi.bpod_modules.bpod_modules", "api_generated/village.pybpodapi.bpod_modules.bpod_modules.BpodModules", "api_generated/village.pybpodapi.com", "api_generated/village.pybpodapi.com.arcom", "api_generated/village.pybpodapi.com.arcom.ArCOM", "api_generated/village.pybpodapi.com.arcom.ArduinoTypes", "api_generated/village.pybpodapi.com.arcom.DataType", "api_generated/village.pybpodapi.com.messaging", "api_generated/village.pybpodapi.com.messaging.base_message", "api_generated/village.pybpodapi.com.messaging.base_message.BaseMessage", "api_generated/village.pybpodapi.com.messaging.debug", "api_generated/village.pybpodapi.com.messaging.debug.DebugMessage", "api_generated/village.pybpodapi.com.messaging.end_trial", "api_generated/village.pybpodapi.com.messaging.end_trial.EndTrial", "api_generated/village.pybpodapi.com.messaging.error", "api_generated/village.pybpodapi.com.messaging.error.ErrorMessage", "api_generated/village.pybpodapi.com.messaging.event_occurrence", "api_generated/village.pybpodapi.com.messaging.event_occurrence.EventOccurrence", "api_generated/village.pybpodapi.com.messaging.event_resume", "api_generated/village.pybpodapi.com.messaging.event_resume.EventResume", "api_generated/village.pybpodapi.com.messaging.parser", "api_generated/village.pybpodapi.com.messaging.parser.MessageParser", "api_generated/village.pybpodapi.com.messaging.session_info", "api_generated/village.pybpodapi.com.messaging.session_info.SessionInfo", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence", "api_generated/village.pybpodapi.com.messaging.state_occurrence", "api_generated/village.pybpodapi.com.messaging.state_occurrence.StateOccurrence", "api_generated/village.pybpodapi.com.messaging.state_transition", "api_generated/village.pybpodapi.com.messaging.state_transition.StateTransition", "api_generated/village.pybpodapi.com.messaging.stderr", "api_generated/village.pybpodapi.com.messaging.stderr.StderrMessage", "api_generated/village.pybpodapi.com.messaging.stdout", "api_generated/village.pybpodapi.com.messaging.stdout.StdoutMessage", "api_generated/village.pybpodapi.com.messaging.trial", "api_generated/village.pybpodapi.com.messaging.trial.Trial", "api_generated/village.pybpodapi.com.messaging.untagged_message", "api_generated/village.pybpodapi.com.messaging.untagged_message.UntaggedMessage", "api_generated/village.pybpodapi.com.messaging.value", "api_generated/village.pybpodapi.com.messaging.value.ValueMessage", "api_generated/village.pybpodapi.com.messaging.warning", "api_generated/village.pybpodapi.com.messaging.warning.WarningMessage", "api_generated/village.pybpodapi.com.protocol", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader", "api_generated/village.pybpodapi.com.protocol.send_msg_headers", "api_generated/village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader", "api_generated/village.pybpodapi.com.stderr_buffer", "api_generated/village.pybpodapi.com.stderr_buffer.StderrBuffer", "api_generated/village.pybpodapi.com.stdout_buffer", "api_generated/village.pybpodapi.com.stdout_buffer.StdoutBuffer", "api_generated/village.pybpodapi.exceptions", "api_generated/village.pybpodapi.exceptions.bpod_error", "api_generated/village.pybpodapi.exceptions.bpod_error.BpodErrorException", "api_generated/village.pybpodapi.protocol", "api_generated/village.pybpodapi.session", "api_generated/village.pybpodapi.session.Session", "api_generated/village.pybpodapi.session.StreamsWrapper", "api_generated/village.pybpodapi.state_machine", "api_generated/village.pybpodapi.state_machine.StateMachine", "api_generated/village.pybpodapi.state_machine.conditions", "api_generated/village.pybpodapi.state_machine.conditions.Conditions", "api_generated/village.pybpodapi.state_machine.global_counters", "api_generated/village.pybpodapi.state_machine.global_counters.GlobalCounters", "api_generated/village.pybpodapi.state_machine.global_timers", "api_generated/village.pybpodapi.state_machine.global_timers.GlobalTimers", "api_generated/village.pybpodapi.state_machine.state_machine_base", "api_generated/village.pybpodapi.state_machine.state_machine_base.SMAError", "api_generated/village.pybpodapi.state_machine.state_machine_base.StateMachineBase", "api_generated/village.pybpodapi.state_machine.state_machine_builder", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError", "api_generated/village.pybpodapi.state_machine.state_machine_runner", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError", "api_generated/village.pybpodapi.utils", "api_generated/village.pybpodapi.utils.csv", "api_generated/village.pybpodapi.utils.csv.Reader", "api_generated/village.pybpodapi.utils.csv.Writer", "api_generated/village.pybpodapi.utils.date_parser", "api_generated/village.pybpodapi.utils.date_parser.parse", "api_generated/village.screen", "api_generated/village.screen.behaviour_window", "api_generated/village.screen.behaviour_window.BehaviourWindow", "api_index", "assembly_of_mv/assembly_instructions", "assembly_of_mv/electronics_instructions", "assembly_of_mv/index", "assembly_of_mv/list_of_parts", "assembly_of_mv/software_installation", "getting_started", "index", "installation", "operation_of_mv/hardware_technical_details", "operation_of_mv/index", "operation_of_mv/software_overview", "results", "usage/alarms", "usage/index", "usage/maintenance", "usage/setup_experiment"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api_generated/village.classes.rst", "api_generated/village.classes.collection.rst", "api_generated/village.classes.collection.Collection.rst", "api_generated/village.classes.enums.rst", "api_generated/village.classes.enums.Actions.rst", "api_generated/village.classes.enums.Active.rst", "api_generated/village.classes.enums.AreaActive.rst", "api_generated/village.classes.enums.Color.rst", "api_generated/village.classes.enums.Cycle.rst", "api_generated/village.classes.enums.DataTable.rst", "api_generated/village.classes.enums.Info.rst", "api_generated/village.classes.enums.ScreenActive.rst", "api_generated/village.classes.enums.State.rst", "api_generated/village.classes.enums.SuperEnum.rst", "api_generated/village.classes.protocols.rst", "api_generated/village.classes.protocols.CameraProtocol.rst", "api_generated/village.classes.protocols.EventProtocol.rst", "api_generated/village.classes.protocols.PyBpodProtocol.rst", "api_generated/village.classes.protocols.ScaleProtocol.rst", "api_generated/village.classes.protocols.TelegramBotProtocol.rst", "api_generated/village.classes.protocols.TempSensorProtocol.rst", "api_generated/village.classes.settings_class.rst", "api_generated/village.classes.settings_class.Setting.rst", "api_generated/village.classes.settings_class.Settings.rst", "api_generated/village.classes.subject.rst", "api_generated/village.classes.subject.Subject.rst", "api_generated/village.classes.task.rst", "api_generated/village.classes.task.Event.rst", "api_generated/village.classes.task.Output.rst", "api_generated/village.classes.task.Task.rst", "api_generated/village.classes.task.TaskError.rst", "api_generated/village.classes.training.rst", "api_generated/village.classes.training.Settings.rst", "api_generated/village.classes.training.Training.rst", "api_generated/village.classes.training.TrainingError.rst", "api_generated/village.devices.rst", "api_generated/village.devices.bpod.rst", "api_generated/village.devices.bpod.PyBpod.rst", "api_generated/village.devices.bpod.Softcode.rst", "api_generated/village.devices.bpod.get_bpod.rst", "api_generated/village.devices.scale.rst", "api_generated/village.devices.scale.Scale.rst", "api_generated/village.devices.scale.get_scale.rst", "api_generated/village.devices.temp_sensor.rst", "api_generated/village.devices.temp_sensor.TempSensor.rst", "api_generated/village.devices.temp_sensor.get_temp_sensor.rst", "api_generated/village.gui.rst", "api_generated/village.pybpodapi.rst", "api_generated/village.pybpodapi.bpod.rst", "api_generated/village.pybpodapi.bpod.Bpod.rst", "api_generated/village.pybpodapi.bpod.bpod_base.rst", "api_generated/village.pybpodapi.bpod.bpod_base.BpodBase.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.rst", "api_generated/village.pybpodapi.bpod.bpod_io.rst", "api_generated/village.pybpodapi.bpod.bpod_io.BpodIO.rst", "api_generated/village.pybpodapi.bpod.hardware.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelName.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelType.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.Channels.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.EventsPositions.rst", "api_generated/village.pybpodapi.bpod.hardware.events.rst", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname.rst", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.rst", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events.rst", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events.EventName.rst", "api_generated/village.pybpodapi.bpod.hardware.hardware.rst", "api_generated/village.pybpodapi.bpod.hardware.hardware.Hardware.rst", "api_generated/village.pybpodapi.bpod.hardware.input_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.rst", "api_generated/village.pybpodapi.bpod.hardware.output_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.rst", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.rst", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive.rst", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream.rst", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.rst", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader.rst", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream.rst", "api_generated/village.pybpodapi.bpod.settings.rst", "api_generated/village.pybpodapi.bpod_modules.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_module.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_module.BpodModule.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_modules.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_modules.BpodModules.rst", "api_generated/village.pybpodapi.com.rst", "api_generated/village.pybpodapi.com.arcom.rst", "api_generated/village.pybpodapi.com.arcom.ArCOM.rst", "api_generated/village.pybpodapi.com.arcom.ArduinoTypes.rst", "api_generated/village.pybpodapi.com.arcom.DataType.rst", "api_generated/village.pybpodapi.com.messaging.rst", "api_generated/village.pybpodapi.com.messaging.base_message.rst", "api_generated/village.pybpodapi.com.messaging.base_message.BaseMessage.rst", "api_generated/village.pybpodapi.com.messaging.debug.rst", "api_generated/village.pybpodapi.com.messaging.debug.DebugMessage.rst", "api_generated/village.pybpodapi.com.messaging.end_trial.rst", "api_generated/village.pybpodapi.com.messaging.end_trial.EndTrial.rst", "api_generated/village.pybpodapi.com.messaging.error.rst", "api_generated/village.pybpodapi.com.messaging.error.ErrorMessage.rst", "api_generated/village.pybpodapi.com.messaging.event_occurrence.rst", "api_generated/village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.rst", "api_generated/village.pybpodapi.com.messaging.event_resume.rst", "api_generated/village.pybpodapi.com.messaging.event_resume.EventResume.rst", "api_generated/village.pybpodapi.com.messaging.parser.rst", "api_generated/village.pybpodapi.com.messaging.parser.MessageParser.rst", "api_generated/village.pybpodapi.com.messaging.session_info.rst", "api_generated/village.pybpodapi.com.messaging.session_info.SessionInfo.rst", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence.rst", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.rst", "api_generated/village.pybpodapi.com.messaging.state_occurrence.rst", "api_generated/village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.rst", "api_generated/village.pybpodapi.com.messaging.state_transition.rst", "api_generated/village.pybpodapi.com.messaging.state_transition.StateTransition.rst", "api_generated/village.pybpodapi.com.messaging.stderr.rst", "api_generated/village.pybpodapi.com.messaging.stderr.StderrMessage.rst", "api_generated/village.pybpodapi.com.messaging.stdout.rst", "api_generated/village.pybpodapi.com.messaging.stdout.StdoutMessage.rst", "api_generated/village.pybpodapi.com.messaging.trial.rst", "api_generated/village.pybpodapi.com.messaging.trial.Trial.rst", "api_generated/village.pybpodapi.com.messaging.untagged_message.rst", "api_generated/village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.rst", "api_generated/village.pybpodapi.com.messaging.value.rst", "api_generated/village.pybpodapi.com.messaging.value.ValueMessage.rst", "api_generated/village.pybpodapi.com.messaging.warning.rst", "api_generated/village.pybpodapi.com.messaging.warning.WarningMessage.rst", "api_generated/village.pybpodapi.com.protocol.rst", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers.rst", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.rst", "api_generated/village.pybpodapi.com.protocol.send_msg_headers.rst", "api_generated/village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.rst", "api_generated/village.pybpodapi.com.stderr_buffer.rst", "api_generated/village.pybpodapi.com.stderr_buffer.StderrBuffer.rst", "api_generated/village.pybpodapi.com.stdout_buffer.rst", "api_generated/village.pybpodapi.com.stdout_buffer.StdoutBuffer.rst", "api_generated/village.pybpodapi.exceptions.rst", "api_generated/village.pybpodapi.exceptions.bpod_error.rst", "api_generated/village.pybpodapi.exceptions.bpod_error.BpodErrorException.rst", "api_generated/village.pybpodapi.protocol.rst", "api_generated/village.pybpodapi.session.rst", "api_generated/village.pybpodapi.session.Session.rst", "api_generated/village.pybpodapi.session.StreamsWrapper.rst", "api_generated/village.pybpodapi.state_machine.rst", "api_generated/village.pybpodapi.state_machine.StateMachine.rst", "api_generated/village.pybpodapi.state_machine.conditions.rst", "api_generated/village.pybpodapi.state_machine.conditions.Conditions.rst", "api_generated/village.pybpodapi.state_machine.global_counters.rst", "api_generated/village.pybpodapi.state_machine.global_counters.GlobalCounters.rst", "api_generated/village.pybpodapi.state_machine.global_timers.rst", "api_generated/village.pybpodapi.state_machine.global_timers.GlobalTimers.rst", "api_generated/village.pybpodapi.state_machine.state_machine_base.rst", "api_generated/village.pybpodapi.state_machine.state_machine_base.SMAError.rst", "api_generated/village.pybpodapi.state_machine.state_machine_base.StateMachineBase.rst", "api_generated/village.pybpodapi.state_machine.state_machine_builder.rst", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.rst", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError.rst", "api_generated/village.pybpodapi.state_machine.state_machine_runner.rst", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.rst", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError.rst", "api_generated/village.pybpodapi.utils.rst", "api_generated/village.pybpodapi.utils.csv.rst", "api_generated/village.pybpodapi.utils.csv.Reader.rst", "api_generated/village.pybpodapi.utils.csv.Writer.rst", "api_generated/village.pybpodapi.utils.date_parser.rst", "api_generated/village.pybpodapi.utils.date_parser.parse.rst", "api_generated/village.screen.rst", "api_generated/village.screen.behaviour_window.rst", "api_generated/village.screen.behaviour_window.BehaviourWindow.rst", "api_index.rst", "assembly_of_mv/assembly_instructions.md", "assembly_of_mv/electronics_instructions.md", "assembly_of_mv/index.rst", "assembly_of_mv/list_of_parts.md", "assembly_of_mv/software_installation.md", "getting_started.md", "index.rst", "installation.md", "operation_of_mv/hardware_technical_details.md", "operation_of_mv/index.rst", "operation_of_mv/software_overview.md", "results.md", "usage/alarms.md", "usage/index.rst", "usage/maintenance.md", "usage/setup_experiment.md"], "indexentries": {"__init__() (actions method)": [[4, "village.classes.enums.Actions.__init__", false]], "__init__() (active method)": [[5, "village.classes.enums.Active.__init__", false]], "__init__() (arcom method)": [[91, "village.pybpodapi.com.arcom.ArCOM.__init__", false]], "__init__() (arduinotypes method)": [[92, "village.pybpodapi.com.arcom.ArduinoTypes.__init__", false]], "__init__() (areaactive method)": [[6, "village.classes.enums.AreaActive.__init__", false]], "__init__() (baseeventname method)": [[66, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.__init__", false]], "__init__() (basemessage method)": [[96, "village.pybpodapi.com.messaging.base_message.BaseMessage.__init__", false]], "__init__() (behaviourwindow method)": [[170, "village.screen.behaviour_window.BehaviourWindow.__init__", false]], "__init__() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.__init__", false]], "__init__() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.__init__", false]], "__init__() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.__init__", false]], "__init__() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.__init__", false]], "__init__() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.__init__", false]], "__init__() (bpodmodule method)": [[86, "village.pybpodapi.bpod_modules.bpod_module.BpodModule.__init__", false]], "__init__() (bpodmodules method)": [[88, "village.pybpodapi.bpod_modules.bpod_modules.BpodModules.__init__", false]], "__init__() (cameraprotocol method)": [[15, "village.classes.protocols.CameraProtocol.__init__", false]], "__init__() (channelname method)": [[60, "village.pybpodapi.bpod.hardware.channels.ChannelName.__init__", false]], "__init__() (channels method)": [[62, "village.pybpodapi.bpod.hardware.channels.Channels.__init__", false]], "__init__() (channeltype method)": [[61, "village.pybpodapi.bpod.hardware.channels.ChannelType.__init__", false]], "__init__() (collection method)": [[2, "village.classes.collection.Collection.__init__", false]], "__init__() (color method)": [[7, "village.classes.enums.Color.__init__", false]], "__init__() (conditions method)": [[148, "village.pybpodapi.state_machine.conditions.Conditions.__init__", false]], "__init__() (cycle method)": [[8, "village.classes.enums.Cycle.__init__", false]], "__init__() (datatable method)": [[9, "village.classes.enums.DataTable.__init__", false]], "__init__() (datatype method)": [[93, "village.pybpodapi.com.arcom.DataType.__init__", false]], "__init__() (debugmessage method)": [[98, "village.pybpodapi.com.messaging.debug.DebugMessage.__init__", false]], "__init__() (endtrial method)": [[100, "village.pybpodapi.com.messaging.end_trial.EndTrial.__init__", false]], "__init__() (errormessage method)": [[102, "village.pybpodapi.com.messaging.error.ErrorMessage.__init__", false]], "__init__() (event method)": [[27, "village.classes.task.Event.__init__", false]], "__init__() (eventname method)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.__init__", false]], "__init__() (eventoccurrence method)": [[104, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.__init__", false]], "__init__() (eventprotocol method)": [[16, "village.classes.protocols.EventProtocol.__init__", false]], "__init__() (eventresume method)": [[106, "village.pybpodapi.com.messaging.event_resume.EventResume.__init__", false]], "__init__() (eventspositions method)": [[63, "village.pybpodapi.bpod.hardware.channels.EventsPositions.__init__", false]], "__init__() (globalcounters method)": [[150, "village.pybpodapi.state_machine.global_counters.GlobalCounters.__init__", false]], "__init__() (globaltimers method)": [[152, "village.pybpodapi.state_machine.global_timers.GlobalTimers.__init__", false]], "__init__() (hardware method)": [[70, "village.pybpodapi.bpod.hardware.hardware.Hardware.__init__", false]], "__init__() (info method)": [[10, "village.classes.enums.Info.__init__", false]], "__init__() (inputname method)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.__init__", false]], "__init__() (messageparser method)": [[108, "village.pybpodapi.com.messaging.parser.MessageParser.__init__", false]], "__init__() (nonblockingsocketreceive method)": [[78, "village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive.__init__", false]], "__init__() (nonblockingstreamreader method)": [[81, "village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader.__init__", false]], "__init__() (output method)": [[28, "village.classes.task.Output.__init__", false]], "__init__() (outputchannel method)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.__init__", false]], "__init__() (pybpod method)": [[37, "village.devices.bpod.PyBpod.__init__", false]], "__init__() (pybpodprotocol method)": [[17, "village.classes.protocols.PyBpodProtocol.__init__", false]], "__init__() (reader method)": [[164, "village.pybpodapi.utils.csv.Reader.__init__", false]], "__init__() (receivemessageheader method)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.__init__", false]], "__init__() (scale method)": [[41, "village.devices.scale.Scale.__init__", false]], "__init__() (scaleprotocol method)": [[18, "village.classes.protocols.ScaleProtocol.__init__", false]], "__init__() (screenactive method)": [[11, "village.classes.enums.ScreenActive.__init__", false]], "__init__() (sendmessageheader method)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.__init__", false]], "__init__() (session method)": [[143, "village.pybpodapi.session.Session.__init__", false]], "__init__() (sessioninfo method)": [[110, "village.pybpodapi.com.messaging.session_info.SessionInfo.__init__", false]], "__init__() (setting method)": [[22, "village.classes.settings_class.Setting.__init__", false]], "__init__() (settings method)": [[23, "village.classes.settings_class.Settings.__init__", false], [32, "village.classes.training.Settings.__init__", false]], "__init__() (softcode method)": [[38, "village.devices.bpod.Softcode.__init__", false]], "__init__() (softcodeoccurrence method)": [[112, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.__init__", false]], "__init__() (state method)": [[12, "village.classes.enums.State.__init__", false]], "__init__() (statemachine method)": [[146, "village.pybpodapi.state_machine.StateMachine.__init__", false]], "__init__() (statemachinebase method)": [[155, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.__init__", false]], "__init__() (statemachinebuilder method)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.__init__", false]], "__init__() (statemachinerunner method)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.__init__", false]], "__init__() (stateoccurrence method)": [[114, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.__init__", false]], "__init__() (statetransition method)": [[116, "village.pybpodapi.com.messaging.state_transition.StateTransition.__init__", false]], "__init__() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.__init__", false]], "__init__() (stderrmessage method)": [[118, "village.pybpodapi.com.messaging.stderr.StderrMessage.__init__", false]], "__init__() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.__init__", false]], "__init__() (stdoutmessage method)": [[120, "village.pybpodapi.com.messaging.stdout.StdoutMessage.__init__", false]], "__init__() (streamswrapper method)": [[144, "village.pybpodapi.session.StreamsWrapper.__init__", false]], "__init__() (subject method)": [[25, "village.classes.subject.Subject.__init__", false]], "__init__() (superenum method)": [[13, "village.classes.enums.SuperEnum.__init__", false]], "__init__() (task method)": [[29, "village.classes.task.Task.__init__", false]], "__init__() (telegrambotprotocol method)": [[19, "village.classes.protocols.TelegramBotProtocol.__init__", false]], "__init__() (tempsensor method)": [[44, "village.devices.temp_sensor.TempSensor.__init__", false]], "__init__() (tempsensorprotocol method)": [[20, "village.classes.protocols.TempSensorProtocol.__init__", false]], "__init__() (training method)": [[33, "village.classes.training.Training.__init__", false]], "__init__() (trial method)": [[122, "village.pybpodapi.com.messaging.trial.Trial.__init__", false]], "__init__() (untaggedmessage method)": [[124, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.__init__", false]], "__init__() (valuemessage method)": [[126, "village.pybpodapi.com.messaging.value.ValueMessage.__init__", false]], "__init__() (warningmessage method)": [[128, "village.pybpodapi.com.messaging.warning.WarningMessage.__init__", false]], "__init__() (writer method)": [[165, "village.pybpodapi.utils.csv.Writer.__init__", false]], "actions (class in village.classes.enums)": [[4, "village.classes.enums.Actions", false]], "active (class in village.classes.enums)": [[5, "village.classes.enums.Active", false]], "add_state() (statemachine method)": [[146, "village.pybpodapi.state_machine.StateMachine.add_state", false]], "add_state() (statemachinebase method)": [[155, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.add_state", false]], "add_state() (statemachinebuilder method)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.add_state", false]], "add_state() (statemachinerunner method)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.add_state", false]], "arcom (class in village.pybpodapi.com.arcom)": [[91, "village.pybpodapi.com.arcom.ArCOM", false]], "arduinotypes (class in village.pybpodapi.com.arcom)": [[92, "village.pybpodapi.com.arcom.ArduinoTypes", false]], "areaactive (class in village.classes.enums)": [[6, "village.classes.enums.AreaActive", false]], "baseeventname (class in village.pybpodapi.bpod.hardware.events.base_eventname)": [[66, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName", false]], "basemessage (class in village.pybpodapi.com.messaging.base_message)": [[96, "village.pybpodapi.com.messaging.base_message.BaseMessage", false]], "behaviourwindow (class in village.screen.behaviour_window)": [[170, "village.screen.behaviour_window.BehaviourWindow", false]], "bnc (bpod.channelnames attribute)": [[49, "village.pybpodapi.bpod.Bpod.ChannelNames.BNC", false]], "bnc (bpodbase.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.BNC", false]], "bnc (bpodcomprotocol.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.BNC", false]], "bnc (bpodcomprotocolmodules.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.BNC", false]], "bnc (bpodio.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.BNC", false]], "bnc (channelname attribute)": [[60, "village.pybpodapi.bpod.hardware.channels.ChannelName.BNC", false]], "bnc1 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.BNC1", false]], "bnc1high (bpod.events attribute)": [[49, "village.pybpodapi.bpod.Bpod.Events.BNC1High", false]], "bnc1high (bpod.outputchannels attribute)": [[49, "village.pybpodapi.bpod.Bpod.OutputChannels.BNC1High", false]], "bnc1high (bpodbase.events attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.BNC1High", false]], "bnc1high (bpodbase.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.BNC1High", false]], "bnc1high (bpodcomprotocol.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.BNC1High", false]], "bnc1high (bpodcomprotocol.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.BNC1High", false]], "bnc1high (bpodcomprotocolmodules.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.BNC1High", false]], "bnc1high (bpodcomprotocolmodules.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.BNC1High", false]], "bnc1high (bpodio.events attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.BNC1High", false]], "bnc1high (bpodio.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.BNC1High", false]], "bnc1high (event attribute)": [[27, "village.classes.task.Event.BNC1High", false]], "bnc1high (eventname attribute)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.BNC1High", false]], "bnc1high (output attribute)": [[28, "village.classes.task.Output.BNC1High", false]], "bnc1high (outputchannel attribute)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.BNC1High", false]], "bnc2 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.BNC2", false]], "bpod (class in village.pybpodapi.bpod)": [[49, "village.pybpodapi.bpod.Bpod", false]], "bpod.channelnames (class in village.pybpodapi.bpod)": [[49, "village.pybpodapi.bpod.Bpod.ChannelNames", false]], "bpod.channeltypes (class in village.pybpodapi.bpod)": [[49, "village.pybpodapi.bpod.Bpod.ChannelTypes", false]], "bpod.events (class in village.pybpodapi.bpod)": [[49, "village.pybpodapi.bpod.Bpod.Events", false]], "bpod.outputchannels (class in village.pybpodapi.bpod)": [[49, "village.pybpodapi.bpod.Bpod.OutputChannels", false]], "bpodbase (class in village.pybpodapi.bpod.bpod_base)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase", false]], "bpodbase.channelnames (class in village.pybpodapi.bpod.bpod_base)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames", false]], "bpodbase.channeltypes (class in village.pybpodapi.bpod.bpod_base)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes", false]], "bpodbase.events (class in village.pybpodapi.bpod.bpod_base)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events", false]], "bpodbase.outputchannels (class in village.pybpodapi.bpod.bpod_base)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels", false]], "bpodcomprotocol (class in village.pybpodapi.bpod.bpod_com_protocol)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol", false]], "bpodcomprotocol.channelnames (class in village.pybpodapi.bpod.bpod_com_protocol)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames", false]], "bpodcomprotocol.channeltypes (class in village.pybpodapi.bpod.bpod_com_protocol)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes", false]], "bpodcomprotocol.events (class in village.pybpodapi.bpod.bpod_com_protocol)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events", false]], "bpodcomprotocol.outputchannels (class in village.pybpodapi.bpod.bpod_com_protocol)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels", false]], "bpodcomprotocolmodules (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules", false]], "bpodcomprotocolmodules.channelnames (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames", false]], "bpodcomprotocolmodules.channeltypes (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes", false]], "bpodcomprotocolmodules.events (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events", false]], "bpodcomprotocolmodules.outputchannels (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels", false]], "bpoderrorexception": [[140, "village.pybpodapi.exceptions.bpod_error.BpodErrorException", false]], "bpodio (class in village.pybpodapi.bpod.bpod_io)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO", false]], "bpodio.channelnames (class in village.pybpodapi.bpod.bpod_io)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames", false]], "bpodio.channeltypes (class in village.pybpodapi.bpod.bpod_io)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes", false]], "bpodio.events (class in village.pybpodapi.bpod.bpod_io)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events", false]], "bpodio.outputchannels (class in village.pybpodapi.bpod.bpod_io)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels", false]], "bpodmodule (class in village.pybpodapi.bpod_modules.bpod_module)": [[86, "village.pybpodapi.bpod_modules.bpod_module.BpodModule", false]], "bpodmodules (class in village.pybpodapi.bpod_modules.bpod_modules)": [[88, "village.pybpodapi.bpod_modules.bpod_modules.BpodModules", false]], "build_message() (statemachine method)": [[146, "village.pybpodapi.state_machine.StateMachine.build_message", false]], "build_message() (statemachinebuilder method)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.build_message", false]], "build_message() (statemachinerunner method)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.build_message", false]], "build_message_32_bits() (statemachine method)": [[146, "village.pybpodapi.state_machine.StateMachine.build_message_32_bits", false]], "build_message_32_bits() (statemachinebuilder method)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.build_message_32_bits", false]], "build_message_32_bits() (statemachinerunner method)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.build_message_32_bits", false]], "bytes_available() (arcom method)": [[91, "village.pybpodapi.com.arcom.ArCOM.bytes_available", false]], "cameraprotocol (class in village.classes.protocols)": [[15, "village.classes.protocols.CameraProtocol", false]], "channelname (class in village.pybpodapi.bpod.hardware.channels)": [[60, "village.pybpodapi.bpod.hardware.channels.ChannelName", false]], "channels (class in village.pybpodapi.bpod.hardware.channels)": [[62, "village.pybpodapi.bpod.hardware.channels.Channels", false]], "channeltype (class in village.pybpodapi.bpod.hardware.channels)": [[61, "village.pybpodapi.bpod.hardware.channels.ChannelType", false]], "check_type() (basemessage class method)": [[96, "village.pybpodapi.com.messaging.base_message.BaseMessage.check_type", false]], "check_type() (debugmessage class method)": [[98, "village.pybpodapi.com.messaging.debug.DebugMessage.check_type", false]], "check_type() (endtrial class method)": [[100, "village.pybpodapi.com.messaging.end_trial.EndTrial.check_type", false]], "check_type() (errormessage class method)": [[102, "village.pybpodapi.com.messaging.error.ErrorMessage.check_type", false]], "check_type() (eventoccurrence class method)": [[104, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.check_type", false]], "check_type() (eventresume class method)": [[106, "village.pybpodapi.com.messaging.event_resume.EventResume.check_type", false]], "check_type() (sessioninfo class method)": [[110, "village.pybpodapi.com.messaging.session_info.SessionInfo.check_type", false]], "check_type() (softcodeoccurrence class method)": [[112, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.check_type", false]], "check_type() (stateoccurrence class method)": [[114, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.check_type", false]], "check_type() (statetransition class method)": [[116, "village.pybpodapi.com.messaging.state_transition.StateTransition.check_type", false]], "check_type() (stderrmessage class method)": [[118, "village.pybpodapi.com.messaging.stderr.StderrMessage.check_type", false]], "check_type() (stdoutmessage class method)": [[120, "village.pybpodapi.com.messaging.stdout.StdoutMessage.check_type", false]], "check_type() (trial class method)": [[122, "village.pybpodapi.com.messaging.trial.Trial.check_type", false]], "check_type() (untaggedmessage class method)": [[124, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.check_type", false]], "check_type() (valuemessage class method)": [[126, "village.pybpodapi.com.messaging.value.ValueMessage.check_type", false]], "check_type() (warningmessage class method)": [[128, "village.pybpodapi.com.messaging.warning.WarningMessage.check_type", false]], "close() (arcom method)": [[91, "village.pybpodapi.com.arcom.ArCOM.close", false]], "close() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.close", false]], "close() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.close", false]], "close() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.close", false]], "close() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.close", false]], "close() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.close", false]], "close() (softcode method)": [[38, "village.devices.bpod.Softcode.close", false]], "close() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.close", false]], "close() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.close", false]], "collection (class in village.classes.collection)": [[2, "village.classes.collection.Collection", false]], "color (class in village.classes.enums)": [[7, "village.classes.enums.Color", false]], "condition1 (bpod.events attribute)": [[49, "village.pybpodapi.bpod.Bpod.Events.Condition1", false]], "condition1 (bpodbase.events attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Condition1", false]], "condition1 (bpodcomprotocol.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Condition1", false]], "condition1 (bpodcomprotocolmodules.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Condition1", false]], "condition1 (bpodio.events attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Condition1", false]], "condition1 (event attribute)": [[27, "village.classes.task.Event.Condition1", false]], "condition1 (eventname attribute)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Condition1", false]], "conditions (class in village.pybpodapi.state_machine.conditions)": [[148, "village.pybpodapi.state_machine.conditions.Conditions", false]], "current_trial (session property)": [[143, "village.pybpodapi.session.Session.current_trial", false]], "cycle (class in village.classes.enums)": [[8, "village.classes.enums.Cycle", false]], "data_available() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.data_available", false]], "data_available() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.data_available", false]], "data_available() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.data_available", false]], "data_available() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.data_available", false]], "datatable (class in village.classes.enums)": [[9, "village.classes.enums.DataTable", false]], "datatype (class in village.pybpodapi.com.arcom)": [[93, "village.pybpodapi.com.arcom.DataType", false]], "debugmessage (class in village.pybpodapi.com.messaging.debug)": [[98, "village.pybpodapi.com.messaging.debug.DebugMessage", false]], "detach() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.detach", false]], "detach() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.detach", false]], "disconnect (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.DISCONNECT", false]], "echo_softcode (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.ECHO_SOFTCODE", false]], "enable_ports (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.ENABLE_PORTS", false]], "enable_ports_ok (receivemessageheader attribute)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.ENABLE_PORTS_OK", false]], "encoding (stderrbuffer attribute)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.encoding", false]], "encoding (stdoutbuffer attribute)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.encoding", false]], "endtrial (class in village.pybpodapi.com.messaging.end_trial)": [[100, "village.pybpodapi.com.messaging.end_trial.EndTrial", false]], "errormessage (class in village.pybpodapi.com.messaging.error)": [[102, "village.pybpodapi.com.messaging.error.ErrorMessage", false]], "errors (stderrbuffer attribute)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.errors", false]], "errors (stdoutbuffer attribute)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.errors", false]], "event (class in village.classes.task)": [[27, "village.classes.task.Event", false]], "eventname (class in village.pybpodapi.bpod.hardware.events.bpod_events)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName", false]], "eventoccurrence (class in village.pybpodapi.com.messaging.event_occurrence)": [[104, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence", false]], "eventprotocol (class in village.classes.protocols)": [[16, "village.classes.protocols.EventProtocol", false]], "eventresume (class in village.pybpodapi.com.messaging.event_resume)": [[106, "village.pybpodapi.com.messaging.event_resume.EventResume", false]], "eventspositions (class in village.pybpodapi.bpod.hardware.channels)": [[63, "village.pybpodapi.bpod.hardware.channels.EventsPositions", false]], "exit_and_return (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.EXIT_AND_RETURN", false]], "fileno() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.fileno", false]], "fileno() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.fileno", false]], "find_module_by_name() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.find_module_by_name", false]], "find_module_by_name() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.find_module_by_name", false]], "find_module_by_name() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.find_module_by_name", false]], "find_module_by_name() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.find_module_by_name", false]], "find_module_by_name() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.find_module_by_name", false]], "firmware_version (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.FIRMWARE_VERSION", false]], "flush() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.flush", false]], "flush() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.flush", false]], "fromlist() (basemessage class method)": [[96, "village.pybpodapi.com.messaging.base_message.BaseMessage.fromlist", false]], "fromlist() (debugmessage class method)": [[98, "village.pybpodapi.com.messaging.debug.DebugMessage.fromlist", false]], "fromlist() (endtrial class method)": [[100, "village.pybpodapi.com.messaging.end_trial.EndTrial.fromlist", false]], "fromlist() (errormessage class method)": [[102, "village.pybpodapi.com.messaging.error.ErrorMessage.fromlist", false]], "fromlist() (eventoccurrence class method)": [[104, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.fromlist", false]], "fromlist() (eventresume class method)": [[106, "village.pybpodapi.com.messaging.event_resume.EventResume.fromlist", false]], "fromlist() (messageparser method)": [[108, "village.pybpodapi.com.messaging.parser.MessageParser.fromlist", false]], "fromlist() (sessioninfo class method)": [[110, "village.pybpodapi.com.messaging.session_info.SessionInfo.fromlist", false]], "fromlist() (softcodeoccurrence class method)": [[112, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.fromlist", false]], "fromlist() (stateoccurrence class method)": [[114, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.fromlist", false]], "fromlist() (statetransition class method)": [[116, "village.pybpodapi.com.messaging.state_transition.StateTransition.fromlist", false]], "fromlist() (stderrmessage class method)": [[118, "village.pybpodapi.com.messaging.stderr.StderrMessage.fromlist", false]], "fromlist() (stdoutmessage class method)": [[120, "village.pybpodapi.com.messaging.stdout.StdoutMessage.fromlist", false]], "fromlist() (trial class method)": [[122, "village.pybpodapi.com.messaging.trial.Trial.fromlist", false]], "fromlist() (untaggedmessage class method)": [[124, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.fromlist", false]], "fromlist() (valuemessage class method)": [[126, "village.pybpodapi.com.messaging.value.ValueMessage.fromlist", false]], "fromlist() (warningmessage class method)": [[128, "village.pybpodapi.com.messaging.warning.WarningMessage.fromlist", false]], "get() (settings method)": [[23, "village.classes.settings_class.Settings.get", false]], "get_all_timestamps_by_event() (trial method)": [[122, "village.pybpodapi.com.messaging.trial.Trial.get_all_timestamps_by_event", false]], "get_bpod() (in module village.devices.bpod)": [[39, "village.devices.bpod.get_bpod", false]], "get_description() (settings method)": [[23, "village.classes.settings_class.Settings.get_description", false]], "get_event_name() (channels method)": [[62, "village.pybpodapi.bpod.hardware.channels.Channels.get_event_name", false]], "get_events_names() (trial method)": [[122, "village.pybpodapi.com.messaging.trial.Trial.get_events_names", false]], "get_index() (settings method)": [[23, "village.classes.settings_class.Settings.get_index", false]], "get_indices() (settings method)": [[23, "village.classes.settings_class.Settings.get_indices", false]], "get_modules (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.GET_MODULES", false]], "get_scale() (in module village.devices.scale)": [[42, "village.devices.scale.get_scale", false]], "get_temp_sensor() (in module village.devices.temp_sensor)": [[45, "village.devices.temp_sensor.get_temp_sensor", false]], "get_text() (settings method)": [[23, "village.classes.settings_class.Settings.get_text", false]], "get_timestamp_transmission (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.GET_TIMESTAMP_TRANSMISSION", false]], "get_timestamps_by_event_name() (trial method)": [[122, "village.pybpodapi.com.messaging.trial.Trial.get_timestamps_by_event_name", false]], "get_type() (settings method)": [[23, "village.classes.settings_class.Settings.get_type", false]], "get_values() (settings method)": [[23, "village.classes.settings_class.Settings.get_values", false]], "getvalue() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.getvalue", false]], "getvalue() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.getvalue", false]], "globalcounter1end (bpod.events attribute)": [[49, "village.pybpodapi.bpod.Bpod.Events.GlobalCounter1End", false]], "globalcounter1end (bpodbase.events attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.GlobalCounter1End", false]], "globalcounter1end (bpodcomprotocol.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.GlobalCounter1End", false]], "globalcounter1end (bpodcomprotocolmodules.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.GlobalCounter1End", false]], "globalcounter1end (bpodio.events attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.GlobalCounter1End", false]], "globalcounter1end (event attribute)": [[27, "village.classes.task.Event.GlobalCounter1End", false]], "globalcounter1end (eventname attribute)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.GlobalCounter1End", false]], "globalcounterreset (bpod.outputchannels attribute)": [[49, "village.pybpodapi.bpod.Bpod.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodbase.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodcomprotocol.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodcomprotocolmodules.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodio.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (output attribute)": [[28, "village.classes.task.Output.GlobalCounterReset", false]], "globalcounterreset (outputchannel attribute)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.GlobalCounterReset", false]], "globalcounters (class in village.pybpodapi.state_machine.global_counters)": [[150, "village.pybpodapi.state_machine.global_counters.GlobalCounters", false]], "globaltimer1cancel (bpod.outputchannels attribute)": [[49, "village.pybpodapi.bpod.Bpod.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodbase.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodcomprotocol.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodcomprotocolmodules.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodio.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (output attribute)": [[28, "village.classes.task.Output.GlobalTimer1Cancel", false]], "globaltimer1cancel (outputchannel attribute)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.GlobalTimer1Cancel", false]], "globaltimer1end (bpod.events attribute)": [[49, "village.pybpodapi.bpod.Bpod.Events.GlobalTimer1End", false]], "globaltimer1end (bpodbase.events attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.GlobalTimer1End", false]], "globaltimer1end (bpodcomprotocol.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.GlobalTimer1End", false]], "globaltimer1end (bpodcomprotocolmodules.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.GlobalTimer1End", false]], "globaltimer1end (bpodio.events attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.GlobalTimer1End", false]], "globaltimer1end (event attribute)": [[27, "village.classes.task.Event.GlobalTimer1End", false]], "globaltimer1end (eventname attribute)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.GlobalTimer1End", false]], "globaltimer1start (bpod.events attribute)": [[49, "village.pybpodapi.bpod.Bpod.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodbase.events attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodcomprotocol.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodcomprotocolmodules.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodio.events attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.GlobalTimer1Start", false]], "globaltimer1start (event attribute)": [[27, "village.classes.task.Event.GlobalTimer1Start", false]], "globaltimer1start (eventname attribute)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.GlobalTimer1Start", false]], "globaltimer1trig (bpod.outputchannels attribute)": [[49, "village.pybpodapi.bpod.Bpod.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodbase.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodcomprotocol.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodcomprotocolmodules.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodio.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (output attribute)": [[28, "village.classes.task.Output.GlobalTimer1Trig", false]], "globaltimer1trig (outputchannel attribute)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.GlobalTimer1Trig", false]], "globaltimers (class in village.pybpodapi.state_machine.global_timers)": [[152, "village.pybpodapi.state_machine.global_timers.GlobalTimers", false]], "handshake (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.HANDSHAKE", false]], "handshake_ok (receivemessageheader attribute)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.HANDSHAKE_OK", false]], "hardware (class in village.pybpodapi.bpod.hardware.hardware)": [[70, "village.pybpodapi.bpod.hardware.hardware.Hardware", false]], "hardware_description (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.HARDWARE_DESCRIPTION", false]], "info (class in village.classes.enums)": [[10, "village.classes.enums.Info", false]], "input (bpod.channeltypes attribute)": [[49, "village.pybpodapi.bpod.Bpod.ChannelTypes.INPUT", false]], "input (bpodbase.channeltypes attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes.INPUT", false]], "input (bpodcomprotocol.channeltypes attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes.INPUT", false]], "input (bpodcomprotocolmodules.channeltypes attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes.INPUT", false]], "input (bpodio.channeltypes attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes.INPUT", false]], "input (channeltype attribute)": [[61, "village.pybpodapi.bpod.hardware.channels.ChannelType.INPUT", false]], "inputname (class in village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName", false]], "is_condition() (baseeventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_condition", false]], "is_condition() (bpod.events static method)": [[49, "village.pybpodapi.bpod.Bpod.Events.is_condition", false]], "is_condition() (bpodbase.events static method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_condition", false]], "is_condition() (bpodcomprotocol.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_condition", false]], "is_condition() (bpodcomprotocolmodules.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_condition", false]], "is_condition() (bpodio.events static method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_condition", false]], "is_condition() (event static method)": [[27, "village.classes.task.Event.is_condition", false]], "is_condition() (eventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_condition", false]], "is_global_counter_end() (baseeventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_counter_end", false]], "is_global_counter_end() (bpod.events static method)": [[49, "village.pybpodapi.bpod.Bpod.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodbase.events static method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodcomprotocol.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodcomprotocolmodules.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodio.events static method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_counter_end", false]], "is_global_counter_end() (event static method)": [[27, "village.classes.task.Event.is_global_counter_end", false]], "is_global_counter_end() (eventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_counter_end", false]], "is_global_timer_cancel() (baseeventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpod.events static method)": [[49, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodbase.events static method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodcomprotocol.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodcomprotocolmodules.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodio.events static method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (event static method)": [[27, "village.classes.task.Event.is_global_timer_cancel", false]], "is_global_timer_cancel() (eventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_cancel", false]], "is_global_timer_end() (baseeventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_end", false]], "is_global_timer_end() (bpod.events static method)": [[49, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodbase.events static method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodcomprotocol.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodcomprotocolmodules.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodio.events static method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_end", false]], "is_global_timer_end() (event static method)": [[27, "village.classes.task.Event.is_global_timer_end", false]], "is_global_timer_end() (eventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_end", false]], "is_global_timer_start() (baseeventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_start", false]], "is_global_timer_start() (bpod.events static method)": [[49, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodbase.events static method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodcomprotocol.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodcomprotocolmodules.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodio.events static method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_start", false]], "is_global_timer_start() (event static method)": [[27, "village.classes.task.Event.is_global_timer_start", false]], "is_global_timer_start() (eventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_start", false]], "is_global_timer_trigger() (baseeventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpod.events static method)": [[49, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodbase.events static method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodcomprotocol.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodcomprotocolmodules.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodio.events static method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (event static method)": [[27, "village.classes.task.Event.is_global_timer_trigger", false]], "is_global_timer_trigger() (eventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_trigger", false]], "is_state_timer() (baseeventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_state_timer", false]], "is_state_timer() (bpod.events static method)": [[49, "village.pybpodapi.bpod.Bpod.Events.is_state_timer", false]], "is_state_timer() (bpodbase.events static method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_state_timer", false]], "is_state_timer() (bpodcomprotocol.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_state_timer", false]], "is_state_timer() (bpodcomprotocolmodules.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_state_timer", false]], "is_state_timer() (bpodio.events static method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_state_timer", false]], "is_state_timer() (event static method)": [[27, "village.classes.task.Event.is_state_timer", false]], "is_state_timer() (eventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_state_timer", false]], "isatty() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.isatty", false]], "isatty() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.isatty", false]], "kill() (softcode method)": [[38, "village.devices.bpod.Softcode.kill", false]], "load_message() (bpodmodule method)": [[86, "village.pybpodapi.bpod_modules.bpod_module.BpodModule.load_message", false]], "load_serial_message (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.LOAD_SERIAL_MESSAGE", false]], "load_serial_message() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.load_serial_message", false]], "load_serial_message() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.load_serial_message", false]], "load_serial_message() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.load_serial_message", false]], "load_serial_message() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.load_serial_message", false]], "load_serial_message() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.load_serial_message", false]], "load_serial_message_ok (receivemessageheader attribute)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.LOAD_SERIAL_MESSAGE_OK", false]], "loop_handler() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.loop_handler", false]], "loop_handler() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.loop_handler", false]], "loop_handler() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.loop_handler", false]], "loop_handler() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.loop_handler", false]], "loop_handler() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.loop_handler", false]], "manual_override() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.manual_override", false]], "manual_override() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.manual_override", false]], "manual_override() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.manual_override", false]], "manual_override() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.manual_override", false]], "manual_override_exec_event (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.MANUAL_OVERRIDE_EXEC_EVENT", false]], "messageparser (class in village.pybpodapi.com.messaging.parser)": [[108, "village.pybpodapi.com.messaging.parser.MessageParser", false]], "module": [[0, "module-village.classes", false], [1, "module-village.classes.collection", false], [3, "module-village.classes.enums", false], [14, "module-village.classes.protocols", false], [21, "module-village.classes.settings_class", false], [24, "module-village.classes.subject", false], [26, "module-village.classes.task", false], [31, "module-village.classes.training", false], [35, "module-village.devices", false], [36, "module-village.devices.bpod", false], [40, "module-village.devices.scale", false], [43, "module-village.devices.temp_sensor", false], [46, "module-village.gui", false], [47, "module-village.pybpodapi", false], [48, "module-village.pybpodapi.bpod", false], [50, "module-village.pybpodapi.bpod.bpod_base", false], [52, "module-village.pybpodapi.bpod.bpod_com_protocol", false], [54, "module-village.pybpodapi.bpod.bpod_com_protocol_modules", false], [56, "module-village.pybpodapi.bpod.bpod_io", false], [58, "module-village.pybpodapi.bpod.hardware", false], [59, "module-village.pybpodapi.bpod.hardware.channels", false], [64, "module-village.pybpodapi.bpod.hardware.events", false], [65, "module-village.pybpodapi.bpod.hardware.events.base_eventname", false], [67, "module-village.pybpodapi.bpod.hardware.events.bpod_events", false], [69, "module-village.pybpodapi.bpod.hardware.hardware", false], [71, "module-village.pybpodapi.bpod.hardware.input_channels", false], [72, "module-village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels", false], [74, "module-village.pybpodapi.bpod.hardware.output_channels", false], [75, "module-village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels", false], [77, "module-village.pybpodapi.bpod.non_blockingsocketreceive", false], [80, "module-village.pybpodapi.bpod.non_blockingstreamreader", false], [83, "module-village.pybpodapi.bpod.settings", false], [84, "module-village.pybpodapi.bpod_modules", false], [85, "module-village.pybpodapi.bpod_modules.bpod_module", false], [87, "module-village.pybpodapi.bpod_modules.bpod_modules", false], [89, "module-village.pybpodapi.com", false], [90, "module-village.pybpodapi.com.arcom", false], [94, "module-village.pybpodapi.com.messaging", false], [95, "module-village.pybpodapi.com.messaging.base_message", false], [97, "module-village.pybpodapi.com.messaging.debug", false], [99, "module-village.pybpodapi.com.messaging.end_trial", false], [101, "module-village.pybpodapi.com.messaging.error", false], [103, "module-village.pybpodapi.com.messaging.event_occurrence", false], [105, "module-village.pybpodapi.com.messaging.event_resume", false], [107, "module-village.pybpodapi.com.messaging.parser", false], [109, "module-village.pybpodapi.com.messaging.session_info", false], [111, "module-village.pybpodapi.com.messaging.softcode_occurrence", false], [113, "module-village.pybpodapi.com.messaging.state_occurrence", false], [115, "module-village.pybpodapi.com.messaging.state_transition", false], [117, "module-village.pybpodapi.com.messaging.stderr", false], [119, "module-village.pybpodapi.com.messaging.stdout", false], [121, "module-village.pybpodapi.com.messaging.trial", false], [123, "module-village.pybpodapi.com.messaging.untagged_message", false], [125, "module-village.pybpodapi.com.messaging.value", false], [127, "module-village.pybpodapi.com.messaging.warning", false], [129, "module-village.pybpodapi.com.protocol", false], [130, "module-village.pybpodapi.com.protocol.recv_msg_headers", false], [132, "module-village.pybpodapi.com.protocol.send_msg_headers", false], [134, "module-village.pybpodapi.com.stderr_buffer", false], [136, "module-village.pybpodapi.com.stdout_buffer", false], [138, "module-village.pybpodapi.exceptions", false], [139, "module-village.pybpodapi.exceptions.bpod_error", false], [141, "module-village.pybpodapi.protocol", false], [142, "module-village.pybpodapi.session", false], [145, "module-village.pybpodapi.state_machine", false], [147, "module-village.pybpodapi.state_machine.conditions", false], [149, "module-village.pybpodapi.state_machine.global_counters", false], [151, "module-village.pybpodapi.state_machine.global_timers", false], [153, "module-village.pybpodapi.state_machine.state_machine_base", false], [156, "module-village.pybpodapi.state_machine.state_machine_builder", false], [159, "module-village.pybpodapi.state_machine.state_machine_runner", false], [162, "module-village.pybpodapi.utils", false], [163, "module-village.pybpodapi.utils.csv", false], [166, "module-village.pybpodapi.utils.date_parser", false], [168, "module-village.screen", false], [169, "module-village.screen.behaviour_window", false]], "module_event_names (receivemessageheader attribute)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.MODULE_EVENT_NAMES", false]], "module_requested_event (receivemessageheader attribute)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.MODULE_REQUESTED_EVENT", false]], "new_state_matrix (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.NEW_STATE_MATRIX", false]], "newlines (stderrbuffer attribute)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.newlines", false]], "newlines (stdoutbuffer attribute)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.newlines", false]], "nonblockingsocketreceive (class in village.pybpodapi.bpod.non_blockingsocketreceive)": [[78, "village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive", false]], "nonblockingstreamreader (class in village.pybpodapi.bpod.non_blockingstreamreader)": [[81, "village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader", false]], "open() (arcom method)": [[91, "village.pybpodapi.com.arcom.ArCOM.open", false]], "open() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.open", false]], "open() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.open", false]], "open() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.open", false]], "open() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.open", false]], "open() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.open", false]], "output (bpod.channeltypes attribute)": [[49, "village.pybpodapi.bpod.Bpod.ChannelTypes.OUTPUT", false]], "output (bpodbase.channeltypes attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes.OUTPUT", false]], "output (bpodcomprotocol.channeltypes attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes.OUTPUT", false]], "output (bpodcomprotocolmodules.channeltypes attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes.OUTPUT", false]], "output (bpodio.channeltypes attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes.OUTPUT", false]], "output (channeltype attribute)": [[61, "village.pybpodapi.bpod.hardware.channels.ChannelType.OUTPUT", false]], "output (class in village.classes.task)": [[28, "village.classes.task.Output", false]], "outputchannel (class in village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel", false]], "override_digital_hw_state (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.OVERRIDE_DIGITAL_HW_STATE", false]], "pa1_port1in (bpod.events attribute)": [[49, "village.pybpodapi.bpod.Bpod.Events.PA1_Port1In", false]], "pa1_port1in (bpodbase.events attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.PA1_Port1In", false]], "pa1_port1in (bpodcomprotocol.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.PA1_Port1In", false]], "pa1_port1in (bpodcomprotocolmodules.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.PA1_Port1In", false]], "pa1_port1in (bpodio.events attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.PA1_Port1In", false]], "pa1_port1in (event attribute)": [[27, "village.classes.task.Event.PA1_Port1In", false]], "pa1_port1in (eventname attribute)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.PA1_Port1In", false]], "parse() (in module village.pybpodapi.utils.date_parser)": [[167, "village.pybpodapi.utils.date_parser.parse", false]], "port1 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port1", false]], "port1in (bpod.events attribute)": [[49, "village.pybpodapi.bpod.Bpod.Events.Port1In", false]], "port1in (bpodbase.events attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Port1In", false]], "port1in (bpodcomprotocol.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Port1In", false]], "port1in (bpodcomprotocolmodules.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Port1In", false]], "port1in (bpodio.events attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Port1In", false]], "port1in (event attribute)": [[27, "village.classes.task.Event.Port1In", false]], "port1in (eventname attribute)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Port1In", false]], "port2 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port2", false]], "port3 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port3", false]], "port4 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port4", false]], "port5 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port5", false]], "port6 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port6", false]], "port7 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port7", false]], "port8 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port8", false]], "pwm (bpod.channelnames attribute)": [[49, "village.pybpodapi.bpod.Bpod.ChannelNames.PWM", false]], "pwm (bpodbase.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.PWM", false]], "pwm (bpodcomprotocol.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.PWM", false]], "pwm (bpodcomprotocolmodules.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.PWM", false]], "pwm (bpodio.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.PWM", false]], "pwm (channelname attribute)": [[60, "village.pybpodapi.bpod.hardware.channels.ChannelName.PWM", false]], "pybpod (class in village.devices.bpod)": [[37, "village.devices.bpod.PyBpod", false]], "pybpodprotocol (class in village.classes.protocols)": [[17, "village.classes.protocols.PyBpodProtocol", false]], "read() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.read", false]], "read() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.read", false]], "readable() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.readable", false]], "readable() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.readable", false]], "reader (class in village.pybpodapi.utils.csv)": [[164, "village.pybpodapi.utils.csv.Reader", false]], "readline() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.readline", false]], "readline() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.readline", false]], "readlines() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.readlines", false]], "readlines() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.readlines", false]], "receivemessageheader (class in village.pybpodapi.com.protocol.recv_msg_headers)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader", false]], "reset_clock (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.RESET_CLOCK", false]], "reset_serial_messages (receivemessageheader attribute)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.RESET_SERIAL_MESSAGES", false]], "reset_serial_messages (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.RESET_SERIAL_MESSAGES", false]], "reset_serial_messages() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.reset_serial_messages", false]], "reset_serial_messages() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.reset_serial_messages", false]], "reset_serial_messages() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.reset_serial_messages", false]], "reset_serial_messages() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.reset_serial_messages", false]], "reset_serial_messages() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.reset_serial_messages", false]], "run_state_machine (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.RUN_STATE_MACHINE", false]], "run_state_machine() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.run_state_machine", false]], "run_state_machine() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.run_state_machine", false]], "run_state_machine() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.run_state_machine", false]], "run_state_machine() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.run_state_machine", false]], "run_state_machine() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.run_state_machine", false]], "scale (class in village.devices.scale)": [[41, "village.devices.scale.Scale", false]], "scaleprotocol (class in village.classes.protocols)": [[18, "village.classes.protocols.ScaleProtocol", false]], "screenactive (class in village.classes.enums)": [[11, "village.classes.enums.ScreenActive", false]], "seek() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.seek", false]], "seek() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.seek", false]], "seekable() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.seekable", false]], "seekable() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.seekable", false]], "send() (softcode method)": [[38, "village.devices.bpod.Softcode.send", false]], "send_state_machine() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.send_state_machine", false]], "send_state_machine() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.send_state_machine", false]], "send_state_machine() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.send_state_machine", false]], "send_state_machine() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.send_state_machine", false]], "send_state_machine() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.send_state_machine", false]], "send_to_hw_serial (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.SEND_TO_HW_SERIAL", false]], "sendmessageheader (class in village.pybpodapi.com.protocol.send_msg_headers)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader", false]], "serial (bpod.channelnames attribute)": [[49, "village.pybpodapi.bpod.Bpod.ChannelNames.SERIAL", false]], "serial (bpodbase.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.SERIAL", false]], "serial (bpodcomprotocol.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.SERIAL", false]], "serial (bpodcomprotocolmodules.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.SERIAL", false]], "serial (bpodio.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.SERIAL", false]], "serial (channelname attribute)": [[60, "village.pybpodapi.bpod.hardware.channels.ChannelName.SERIAL", false]], "serial1 (bpod.outputchannels attribute)": [[49, "village.pybpodapi.bpod.Bpod.OutputChannels.Serial1", false]], "serial1 (bpodbase.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.Serial1", false]], "serial1 (bpodcomprotocol.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.Serial1", false]], "serial1 (bpodcomprotocolmodules.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.Serial1", false]], "serial1 (bpodio.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.Serial1", false]], "serial1 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Serial1", false]], "serial1 (output attribute)": [[28, "village.classes.task.Output.Serial1", false]], "serial1 (outputchannel attribute)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.Serial1", false]], "serial2 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Serial2", false]], "serial3 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Serial3", false]], "session (class in village.pybpodapi.session)": [[143, "village.pybpodapi.session.Session", false]], "sessioninfo (class in village.pybpodapi.com.messaging.session_info)": [[110, "village.pybpodapi.com.messaging.session_info.SessionInfo", false]], "set_condition() (statemachine method)": [[146, "village.pybpodapi.state_machine.StateMachine.set_condition", false]], "set_condition() (statemachinebase method)": [[155, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_condition", false]], "set_condition() (statemachinebuilder method)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_condition", false]], "set_condition() (statemachinerunner method)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_condition", false]], "set_global_counter() (statemachine method)": [[146, "village.pybpodapi.state_machine.StateMachine.set_global_counter", false]], "set_global_counter() (statemachinebase method)": [[155, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_global_counter", false]], "set_global_counter() (statemachinebuilder method)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_global_counter", false]], "set_global_counter() (statemachinerunner method)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_global_counter", false]], "set_global_timer() (statemachine method)": [[146, "village.pybpodapi.state_machine.StateMachine.set_global_timer", false]], "set_global_timer() (statemachinebase method)": [[155, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_global_timer", false]], "set_global_timer() (statemachinebuilder method)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_global_timer", false]], "set_global_timer() (statemachinerunner method)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_global_timer", false]], "set_global_timer_legacy() (statemachine method)": [[146, "village.pybpodapi.state_machine.StateMachine.set_global_timer_legacy", false]], "set_global_timer_legacy() (statemachinebase method)": [[155, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_global_timer_legacy", false]], "set_global_timer_legacy() (statemachinebuilder method)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_global_timer_legacy", false]], "set_global_timer_legacy() (statemachinerunner method)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_global_timer_legacy", false]], "set_module_relay (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.SET_MODULE_RELAY", false]], "setting (class in village.classes.settings_class)": [[22, "village.classes.settings_class.Setting", false]], "settings (class in village.classes.settings_class)": [[23, "village.classes.settings_class.Settings", false]], "settings (class in village.classes.training)": [[32, "village.classes.training.Settings", false]], "setup() (hardware method)": [[70, "village.pybpodapi.bpod.hardware.hardware.Hardware.setup", false]], "setup_input_channels() (channels method)": [[62, "village.pybpodapi.bpod.hardware.channels.Channels.setup_input_channels", false]], "setup_output_channels() (channels method)": [[62, "village.pybpodapi.bpod.hardware.channels.Channels.setup_output_channels", false]], "smaerror": [[154, "village.pybpodapi.state_machine.state_machine_base.SMAError", false]], "softcode (class in village.devices.bpod)": [[38, "village.devices.bpod.Softcode", false]], "softcode1 (bpod.outputchannels attribute)": [[49, "village.pybpodapi.bpod.Bpod.OutputChannels.SoftCode1", false]], "softcode1 (bpodbase.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.SoftCode1", false]], "softcode1 (bpodcomprotocol.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.SoftCode1", false]], "softcode1 (bpodcomprotocolmodules.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.SoftCode1", false]], "softcode1 (bpodio.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.SoftCode1", false]], "softcode1 (output attribute)": [[28, "village.classes.task.Output.SoftCode1", false]], "softcode1 (outputchannel attribute)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.SoftCode1", false]], "softcode_handler_function() (bpod method)": [[49, "village.pybpodapi.bpod.Bpod.softcode_handler_function", false]], "softcode_handler_function() (bpodbase method)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.softcode_handler_function", false]], "softcode_handler_function() (bpodcomprotocol method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.softcode_handler_function", false]], "softcode_handler_function() (bpodcomprotocolmodules method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.softcode_handler_function", false]], "softcode_handler_function() (bpodio method)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.softcode_handler_function", false]], "softcodeoccurrence (class in village.pybpodapi.com.messaging.softcode_occurrence)": [[112, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence", false]], "state (class in village.classes.enums)": [[12, "village.classes.enums.State", false]], "state_machine_installation_status (receivemessageheader attribute)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.STATE_MACHINE_INSTALLATION_STATUS", false]], "statemachine (class in village.pybpodapi.state_machine)": [[146, "village.pybpodapi.state_machine.StateMachine", false]], "statemachinebase (class in village.pybpodapi.state_machine.state_machine_base)": [[155, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase", false]], "statemachinebuilder (class in village.pybpodapi.state_machine.state_machine_builder)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder", false]], "statemachinebuildererror": [[158, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError", false]], "statemachinerunner (class in village.pybpodapi.state_machine.state_machine_runner)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner", false]], "statemachinerunnererror": [[161, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError", false]], "stateoccurrence (class in village.pybpodapi.com.messaging.state_occurrence)": [[114, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence", false]], "statetransition (class in village.pybpodapi.com.messaging.state_transition)": [[116, "village.pybpodapi.com.messaging.state_transition.StateTransition", false]], "stderrbuffer (class in village.pybpodapi.com.stderr_buffer)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer", false]], "stderrmessage (class in village.pybpodapi.com.messaging.stderr)": [[118, "village.pybpodapi.com.messaging.stderr.StderrMessage", false]], "stdoutbuffer (class in village.pybpodapi.com.stdout_buffer)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer", false]], "stdoutmessage (class in village.pybpodapi.com.messaging.stdout)": [[120, "village.pybpodapi.com.messaging.stdout.StdoutMessage", false]], "streamswrapper (class in village.pybpodapi.session)": [[144, "village.pybpodapi.session.StreamsWrapper", false]], "subject (class in village.classes.subject)": [[25, "village.classes.subject.Subject", false]], "superenum (class in village.classes.enums)": [[13, "village.classes.enums.SuperEnum", false]], "sync_channel_mode (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.SYNC_CHANNEL_MODE", false]], "sync_channel_mode_ok (receivemessageheader attribute)": [[131, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.SYNC_CHANNEL_MODE_OK", false]], "task (class in village.classes.task)": [[29, "village.classes.task.Task", false]], "taskerror": [[30, "village.classes.task.TaskError", false]], "telegrambotprotocol (class in village.classes.protocols)": [[19, "village.classes.protocols.TelegramBotProtocol", false]], "tell() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.tell", false]], "tell() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.tell", false]], "tempsensor (class in village.devices.temp_sensor)": [[44, "village.devices.temp_sensor.TempSensor", false]], "tempsensorprotocol (class in village.classes.protocols)": [[20, "village.classes.protocols.TempSensorProtocol", false]], "training (class in village.classes.training)": [[33, "village.classes.training.Training", false]], "trainingerror": [[34, "village.classes.training.TrainingError", false]], "trial (class in village.pybpodapi.com.messaging.trial)": [[122, "village.pybpodapi.com.messaging.trial.Trial", false]], "trigger_softcode (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.TRIGGER_SOFTCODE", false]], "truncate() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.truncate", false]], "truncate() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.truncate", false]], "tup (bpod.events attribute)": [[49, "village.pybpodapi.bpod.Bpod.Events.Tup", false]], "tup (bpodbase.events attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Tup", false]], "tup (bpodcomprotocol.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Tup", false]], "tup (bpodcomprotocolmodules.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Tup", false]], "tup (bpodio.events attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Tup", false]], "tup (event attribute)": [[27, "village.classes.task.Event.Tup", false]], "tup (eventname attribute)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Tup", false]], "unexpectedendofstream": [[79, "village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream", false], [82, "village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream", false]], "untaggedmessage (class in village.pybpodapi.com.messaging.untagged_message)": [[124, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage", false]], "update_state_numbers() (statemachine method)": [[146, "village.pybpodapi.state_machine.StateMachine.update_state_numbers", false]], "update_state_numbers() (statemachinebuilder method)": [[157, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.update_state_numbers", false]], "update_state_numbers() (statemachinerunner method)": [[160, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.update_state_numbers", false]], "usb1 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.USB1", false]], "valuemessage (class in village.pybpodapi.com.messaging.value)": [[126, "village.pybpodapi.com.messaging.value.ValueMessage", false]], "valve (bpod.channelnames attribute)": [[49, "village.pybpodapi.bpod.Bpod.ChannelNames.VALVE", false]], "valve (bpod.outputchannels attribute)": [[49, "village.pybpodapi.bpod.Bpod.OutputChannels.Valve", false]], "valve (bpodbase.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.VALVE", false]], "valve (bpodbase.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.Valve", false]], "valve (bpodcomprotocol.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.VALVE", false]], "valve (bpodcomprotocol.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.Valve", false]], "valve (bpodcomprotocolmodules.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.VALVE", false]], "valve (bpodcomprotocolmodules.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.Valve", false]], "valve (bpodio.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.VALVE", false]], "valve (bpodio.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.Valve", false]], "valve (channelname attribute)": [[60, "village.pybpodapi.bpod.hardware.channels.ChannelName.VALVE", false]], "valve (output attribute)": [[28, "village.classes.task.Output.Valve", false]], "valve (outputchannel attribute)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.Valve", false]], "village.classes": [[0, "module-village.classes", false]], "village.classes.collection": [[1, "module-village.classes.collection", false]], "village.classes.enums": [[3, "module-village.classes.enums", false]], "village.classes.protocols": [[14, "module-village.classes.protocols", false]], "village.classes.settings_class": [[21, "module-village.classes.settings_class", false]], "village.classes.subject": [[24, "module-village.classes.subject", false]], "village.classes.task": [[26, "module-village.classes.task", false]], "village.classes.training": [[31, "module-village.classes.training", false]], "village.devices": [[35, "module-village.devices", false]], "village.devices.bpod": [[36, "module-village.devices.bpod", false]], "village.devices.scale": [[40, "module-village.devices.scale", false]], "village.devices.temp_sensor": [[43, "module-village.devices.temp_sensor", false]], "village.gui": [[46, "module-village.gui", false]], "village.pybpodapi": [[47, "module-village.pybpodapi", false]], "village.pybpodapi.bpod": [[48, "module-village.pybpodapi.bpod", false]], "village.pybpodapi.bpod.bpod_base": [[50, "module-village.pybpodapi.bpod.bpod_base", false]], "village.pybpodapi.bpod.bpod_com_protocol": [[52, "module-village.pybpodapi.bpod.bpod_com_protocol", false]], "village.pybpodapi.bpod.bpod_com_protocol_modules": [[54, "module-village.pybpodapi.bpod.bpod_com_protocol_modules", false]], "village.pybpodapi.bpod.bpod_io": [[56, "module-village.pybpodapi.bpod.bpod_io", false]], "village.pybpodapi.bpod.hardware": [[58, "module-village.pybpodapi.bpod.hardware", false]], "village.pybpodapi.bpod.hardware.channels": [[59, "module-village.pybpodapi.bpod.hardware.channels", false]], "village.pybpodapi.bpod.hardware.events": [[64, "module-village.pybpodapi.bpod.hardware.events", false]], "village.pybpodapi.bpod.hardware.events.base_eventname": [[65, "module-village.pybpodapi.bpod.hardware.events.base_eventname", false]], "village.pybpodapi.bpod.hardware.events.bpod_events": [[67, "module-village.pybpodapi.bpod.hardware.events.bpod_events", false]], "village.pybpodapi.bpod.hardware.hardware": [[69, "module-village.pybpodapi.bpod.hardware.hardware", false]], "village.pybpodapi.bpod.hardware.input_channels": [[71, "module-village.pybpodapi.bpod.hardware.input_channels", false]], "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels": [[72, "module-village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels", false]], "village.pybpodapi.bpod.hardware.output_channels": [[74, "module-village.pybpodapi.bpod.hardware.output_channels", false]], "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels": [[75, "module-village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels", false]], "village.pybpodapi.bpod.non_blockingsocketreceive": [[77, "module-village.pybpodapi.bpod.non_blockingsocketreceive", false]], "village.pybpodapi.bpod.non_blockingstreamreader": [[80, "module-village.pybpodapi.bpod.non_blockingstreamreader", false]], "village.pybpodapi.bpod.settings": [[83, "module-village.pybpodapi.bpod.settings", false]], "village.pybpodapi.bpod_modules": [[84, "module-village.pybpodapi.bpod_modules", false]], "village.pybpodapi.bpod_modules.bpod_module": [[85, "module-village.pybpodapi.bpod_modules.bpod_module", false]], "village.pybpodapi.bpod_modules.bpod_modules": [[87, "module-village.pybpodapi.bpod_modules.bpod_modules", false]], "village.pybpodapi.com": [[89, "module-village.pybpodapi.com", false]], "village.pybpodapi.com.arcom": [[90, "module-village.pybpodapi.com.arcom", false]], "village.pybpodapi.com.messaging": [[94, "module-village.pybpodapi.com.messaging", false]], "village.pybpodapi.com.messaging.base_message": [[95, "module-village.pybpodapi.com.messaging.base_message", false]], "village.pybpodapi.com.messaging.debug": [[97, "module-village.pybpodapi.com.messaging.debug", false]], "village.pybpodapi.com.messaging.end_trial": [[99, "module-village.pybpodapi.com.messaging.end_trial", false]], "village.pybpodapi.com.messaging.error": [[101, "module-village.pybpodapi.com.messaging.error", false]], "village.pybpodapi.com.messaging.event_occurrence": [[103, "module-village.pybpodapi.com.messaging.event_occurrence", false]], "village.pybpodapi.com.messaging.event_resume": [[105, "module-village.pybpodapi.com.messaging.event_resume", false]], "village.pybpodapi.com.messaging.parser": [[107, "module-village.pybpodapi.com.messaging.parser", false]], "village.pybpodapi.com.messaging.session_info": [[109, "module-village.pybpodapi.com.messaging.session_info", false]], "village.pybpodapi.com.messaging.softcode_occurrence": [[111, "module-village.pybpodapi.com.messaging.softcode_occurrence", false]], "village.pybpodapi.com.messaging.state_occurrence": [[113, "module-village.pybpodapi.com.messaging.state_occurrence", false]], "village.pybpodapi.com.messaging.state_transition": [[115, "module-village.pybpodapi.com.messaging.state_transition", false]], "village.pybpodapi.com.messaging.stderr": [[117, "module-village.pybpodapi.com.messaging.stderr", false]], "village.pybpodapi.com.messaging.stdout": [[119, "module-village.pybpodapi.com.messaging.stdout", false]], "village.pybpodapi.com.messaging.trial": [[121, "module-village.pybpodapi.com.messaging.trial", false]], "village.pybpodapi.com.messaging.untagged_message": [[123, "module-village.pybpodapi.com.messaging.untagged_message", false]], "village.pybpodapi.com.messaging.value": [[125, "module-village.pybpodapi.com.messaging.value", false]], "village.pybpodapi.com.messaging.warning": [[127, "module-village.pybpodapi.com.messaging.warning", false]], "village.pybpodapi.com.protocol": [[129, "module-village.pybpodapi.com.protocol", false]], "village.pybpodapi.com.protocol.recv_msg_headers": [[130, "module-village.pybpodapi.com.protocol.recv_msg_headers", false]], "village.pybpodapi.com.protocol.send_msg_headers": [[132, "module-village.pybpodapi.com.protocol.send_msg_headers", false]], "village.pybpodapi.com.stderr_buffer": [[134, "module-village.pybpodapi.com.stderr_buffer", false]], "village.pybpodapi.com.stdout_buffer": [[136, "module-village.pybpodapi.com.stdout_buffer", false]], "village.pybpodapi.exceptions": [[138, "module-village.pybpodapi.exceptions", false]], "village.pybpodapi.exceptions.bpod_error": [[139, "module-village.pybpodapi.exceptions.bpod_error", false]], "village.pybpodapi.protocol": [[141, "module-village.pybpodapi.protocol", false]], "village.pybpodapi.session": [[142, "module-village.pybpodapi.session", false]], "village.pybpodapi.state_machine": [[145, "module-village.pybpodapi.state_machine", false]], "village.pybpodapi.state_machine.conditions": [[147, "module-village.pybpodapi.state_machine.conditions", false]], "village.pybpodapi.state_machine.global_counters": [[149, "module-village.pybpodapi.state_machine.global_counters", false]], "village.pybpodapi.state_machine.global_timers": [[151, "module-village.pybpodapi.state_machine.global_timers", false]], "village.pybpodapi.state_machine.state_machine_base": [[153, "module-village.pybpodapi.state_machine.state_machine_base", false]], "village.pybpodapi.state_machine.state_machine_builder": [[156, "module-village.pybpodapi.state_machine.state_machine_builder", false]], "village.pybpodapi.state_machine.state_machine_runner": [[159, "module-village.pybpodapi.state_machine.state_machine_runner", false]], "village.pybpodapi.utils": [[162, "module-village.pybpodapi.utils", false]], "village.pybpodapi.utils.csv": [[163, "module-village.pybpodapi.utils.csv", false]], "village.pybpodapi.utils.date_parser": [[166, "module-village.pybpodapi.utils.date_parser", false]], "village.screen": [[168, "module-village.screen", false]], "village.screen.behaviour_window": [[169, "module-village.screen.behaviour_window", false]], "warningmessage (class in village.pybpodapi.com.messaging.warning)": [[128, "village.pybpodapi.com.messaging.warning.WarningMessage", false]], "wire (bpod.channelnames attribute)": [[49, "village.pybpodapi.bpod.Bpod.ChannelNames.WIRE", false]], "wire (bpodbase.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.WIRE", false]], "wire (bpodcomprotocol.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.WIRE", false]], "wire (bpodcomprotocolmodules.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.WIRE", false]], "wire (bpodio.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.WIRE", false]], "wire (channelname attribute)": [[60, "village.pybpodapi.bpod.hardware.channels.ChannelName.WIRE", false]], "wire1 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Wire1", false]], "wire1high (bpod.events attribute)": [[49, "village.pybpodapi.bpod.Bpod.Events.Wire1High", false]], "wire1high (bpod.outputchannels attribute)": [[49, "village.pybpodapi.bpod.Bpod.OutputChannels.Wire1High", false]], "wire1high (bpodbase.events attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Wire1High", false]], "wire1high (bpodbase.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.Wire1High", false]], "wire1high (bpodcomprotocol.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Wire1High", false]], "wire1high (bpodcomprotocol.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.Wire1High", false]], "wire1high (bpodcomprotocolmodules.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Wire1High", false]], "wire1high (bpodcomprotocolmodules.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.Wire1High", false]], "wire1high (bpodio.events attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Wire1High", false]], "wire1high (bpodio.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.Wire1High", false]], "wire1high (event attribute)": [[27, "village.classes.task.Event.Wire1High", false]], "wire1high (eventname attribute)": [[68, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Wire1High", false]], "wire1high (output attribute)": [[28, "village.classes.task.Output.Wire1High", false]], "wire1high (outputchannel attribute)": [[76, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.Wire1High", false]], "wire2 (inputname attribute)": [[73, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Wire2", false]], "writable() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.writable", false]], "writable() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.writable", false]], "write() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.write", false]], "write() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.write", false]], "write_to_module (sendmessageheader attribute)": [[133, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.WRITE_TO_MODULE", false]], "writelines() (stderrbuffer method)": [[135, "village.pybpodapi.com.stderr_buffer.StderrBuffer.writelines", false]], "writelines() (stdoutbuffer method)": [[137, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.writelines", false]], "writer (class in village.pybpodapi.utils.csv)": [[165, "village.pybpodapi.utils.csv.Writer", false]]}, "objects": {"village": [[0, 0, 0, "-", "classes"], [35, 0, 0, "-", "devices"], [46, 0, 0, "-", "gui"], [47, 0, 0, "-", "pybpodapi"], [168, 0, 0, "-", "screen"]], "village.classes": [[1, 0, 0, "-", "collection"], [3, 0, 0, "-", "enums"], [14, 0, 0, "-", "protocols"], [21, 0, 0, "-", "settings_class"], [24, 0, 0, "-", "subject"], [26, 0, 0, "-", "task"], [31, 0, 0, "-", "training"]], "village.classes.collection": [[2, 1, 1, "", "Collection"]], "village.classes.collection.Collection": [[2, 2, 1, "", "__init__"]], "village.classes.enums": [[4, 1, 1, "", "Actions"], [5, 1, 1, "", "Active"], [6, 1, 1, "", "AreaActive"], [7, 1, 1, "", "Color"], [8, 1, 1, "", "Cycle"], [9, 1, 1, "", "DataTable"], [10, 1, 1, "", "Info"], [11, 1, 1, "", "ScreenActive"], [12, 1, 1, "", "State"], [13, 1, 1, "", "SuperEnum"]], "village.classes.enums.Actions": [[4, 2, 1, "", "__init__"]], "village.classes.enums.Active": [[5, 2, 1, "", "__init__"]], "village.classes.enums.AreaActive": [[6, 2, 1, "", "__init__"]], "village.classes.enums.Color": [[7, 2, 1, "", "__init__"]], "village.classes.enums.Cycle": [[8, 2, 1, "", "__init__"]], "village.classes.enums.DataTable": [[9, 2, 1, "", "__init__"]], "village.classes.enums.Info": [[10, 2, 1, "", "__init__"]], "village.classes.enums.ScreenActive": [[11, 2, 1, "", "__init__"]], "village.classes.enums.State": [[12, 2, 1, "", "__init__"]], "village.classes.enums.SuperEnum": [[13, 2, 1, "", "__init__"]], "village.classes.protocols": [[15, 1, 1, "", "CameraProtocol"], [16, 1, 1, "", "EventProtocol"], [17, 1, 1, "", "PyBpodProtocol"], [18, 1, 1, "", "ScaleProtocol"], [19, 1, 1, "", "TelegramBotProtocol"], [20, 1, 1, "", "TempSensorProtocol"]], "village.classes.protocols.CameraProtocol": [[15, 2, 1, "", "__init__"]], "village.classes.protocols.EventProtocol": [[16, 2, 1, "", "__init__"]], "village.classes.protocols.PyBpodProtocol": [[17, 2, 1, "", "__init__"]], "village.classes.protocols.ScaleProtocol": [[18, 2, 1, "", "__init__"]], "village.classes.protocols.TelegramBotProtocol": [[19, 2, 1, "", "__init__"]], "village.classes.protocols.TempSensorProtocol": [[20, 2, 1, "", "__init__"]], "village.classes.settings_class": [[22, 1, 1, "", "Setting"], [23, 1, 1, "", "Settings"]], "village.classes.settings_class.Setting": [[22, 2, 1, "", "__init__"]], "village.classes.settings_class.Settings": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "get"], [23, 2, 1, "", "get_description"], [23, 2, 1, "", "get_index"], [23, 2, 1, "", "get_indices"], [23, 2, 1, "", "get_text"], [23, 2, 1, "", "get_type"], [23, 2, 1, "", "get_values"]], "village.classes.subject": [[25, 1, 1, "", "Subject"]], "village.classes.subject.Subject": [[25, 2, 1, "", "__init__"]], "village.classes.task": [[27, 1, 1, "", "Event"], [28, 1, 1, "", "Output"], [29, 1, 1, "", "Task"], [30, 4, 1, "", "TaskError"]], "village.classes.task.Event": [[27, 3, 1, "", "BNC1High"], [27, 3, 1, "", "Condition1"], [27, 3, 1, "", "GlobalCounter1End"], [27, 3, 1, "", "GlobalTimer1End"], [27, 3, 1, "", "GlobalTimer1Start"], [27, 3, 1, "", "PA1_Port1In"], [27, 3, 1, "", "Port1In"], [27, 3, 1, "", "Tup"], [27, 3, 1, "", "Wire1High"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "is_condition"], [27, 2, 1, "", "is_global_counter_end"], [27, 2, 1, "", "is_global_timer_cancel"], [27, 2, 1, "", "is_global_timer_end"], [27, 2, 1, "", "is_global_timer_start"], [27, 2, 1, "", "is_global_timer_trigger"], [27, 2, 1, "", "is_state_timer"]], "village.classes.task.Output": [[28, 3, 1, "", "BNC1High"], [28, 3, 1, "", "GlobalCounterReset"], [28, 3, 1, "", "GlobalTimer1Cancel"], [28, 3, 1, "", "GlobalTimer1Trig"], [28, 3, 1, "", "Serial1"], [28, 3, 1, "", "SoftCode1"], [28, 3, 1, "", "Valve"], [28, 3, 1, "", "Wire1High"], [28, 2, 1, "", "__init__"]], "village.classes.task.Task": [[29, 2, 1, "", "__init__"]], "village.classes.training": [[32, 1, 1, "", "Settings"], [33, 1, 1, "", "Training"], [34, 4, 1, "", "TrainingError"]], "village.classes.training.Settings": [[32, 2, 1, "", "__init__"]], "village.classes.training.Training": [[33, 2, 1, "", "__init__"]], "village.devices": [[36, 0, 0, "-", "bpod"], [40, 0, 0, "-", "scale"], [43, 0, 0, "-", "temp_sensor"]], "village.devices.bpod": [[37, 1, 1, "", "PyBpod"], [38, 1, 1, "", "Softcode"], [39, 5, 1, "", "get_bpod"]], "village.devices.bpod.PyBpod": [[37, 2, 1, "", "__init__"]], "village.devices.bpod.Softcode": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "close"], [38, 2, 1, "", "kill"], [38, 2, 1, "", "send"]], "village.devices.scale": [[41, 1, 1, "", "Scale"], [42, 5, 1, "", "get_scale"]], "village.devices.scale.Scale": [[41, 2, 1, "", "__init__"]], "village.devices.temp_sensor": [[44, 1, 1, "", "TempSensor"], [45, 5, 1, "", "get_temp_sensor"]], "village.devices.temp_sensor.TempSensor": [[44, 2, 1, "", "__init__"]], "village.pybpodapi": [[48, 0, 0, "-", "bpod"], [84, 0, 0, "-", "bpod_modules"], [89, 0, 0, "-", "com"], [138, 0, 0, "-", "exceptions"], [141, 0, 0, "-", "protocol"], [142, 0, 0, "-", "session"], [145, 0, 0, "-", "state_machine"], [162, 0, 0, "-", "utils"]], "village.pybpodapi.bpod": [[49, 1, 1, "", "Bpod"], [50, 0, 0, "-", "bpod_base"], [52, 0, 0, "-", "bpod_com_protocol"], [54, 0, 0, "-", "bpod_com_protocol_modules"], [56, 0, 0, "-", "bpod_io"], [58, 0, 0, "-", "hardware"], [77, 0, 0, "-", "non_blockingsocketreceive"], [80, 0, 0, "-", "non_blockingstreamreader"], [83, 0, 0, "-", "settings"]], "village.pybpodapi.bpod.Bpod": [[49, 1, 1, "", "ChannelNames"], [49, 1, 1, "", "ChannelTypes"], [49, 1, 1, "", "Events"], [49, 1, 1, "", "OutputChannels"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "close"], [49, 2, 1, "", "data_available"], [49, 2, 1, "", "find_module_by_name"], [49, 2, 1, "", "load_serial_message"], [49, 2, 1, "", "loop_handler"], [49, 2, 1, "", "manual_override"], [49, 2, 1, "", "open"], [49, 2, 1, "", "reset_serial_messages"], [49, 2, 1, "", "run_state_machine"], [49, 2, 1, "", "send_state_machine"], [49, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.Bpod.ChannelNames": [[49, 3, 1, "", "BNC"], [49, 3, 1, "", "PWM"], [49, 3, 1, "", "SERIAL"], [49, 3, 1, "", "VALVE"], [49, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.Bpod.ChannelTypes": [[49, 3, 1, "", "INPUT"], [49, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.Bpod.Events": [[49, 3, 1, "", "BNC1High"], [49, 3, 1, "", "Condition1"], [49, 3, 1, "", "GlobalCounter1End"], [49, 3, 1, "", "GlobalTimer1End"], [49, 3, 1, "", "GlobalTimer1Start"], [49, 3, 1, "", "PA1_Port1In"], [49, 3, 1, "", "Port1In"], [49, 3, 1, "", "Tup"], [49, 3, 1, "", "Wire1High"], [49, 2, 1, "", "is_condition"], [49, 2, 1, "", "is_global_counter_end"], [49, 2, 1, "", "is_global_timer_cancel"], [49, 2, 1, "", "is_global_timer_end"], [49, 2, 1, "", "is_global_timer_start"], [49, 2, 1, "", "is_global_timer_trigger"], [49, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.Bpod.OutputChannels": [[49, 3, 1, "", "BNC1High"], [49, 3, 1, "", "GlobalCounterReset"], [49, 3, 1, "", "GlobalTimer1Cancel"], [49, 3, 1, "", "GlobalTimer1Trig"], [49, 3, 1, "", "Serial1"], [49, 3, 1, "", "SoftCode1"], [49, 3, 1, "", "Valve"], [49, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_base": [[51, 1, 1, "", "BpodBase"]], "village.pybpodapi.bpod.bpod_base.BpodBase": [[51, 1, 1, "", "ChannelNames"], [51, 1, 1, "", "ChannelTypes"], [51, 1, 1, "", "Events"], [51, 1, 1, "", "OutputChannels"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "close"], [51, 2, 1, "", "find_module_by_name"], [51, 2, 1, "", "load_serial_message"], [51, 2, 1, "", "loop_handler"], [51, 2, 1, "", "open"], [51, 2, 1, "", "reset_serial_messages"], [51, 2, 1, "", "run_state_machine"], [51, 2, 1, "", "send_state_machine"], [51, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames": [[51, 3, 1, "", "BNC"], [51, 3, 1, "", "PWM"], [51, 3, 1, "", "SERIAL"], [51, 3, 1, "", "VALVE"], [51, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes": [[51, 3, 1, "", "INPUT"], [51, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_base.BpodBase.Events": [[51, 3, 1, "", "BNC1High"], [51, 3, 1, "", "Condition1"], [51, 3, 1, "", "GlobalCounter1End"], [51, 3, 1, "", "GlobalTimer1End"], [51, 3, 1, "", "GlobalTimer1Start"], [51, 3, 1, "", "PA1_Port1In"], [51, 3, 1, "", "Port1In"], [51, 3, 1, "", "Tup"], [51, 3, 1, "", "Wire1High"], [51, 2, 1, "", "is_condition"], [51, 2, 1, "", "is_global_counter_end"], [51, 2, 1, "", "is_global_timer_cancel"], [51, 2, 1, "", "is_global_timer_end"], [51, 2, 1, "", "is_global_timer_start"], [51, 2, 1, "", "is_global_timer_trigger"], [51, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels": [[51, 3, 1, "", "BNC1High"], [51, 3, 1, "", "GlobalCounterReset"], [51, 3, 1, "", "GlobalTimer1Cancel"], [51, 3, 1, "", "GlobalTimer1Trig"], [51, 3, 1, "", "Serial1"], [51, 3, 1, "", "SoftCode1"], [51, 3, 1, "", "Valve"], [51, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_com_protocol": [[53, 1, 1, "", "BpodCOMProtocol"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol": [[53, 1, 1, "", "ChannelNames"], [53, 1, 1, "", "ChannelTypes"], [53, 1, 1, "", "Events"], [53, 1, 1, "", "OutputChannels"], [53, 2, 1, "", "__init__"], [53, 2, 1, "", "close"], [53, 2, 1, "", "data_available"], [53, 2, 1, "", "find_module_by_name"], [53, 2, 1, "", "load_serial_message"], [53, 2, 1, "", "loop_handler"], [53, 2, 1, "", "manual_override"], [53, 2, 1, "", "open"], [53, 2, 1, "", "reset_serial_messages"], [53, 2, 1, "", "run_state_machine"], [53, 2, 1, "", "send_state_machine"], [53, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames": [[53, 3, 1, "", "BNC"], [53, 3, 1, "", "PWM"], [53, 3, 1, "", "SERIAL"], [53, 3, 1, "", "VALVE"], [53, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes": [[53, 3, 1, "", "INPUT"], [53, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events": [[53, 3, 1, "", "BNC1High"], [53, 3, 1, "", "Condition1"], [53, 3, 1, "", "GlobalCounter1End"], [53, 3, 1, "", "GlobalTimer1End"], [53, 3, 1, "", "GlobalTimer1Start"], [53, 3, 1, "", "PA1_Port1In"], [53, 3, 1, "", "Port1In"], [53, 3, 1, "", "Tup"], [53, 3, 1, "", "Wire1High"], [53, 2, 1, "", "is_condition"], [53, 2, 1, "", "is_global_counter_end"], [53, 2, 1, "", "is_global_timer_cancel"], [53, 2, 1, "", "is_global_timer_end"], [53, 2, 1, "", "is_global_timer_start"], [53, 2, 1, "", "is_global_timer_trigger"], [53, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels": [[53, 3, 1, "", "BNC1High"], [53, 3, 1, "", "GlobalCounterReset"], [53, 3, 1, "", "GlobalTimer1Cancel"], [53, 3, 1, "", "GlobalTimer1Trig"], [53, 3, 1, "", "Serial1"], [53, 3, 1, "", "SoftCode1"], [53, 3, 1, "", "Valve"], [53, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_com_protocol_modules": [[55, 1, 1, "", "BpodCOMProtocolModules"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules": [[55, 1, 1, "", "ChannelNames"], [55, 1, 1, "", "ChannelTypes"], [55, 1, 1, "", "Events"], [55, 1, 1, "", "OutputChannels"], [55, 2, 1, "", "__init__"], [55, 2, 1, "", "close"], [55, 2, 1, "", "data_available"], [55, 2, 1, "", "find_module_by_name"], [55, 2, 1, "", "load_serial_message"], [55, 2, 1, "", "loop_handler"], [55, 2, 1, "", "manual_override"], [55, 2, 1, "", "open"], [55, 2, 1, "", "reset_serial_messages"], [55, 2, 1, "", "run_state_machine"], [55, 2, 1, "", "send_state_machine"], [55, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames": [[55, 3, 1, "", "BNC"], [55, 3, 1, "", "PWM"], [55, 3, 1, "", "SERIAL"], [55, 3, 1, "", "VALVE"], [55, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes": [[55, 3, 1, "", "INPUT"], [55, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events": [[55, 3, 1, "", "BNC1High"], [55, 3, 1, "", "Condition1"], [55, 3, 1, "", "GlobalCounter1End"], [55, 3, 1, "", "GlobalTimer1End"], [55, 3, 1, "", "GlobalTimer1Start"], [55, 3, 1, "", "PA1_Port1In"], [55, 3, 1, "", "Port1In"], [55, 3, 1, "", "Tup"], [55, 3, 1, "", "Wire1High"], [55, 2, 1, "", "is_condition"], [55, 2, 1, "", "is_global_counter_end"], [55, 2, 1, "", "is_global_timer_cancel"], [55, 2, 1, "", "is_global_timer_end"], [55, 2, 1, "", "is_global_timer_start"], [55, 2, 1, "", "is_global_timer_trigger"], [55, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels": [[55, 3, 1, "", "BNC1High"], [55, 3, 1, "", "GlobalCounterReset"], [55, 3, 1, "", "GlobalTimer1Cancel"], [55, 3, 1, "", "GlobalTimer1Trig"], [55, 3, 1, "", "Serial1"], [55, 3, 1, "", "SoftCode1"], [55, 3, 1, "", "Valve"], [55, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_io": [[57, 1, 1, "", "BpodIO"]], "village.pybpodapi.bpod.bpod_io.BpodIO": [[57, 1, 1, "", "ChannelNames"], [57, 1, 1, "", "ChannelTypes"], [57, 1, 1, "", "Events"], [57, 1, 1, "", "OutputChannels"], [57, 2, 1, "", "__init__"], [57, 2, 1, "", "close"], [57, 2, 1, "", "data_available"], [57, 2, 1, "", "find_module_by_name"], [57, 2, 1, "", "load_serial_message"], [57, 2, 1, "", "loop_handler"], [57, 2, 1, "", "manual_override"], [57, 2, 1, "", "open"], [57, 2, 1, "", "reset_serial_messages"], [57, 2, 1, "", "run_state_machine"], [57, 2, 1, "", "send_state_machine"], [57, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames": [[57, 3, 1, "", "BNC"], [57, 3, 1, "", "PWM"], [57, 3, 1, "", "SERIAL"], [57, 3, 1, "", "VALVE"], [57, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes": [[57, 3, 1, "", "INPUT"], [57, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_io.BpodIO.Events": [[57, 3, 1, "", "BNC1High"], [57, 3, 1, "", "Condition1"], [57, 3, 1, "", "GlobalCounter1End"], [57, 3, 1, "", "GlobalTimer1End"], [57, 3, 1, "", "GlobalTimer1Start"], [57, 3, 1, "", "PA1_Port1In"], [57, 3, 1, "", "Port1In"], [57, 3, 1, "", "Tup"], [57, 3, 1, "", "Wire1High"], [57, 2, 1, "", "is_condition"], [57, 2, 1, "", "is_global_counter_end"], [57, 2, 1, "", "is_global_timer_cancel"], [57, 2, 1, "", "is_global_timer_end"], [57, 2, 1, "", "is_global_timer_start"], [57, 2, 1, "", "is_global_timer_trigger"], [57, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels": [[57, 3, 1, "", "BNC1High"], [57, 3, 1, "", "GlobalCounterReset"], [57, 3, 1, "", "GlobalTimer1Cancel"], [57, 3, 1, "", "GlobalTimer1Trig"], [57, 3, 1, "", "Serial1"], [57, 3, 1, "", "SoftCode1"], [57, 3, 1, "", "Valve"], [57, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.hardware": [[59, 0, 0, "-", "channels"], [64, 0, 0, "-", "events"], [69, 0, 0, "-", "hardware"], [71, 0, 0, "-", "input_channels"], [74, 0, 0, "-", "output_channels"]], "village.pybpodapi.bpod.hardware.channels": [[60, 1, 1, "", "ChannelName"], [61, 1, 1, "", "ChannelType"], [62, 1, 1, "", "Channels"], [63, 1, 1, "", "EventsPositions"]], "village.pybpodapi.bpod.hardware.channels.ChannelName": [[60, 3, 1, "", "BNC"], [60, 3, 1, "", "PWM"], [60, 3, 1, "", "SERIAL"], [60, 3, 1, "", "VALVE"], [60, 3, 1, "", "WIRE"], [60, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.channels.ChannelType": [[61, 3, 1, "", "INPUT"], [61, 3, 1, "", "OUTPUT"], [61, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.channels.Channels": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "get_event_name"], [62, 2, 1, "", "setup_input_channels"], [62, 2, 1, "", "setup_output_channels"]], "village.pybpodapi.bpod.hardware.channels.EventsPositions": [[63, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.events": [[65, 0, 0, "-", "base_eventname"], [67, 0, 0, "-", "bpod_events"]], "village.pybpodapi.bpod.hardware.events.base_eventname": [[66, 1, 1, "", "BaseEventName"]], "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "is_condition"], [66, 2, 1, "", "is_global_counter_end"], [66, 2, 1, "", "is_global_timer_cancel"], [66, 2, 1, "", "is_global_timer_end"], [66, 2, 1, "", "is_global_timer_start"], [66, 2, 1, "", "is_global_timer_trigger"], [66, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.hardware.events.bpod_events": [[68, 1, 1, "", "EventName"]], "village.pybpodapi.bpod.hardware.events.bpod_events.EventName": [[68, 3, 1, "", "BNC1High"], [68, 3, 1, "", "Condition1"], [68, 3, 1, "", "GlobalCounter1End"], [68, 3, 1, "", "GlobalTimer1End"], [68, 3, 1, "", "GlobalTimer1Start"], [68, 3, 1, "", "PA1_Port1In"], [68, 3, 1, "", "Port1In"], [68, 3, 1, "", "Tup"], [68, 3, 1, "", "Wire1High"], [68, 2, 1, "", "__init__"], [68, 2, 1, "", "is_condition"], [68, 2, 1, "", "is_global_counter_end"], [68, 2, 1, "", "is_global_timer_cancel"], [68, 2, 1, "", "is_global_timer_end"], [68, 2, 1, "", "is_global_timer_start"], [68, 2, 1, "", "is_global_timer_trigger"], [68, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.hardware.hardware": [[70, 1, 1, "", "Hardware"]], "village.pybpodapi.bpod.hardware.hardware.Hardware": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "setup"]], "village.pybpodapi.bpod.hardware.input_channels": [[72, 0, 0, "-", "bpod_input_channels"]], "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels": [[73, 1, 1, "", "InputName"]], "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName": [[73, 3, 1, "", "BNC1"], [73, 3, 1, "", "BNC2"], [73, 3, 1, "", "Port1"], [73, 3, 1, "", "Port2"], [73, 3, 1, "", "Port3"], [73, 3, 1, "", "Port4"], [73, 3, 1, "", "Port5"], [73, 3, 1, "", "Port6"], [73, 3, 1, "", "Port7"], [73, 3, 1, "", "Port8"], [73, 3, 1, "", "Serial1"], [73, 3, 1, "", "Serial2"], [73, 3, 1, "", "Serial3"], [73, 3, 1, "", "USB1"], [73, 3, 1, "", "Wire1"], [73, 3, 1, "", "Wire2"], [73, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.output_channels": [[75, 0, 0, "-", "bpod_output_channels"]], "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels": [[76, 1, 1, "", "OutputChannel"]], "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel": [[76, 3, 1, "", "BNC1High"], [76, 3, 1, "", "GlobalCounterReset"], [76, 3, 1, "", "GlobalTimer1Cancel"], [76, 3, 1, "", "GlobalTimer1Trig"], [76, 3, 1, "", "Serial1"], [76, 3, 1, "", "SoftCode1"], [76, 3, 1, "", "Valve"], [76, 3, 1, "", "Wire1High"], [76, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.non_blockingsocketreceive": [[78, 1, 1, "", "NonBlockingSocketReceive"], [79, 4, 1, "", "UnexpectedEndOfStream"]], "village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive": [[78, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.non_blockingstreamreader": [[81, 1, 1, "", "NonBlockingStreamReader"], [82, 4, 1, "", "UnexpectedEndOfStream"]], "village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader": [[81, 2, 1, "", "__init__"]], "village.pybpodapi.bpod_modules": [[85, 0, 0, "-", "bpod_module"], [87, 0, 0, "-", "bpod_modules"]], "village.pybpodapi.bpod_modules.bpod_module": [[86, 1, 1, "", "BpodModule"]], "village.pybpodapi.bpod_modules.bpod_module.BpodModule": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "load_message"]], "village.pybpodapi.bpod_modules.bpod_modules": [[88, 1, 1, "", "BpodModules"]], "village.pybpodapi.bpod_modules.bpod_modules.BpodModules": [[88, 2, 1, "", "__init__"]], "village.pybpodapi.com": [[90, 0, 0, "-", "arcom"], [94, 0, 0, "-", "messaging"], [129, 0, 0, "-", "protocol"], [134, 0, 0, "-", "stderr_buffer"], [136, 0, 0, "-", "stdout_buffer"]], "village.pybpodapi.com.arcom": [[91, 1, 1, "", "ArCOM"], [92, 1, 1, "", "ArduinoTypes"], [93, 1, 1, "", "DataType"]], "village.pybpodapi.com.arcom.ArCOM": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "bytes_available"], [91, 2, 1, "", "close"], [91, 2, 1, "", "open"]], "village.pybpodapi.com.arcom.ArduinoTypes": [[92, 2, 1, "", "__init__"]], "village.pybpodapi.com.arcom.DataType": [[93, 2, 1, "", "__init__"]], "village.pybpodapi.com.messaging": [[95, 0, 0, "-", "base_message"], [97, 0, 0, "-", "debug"], [99, 0, 0, "-", "end_trial"], [101, 0, 0, "-", "error"], [103, 0, 0, "-", "event_occurrence"], [105, 0, 0, "-", "event_resume"], [107, 0, 0, "-", "parser"], [109, 0, 0, "-", "session_info"], [111, 0, 0, "-", "softcode_occurrence"], [113, 0, 0, "-", "state_occurrence"], [115, 0, 0, "-", "state_transition"], [117, 0, 0, "-", "stderr"], [119, 0, 0, "-", "stdout"], [121, 0, 0, "-", "trial"], [123, 0, 0, "-", "untagged_message"], [125, 0, 0, "-", "value"], [127, 0, 0, "-", "warning"]], "village.pybpodapi.com.messaging.base_message": [[96, 1, 1, "", "BaseMessage"]], "village.pybpodapi.com.messaging.base_message.BaseMessage": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "check_type"], [96, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.debug": [[98, 1, 1, "", "DebugMessage"]], "village.pybpodapi.com.messaging.debug.DebugMessage": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "check_type"], [98, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.end_trial": [[100, 1, 1, "", "EndTrial"]], "village.pybpodapi.com.messaging.end_trial.EndTrial": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "check_type"], [100, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.error": [[102, 1, 1, "", "ErrorMessage"]], "village.pybpodapi.com.messaging.error.ErrorMessage": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "check_type"], [102, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.event_occurrence": [[104, 1, 1, "", "EventOccurrence"]], "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "check_type"], [104, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.event_resume": [[106, 1, 1, "", "EventResume"]], "village.pybpodapi.com.messaging.event_resume.EventResume": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "check_type"], [106, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.parser": [[108, 1, 1, "", "MessageParser"]], "village.pybpodapi.com.messaging.parser.MessageParser": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.session_info": [[110, 1, 1, "", "SessionInfo"]], "village.pybpodapi.com.messaging.session_info.SessionInfo": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "check_type"], [110, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.softcode_occurrence": [[112, 1, 1, "", "SoftcodeOccurrence"]], "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "check_type"], [112, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.state_occurrence": [[114, 1, 1, "", "StateOccurrence"]], "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "check_type"], [114, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.state_transition": [[116, 1, 1, "", "StateTransition"]], "village.pybpodapi.com.messaging.state_transition.StateTransition": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "check_type"], [116, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.stderr": [[118, 1, 1, "", "StderrMessage"]], "village.pybpodapi.com.messaging.stderr.StderrMessage": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "check_type"], [118, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.stdout": [[120, 1, 1, "", "StdoutMessage"]], "village.pybpodapi.com.messaging.stdout.StdoutMessage": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "check_type"], [120, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.trial": [[122, 1, 1, "", "Trial"]], "village.pybpodapi.com.messaging.trial.Trial": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "check_type"], [122, 2, 1, "", "fromlist"], [122, 2, 1, "", "get_all_timestamps_by_event"], [122, 2, 1, "", "get_events_names"], [122, 2, 1, "", "get_timestamps_by_event_name"]], "village.pybpodapi.com.messaging.untagged_message": [[124, 1, 1, "", "UntaggedMessage"]], "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "check_type"], [124, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.value": [[126, 1, 1, "", "ValueMessage"]], "village.pybpodapi.com.messaging.value.ValueMessage": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "check_type"], [126, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.warning": [[128, 1, 1, "", "WarningMessage"]], "village.pybpodapi.com.messaging.warning.WarningMessage": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "check_type"], [128, 2, 1, "", "fromlist"]], "village.pybpodapi.com.protocol": [[130, 0, 0, "-", "recv_msg_headers"], [132, 0, 0, "-", "send_msg_headers"]], "village.pybpodapi.com.protocol.recv_msg_headers": [[131, 1, 1, "", "ReceiveMessageHeader"]], "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader": [[131, 3, 1, "", "ENABLE_PORTS_OK"], [131, 3, 1, "", "HANDSHAKE_OK"], [131, 3, 1, "", "LOAD_SERIAL_MESSAGE_OK"], [131, 3, 1, "", "MODULE_EVENT_NAMES"], [131, 3, 1, "", "MODULE_REQUESTED_EVENT"], [131, 3, 1, "", "RESET_SERIAL_MESSAGES"], [131, 3, 1, "", "STATE_MACHINE_INSTALLATION_STATUS"], [131, 3, 1, "", "SYNC_CHANNEL_MODE_OK"], [131, 2, 1, "", "__init__"]], "village.pybpodapi.com.protocol.send_msg_headers": [[133, 1, 1, "", "SendMessageHeader"]], "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader": [[133, 3, 1, "", "DISCONNECT"], [133, 3, 1, "", "ECHO_SOFTCODE"], [133, 3, 1, "", "ENABLE_PORTS"], [133, 3, 1, "", "EXIT_AND_RETURN"], [133, 3, 1, "", "FIRMWARE_VERSION"], [133, 3, 1, "", "GET_MODULES"], [133, 3, 1, "", "GET_TIMESTAMP_TRANSMISSION"], [133, 3, 1, "", "HANDSHAKE"], [133, 3, 1, "", "HARDWARE_DESCRIPTION"], [133, 3, 1, "", "LOAD_SERIAL_MESSAGE"], [133, 3, 1, "", "MANUAL_OVERRIDE_EXEC_EVENT"], [133, 3, 1, "", "NEW_STATE_MATRIX"], [133, 3, 1, "", "OVERRIDE_DIGITAL_HW_STATE"], [133, 3, 1, "", "RESET_CLOCK"], [133, 3, 1, "", "RESET_SERIAL_MESSAGES"], [133, 3, 1, "", "RUN_STATE_MACHINE"], [133, 3, 1, "", "SEND_TO_HW_SERIAL"], [133, 3, 1, "", "SET_MODULE_RELAY"], [133, 3, 1, "", "SYNC_CHANNEL_MODE"], [133, 3, 1, "", "TRIGGER_SOFTCODE"], [133, 3, 1, "", "WRITE_TO_MODULE"], [133, 2, 1, "", "__init__"]], "village.pybpodapi.com.stderr_buffer": [[135, 1, 1, "", "StderrBuffer"]], "village.pybpodapi.com.stderr_buffer.StderrBuffer": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "close"], [135, 2, 1, "", "detach"], [135, 3, 1, "", "encoding"], [135, 3, 1, "", "errors"], [135, 2, 1, "", "fileno"], [135, 2, 1, "", "flush"], [135, 2, 1, "", "getvalue"], [135, 2, 1, "", "isatty"], [135, 3, 1, "", "newlines"], [135, 2, 1, "", "read"], [135, 2, 1, "", "readable"], [135, 2, 1, "", "readline"], [135, 2, 1, "", "readlines"], [135, 2, 1, "", "seek"], [135, 2, 1, "", "seekable"], [135, 2, 1, "", "tell"], [135, 2, 1, "", "truncate"], [135, 2, 1, "", "writable"], [135, 2, 1, "", "write"], [135, 2, 1, "", "writelines"]], "village.pybpodapi.com.stdout_buffer": [[137, 1, 1, "", "StdoutBuffer"]], "village.pybpodapi.com.stdout_buffer.StdoutBuffer": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "close"], [137, 2, 1, "", "detach"], [137, 3, 1, "", "encoding"], [137, 3, 1, "", "errors"], [137, 2, 1, "", "fileno"], [137, 2, 1, "", "flush"], [137, 2, 1, "", "getvalue"], [137, 2, 1, "", "isatty"], [137, 3, 1, "", "newlines"], [137, 2, 1, "", "read"], [137, 2, 1, "", "readable"], [137, 2, 1, "", "readline"], [137, 2, 1, "", "readlines"], [137, 2, 1, "", "seek"], [137, 2, 1, "", "seekable"], [137, 2, 1, "", "tell"], [137, 2, 1, "", "truncate"], [137, 2, 1, "", "writable"], [137, 2, 1, "", "write"], [137, 2, 1, "", "writelines"]], "village.pybpodapi.exceptions": [[139, 0, 0, "-", "bpod_error"]], "village.pybpodapi.exceptions.bpod_error": [[140, 4, 1, "", "BpodErrorException"]], "village.pybpodapi.session": [[143, 1, 1, "", "Session"], [144, 1, 1, "", "StreamsWrapper"]], "village.pybpodapi.session.Session": [[143, 2, 1, "", "__init__"], [143, 6, 1, "", "current_trial"]], "village.pybpodapi.session.StreamsWrapper": [[144, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine": [[146, 1, 1, "", "StateMachine"], [147, 0, 0, "-", "conditions"], [149, 0, 0, "-", "global_counters"], [151, 0, 0, "-", "global_timers"], [153, 0, 0, "-", "state_machine_base"], [156, 0, 0, "-", "state_machine_builder"], [159, 0, 0, "-", "state_machine_runner"]], "village.pybpodapi.state_machine.StateMachine": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "add_state"], [146, 2, 1, "", "build_message"], [146, 2, 1, "", "build_message_32_bits"], [146, 2, 1, "", "set_condition"], [146, 2, 1, "", "set_global_counter"], [146, 2, 1, "", "set_global_timer"], [146, 2, 1, "", "set_global_timer_legacy"], [146, 2, 1, "", "update_state_numbers"]], "village.pybpodapi.state_machine.conditions": [[148, 1, 1, "", "Conditions"]], "village.pybpodapi.state_machine.conditions.Conditions": [[148, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine.global_counters": [[150, 1, 1, "", "GlobalCounters"]], "village.pybpodapi.state_machine.global_counters.GlobalCounters": [[150, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine.global_timers": [[152, 1, 1, "", "GlobalTimers"]], "village.pybpodapi.state_machine.global_timers.GlobalTimers": [[152, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine.state_machine_base": [[154, 4, 1, "", "SMAError"], [155, 1, 1, "", "StateMachineBase"]], "village.pybpodapi.state_machine.state_machine_base.StateMachineBase": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "add_state"], [155, 2, 1, "", "set_condition"], [155, 2, 1, "", "set_global_counter"], [155, 2, 1, "", "set_global_timer"], [155, 2, 1, "", "set_global_timer_legacy"]], "village.pybpodapi.state_machine.state_machine_builder": [[157, 1, 1, "", "StateMachineBuilder"], [158, 4, 1, "", "StateMachineBuilderError"]], "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "add_state"], [157, 2, 1, "", "build_message"], [157, 2, 1, "", "build_message_32_bits"], [157, 2, 1, "", "set_condition"], [157, 2, 1, "", "set_global_counter"], [157, 2, 1, "", "set_global_timer"], [157, 2, 1, "", "set_global_timer_legacy"], [157, 2, 1, "", "update_state_numbers"]], "village.pybpodapi.state_machine.state_machine_runner": [[160, 1, 1, "", "StateMachineRunner"], [161, 4, 1, "", "StateMachineRunnerError"]], "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "add_state"], [160, 2, 1, "", "build_message"], [160, 2, 1, "", "build_message_32_bits"], [160, 2, 1, "", "set_condition"], [160, 2, 1, "", "set_global_counter"], [160, 2, 1, "", "set_global_timer"], [160, 2, 1, "", "set_global_timer_legacy"], [160, 2, 1, "", "update_state_numbers"]], "village.pybpodapi.utils": [[163, 0, 0, "-", "csv"], [166, 0, 0, "-", "date_parser"]], "village.pybpodapi.utils.csv": [[164, 1, 1, "", "Reader"], [165, 1, 1, "", "Writer"]], "village.pybpodapi.utils.csv.Reader": [[164, 2, 1, "", "__init__"]], "village.pybpodapi.utils.csv.Writer": [[165, 2, 1, "", "__init__"]], "village.pybpodapi.utils.date_parser": [[167, 5, 1, "", "parse"]], "village.screen": [[169, 0, 0, "-", "behaviour_window"]], "village.screen.behaviour_window": [[170, 1, 1, "", "BehaviourWindow"]], "village.screen.behaviour_window.BehaviourWindow": [[170, 2, 1, "", "__init__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:property"}, "terms": {"": [78, 133, 146, 155, 157, 160, 175, 177, 179, 184], "0": [49, 51, 53, 55, 57, 86, 135, 137, 146, 155, 157, 160, 179, 184], "0x4": [49, 51, 53, 55, 57, 133], "0x45": 179, "0x64": 179, "1": [4, 5, 6, 7, 8, 9, 10, 11, 13, 28, 49, 51, 53, 55, 57, 61, 73, 76, 91, 131, 133, 135, 137, 146, 155, 157, 160, 178, 184], "1000": 184, "100u": [146, 155, 157, 160], "115200": 91, "12": 179, "1280": 179, "128gb": 179, "13": 179, "2": [49, 51, 53, 55, 57, 61, 73, 135, 137, 178, 184], "20x20": 175, "24": 177, "24\u00bac": 184, "25": [146, 155, 157, 160], "250": 155, "255": [49, 51, 53, 55, 57, 146, 155, 157, 160], "2afc": 177, "2afc_protocol": [49, 51, 53, 55, 57], "2chan": 179, "3": [28, 49, 51, 53, 55, 57, 73, 76, 133, 179, 184, 186], "30x30": 175, "32": [146, 157, 160], "35": 131, "3600": [146, 155, 157, 160], "3d": [172, 174], "4": [49, 51, 53, 55, 57, 73, 133, 179, 184], "429496": 122, "5": [73, 131, 146, 155, 157, 160, 179, 184], "50": 184, "500": 184, "6": [73, 133, 184], "600": 184, "69": 131, "7": [73, 177], "720": 179, "7295": 122, "8": 73, "8gb": 179, "99": 179, "A": [22, 146, 155, 157, 160], "Be": 184, "By": 178, "For": [175, 178, 179, 184], "IN": 179, "If": [135, 137, 146, 155, 157, 160, 184], "In": 179, "It": [96, 177, 184], "Not": 184, "OR": 179, "THAT": 179, "The": [22, 23, 49, 51, 53, 55, 57, 131, 133, 135, 137, 146, 155, 157, 160, 175, 177, 179, 186], "These": [60, 61, 68, 73, 76, 175, 178], "To": 178, "__init__": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 32, 33, 37, 38, 41, 44, 49, 51, 53, 55, 57, 60, 61, 62, 63, 66, 68, 70, 73, 76, 78, 81, 86, 88, 91, 92, 93, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 131, 133, 135, 137, 143, 144, 146, 148, 150, 152, 155, 157, 160, 164, 165, 170], "_arcom": [53, 55], "_bpodbase__process_opcod": [49, 51, 53, 55, 57], "_bpodbase__update_timestamp": [49, 51, 53, 55, 57], "_condition1": [27, 49, 51, 53, 55, 57, 68], "_globalcounter1_end": [27, 49, 51, 53, 55, 57, 68], "_globalcounterreset": [28, 49, 51, 53, 55, 57, 76], "_globaltimer1_end": [27, 49, 51, 53, 55, 57, 68], "_globaltimer1_start": [27, 49, 51, 53, 55, 57, 68], "_globaltimercancel": [28, 49, 51, 53, 55, 57, 76], "_globaltimertrig": [28, 49, 51, 53, 55, 57, 76], "_tup": [27, 49, 51, 53, 55, 57, 68, 122, 146, 155, 157, 160], "a49": 184, "abl": 179, "abnorm": 184, "about": 143, "abov": [179, 184], "absolut": [135, 137], "abstract": 51, "academi": [179, 184], "access": [175, 177, 178, 184], "accord": [60, 61, 68, 73, 76], "accordingli": [49, 51, 53, 55, 57], "account": 179, "accuraci": 175, "acid": 186, "acryl": 175, "action": [53, 55, 146, 155, 157, 160, 184], "activ": 179, "actual": [146, 157, 160], "ad": [135, 137, 155, 178, 179], "add": [49, 51, 53, 55, 57, 146, 155, 157, 160, 178, 179], "add_stat": [146, 155, 157, 160], "addit": 178, "addition": 177, "address": 179, "adjust": [179, 184], "admin": 179, "administr": 179, "advanc": 179, "affect": [155, 157, 184], "after": [135, 137, 184], "again": 184, "alarm": [178, 185, 186], "alarm_set": 23, "alert": 177, "align": 184, "all": [135, 137, 146, 155, 157, 160, 175, 179, 184, 186], "allow": [177, 179, 184], "alreadi": [51, 135, 137], "also": 184, "altern": 172, "aluminium": 174, "alwai": [135, 137, 184], "amount": 184, "an": [22, 70, 86, 91, 104, 106, 112, 128, 135, 137, 146, 155, 157, 160, 184], "analog": [49, 51, 53, 55, 57, 60], "ani": [23, 135, 137, 146, 155, 157, 160, 177], "anim": [177, 184], "annoi": 184, "anoth": [177, 179], "antenna": 184, "anyon": [155, 157], "anywher": 179, "api": [51, 108, 178], "api_index": 178, "applic": [135, 137], "apt": 179, "ar": [23, 49, 51, 53, 55, 57, 122, 135, 137, 146, 155, 157, 160, 175, 178, 184], "arcom": [53, 55], "arduino": [91, 175, 184], "area": 184, "arg": [4, 5, 6, 7, 8, 9, 10, 11, 13], "argument": [135, 137], "around": 179, "ask": 179, "assembl": 175, "assembli": 178, "assess": [184, 186], "assign": [146, 155, 157, 160], "associ": [86, 104, 106, 112, 146, 155, 157, 160], "attempt": [135, 137], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 27, 28, 37, 41, 44, 49, 51, 53, 55, 57, 60, 61, 68, 70, 73, 76, 88, 92, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 131, 133, 135, 137, 143, 146, 160], "auto": [178, 179], "autom": [175, 177], "automat": [146, 155, 157, 160, 179], "avail": [60, 73, 76, 177], "back": [179, 184], "bad": 184, "basal": 184, "base": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 32, 33, 37, 38, 41, 44, 49, 51, 53, 55, 57, 60, 61, 62, 63, 66, 68, 70, 73, 76, 78, 81, 86, 88, 91, 92, 93, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 131, 133, 135, 137, 143, 144, 146, 148, 150, 152, 155, 157, 160, 164, 165, 170, 175, 178], "base_messag": [118, 120], "baseeventnam": 68, "basemessag": [98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128], "basic": [175, 178], "baudrat": [49, 51, 53, 55, 57, 91], "beam": [175, 184], "becaus": 184, "becom": 184, "been": [96, 135, 137, 155, 184], "befor": [146, 155, 157, 160], "behavior": [177, 184, 186], "being": [155, 160, 184], "below": [172, 175, 184, 186], "between": [49, 51, 53, 55, 57, 91, 146, 155, 157, 160, 184], "bigger": [49, 51, 53, 55, 57], "bin": 179, "binari": [146, 155, 157, 160], "bit": [146, 157, 160], "blank": 179, "block": [135, 137], "blocker": 175, "blue": 184, "bnc": [27, 28, 49, 51, 53, 55, 57, 60, 68, 76], "bnc1": [28, 49, 51, 53, 55, 57, 73, 76], "bnc1high": [27, 28, 49, 51, 53, 55, 57, 68, 76], "bnc2": 73, "board": [49, 51, 53, 55, 57, 96, 98, 104, 106, 112], "board_messag": [100, 102, 110, 124, 126], "board_timestamp": [104, 106, 112], "boardmessag": [100, 102, 110, 118, 120, 124, 126], "bool": [27, 49, 51, 53, 55, 57, 66, 68, 155, 160], "boot": 179, "bot": 178, "botfath": 179, "both": 179, "bottl": [184, 186], "boundari": [4, 5, 6, 7, 8, 9, 10, 11, 13], "box": [49, 51, 53, 55, 57, 73, 146, 155, 157, 160, 177, 184, 186], "bpod": [51, 53, 55, 57, 60, 61, 62, 68, 70, 73, 76, 86, 88, 104, 106, 112, 120, 131, 133, 143, 146, 155, 157, 160, 179, 184], "bpod_bas": [49, 51, 53, 55, 57], "bpod_set": 23, "bpod_workspac": [49, 51, 53, 55, 57], "bpodbas": [49, 53, 55, 57], "bpodcomprotocol": 55, "bpodcomprotocolmodul": 57, "bpodio": 49, "braincircuitsbehaviorlab": 179, "browser": [172, 179], "buffer": [135, 137], "build": [49, 51, 53, 55, 57, 133, 146, 157, 160, 172, 175], "build_messag": [146, 157, 160], "build_message_32_bit": [146, 157, 160], "builder": 157, "button": 184, "buzzer": [175, 184], "byte": [49, 51, 53, 55, 57, 131, 133, 135, 137], "bytes_avail": 91, "c": 133, "cabl": [175, 179, 184], "cad": 175, "cage": [175, 184, 186], "calibr": [184, 186], "cam": 184, "camera": [175, 177, 184], "camera_set": 23, "can": [22, 49, 51, 53, 55, 57, 135, 137, 146, 155, 157, 160, 172, 177, 178, 179, 184, 186], "cannot": 175, "caption": 178, "captur": [146, 155, 157, 160], "card": 179, "categori": 23, "caus": [146, 155, 157, 160], "cd": [179, 184], "chamber": 175, "chang": [104, 106, 112, 135, 137, 146, 155, 157, 160, 179, 184, 186], "channel": [49, 51, 53, 55, 57, 60, 61, 73, 76, 133, 146, 155, 157, 160], "channel_nam": [49, 53, 55, 57], "channel_numb": [49, 53, 55, 57], "channel_typ": [49, 53, 55, 57], "channel_valu": [146, 155, 157, 160], "channelnam": [49, 51, 53, 55, 57], "channeltyp": [49, 51, 53, 55, 57], "charact": [131, 133, 135, 137, 146, 155, 157, 160], "chat": 179, "check": [177, 184, 186], "check_typ": [96, 98, 100, 102, 104, 106, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128], "choos": 179, "chromium": 179, "citric": 186, "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 163, 164, 165, 169, 170, 178], "classmethod": [96, 98, 100, 102, 104, 106, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128], "clean": [184, 186], "click": 179, "clock": 133, "clone": 179, "close": [38, 49, 51, 53, 55, 57, 91, 135, 137, 184], "cmdline": 179, "cnc": 174, "code": [38, 49, 51, 53, 55, 57, 68, 131, 133, 155, 178, 179], "column": 2, "columns_head": 165, "com": [40, 53, 55, 100, 102, 110, 118, 120, 124, 126, 179], "come": 184, "command": [49, 51, 53, 55, 57, 131, 179], "common": 184, "commun": [51, 53, 55, 178, 184], "compat": [155, 157], "complet": [146, 155, 157, 160], "compon": [172, 174, 184], "comprehens": 172, "compress": 133, "comput": 179, "condit": [27, 49, 51, 53, 55, 57, 68, 146, 155, 157, 160, 177], "condition1": [27, 49, 51, 53, 55, 57, 68], "condition_channel": [146, 155, 157, 160], "condition_numb": [146, 155, 157, 160], "config": 179, "configur": [49, 51, 53, 55, 57, 133, 177, 178], "connect": [38, 49, 51, 53, 55, 57, 60, 70, 86, 91, 133, 175, 184], "connector": 175, "consid": 184, "consum": [49, 51, 53, 55, 57], "contain": [22, 146, 155, 157, 160], "content": [96, 98, 100, 102, 118, 120, 124, 128, 135, 137, 179], "control": [135, 137, 175], "convers": 179, "copi": 179, "correct": 184, "correctli": 184, "correspond": [114, 116, 122], "corridor": [175, 177, 184, 186], "corridor_set": 23, "could": 178, "count": [146, 155, 157, 160], "counter": [146, 155, 157, 160], "counter_numb": [146, 155, 157, 160], "countri": 179, "cover": 175, "cpu": 179, "cqrobot": 179, "creat": [49, 51, 53, 55, 57, 122, 178], "credenti": 179, "cross": 184, "current": [38, 49, 51, 53, 55, 57, 70, 135, 137, 143, 160, 179], "current_st": 160, "current_tri": 143, "d": 179, "dai": [177, 184], "data": [49, 51, 53, 55, 57, 91, 133, 146, 155, 157, 160, 179], "data_avail": [49, 53, 55, 57], "date": 167, "dateutil": 179, "decod": [135, 137], "default": [22, 135, 137, 178], "defin": [53, 55, 61, 131, 133], "delet": 184, "deliv": 184, "deliveri": 186, "describ": 178, "descript": [12, 22, 23, 49, 51, 53, 55, 57, 70, 146, 155, 157, 160, 184], "descriptor": [135, 137], "design": 177, "desktop": [49, 51, 53, 55, 57], "detach": [135, 137], "detail": [175, 178, 181], "detect": [175, 179, 184], "determin": [135, 137], "dev": [49, 51, 53, 55, 57, 184], "devic": [53, 55, 70, 131, 133, 178, 179, 184], "dfrobot": [40, 179], "dfrobot_hx711_i2c": 40, "dict": [122, 146, 155, 157, 160], "dictionari": [122, 146, 155, 157, 160], "differ": [23, 184], "digit": 133, "direct": 178, "directli": [49, 51, 53, 55, 57, 172], "directory_set": 23, "disabl": 179, "disconnect": [133, 175, 184], "discov": 179, "displai": [179, 184], "dmesg": 179, "do": 184, "doc": 178, "docstr": 178, "doe": [135, 137, 172], "doesn": 184, "don": 175, "done": 186, "door": [175, 184], "down": [179, 184], "download": [172, 179], "drop": 186, "drunk": 184, "dtoverlai": 179, "due": 184, "durabl": 175, "durat": [146, 155, 157, 160], "dure": [175, 184], "dust": 184, "duti": 186, "e": [49, 51, 53, 55, 57, 60, 133, 177, 179, 184], "each": [135, 137, 155, 175, 179], "easier": 184, "echo": 133, "echo_softcod": 133, "ecohab": 184, "edit": [178, 179], "effect": [135, 137], "either": [172, 177], "electron": [172, 174, 178, 184], "email": 184, "empti": [135, 137, 179], "enabl": [49, 51, 53, 55, 57, 133, 179], "enable_port": [131, 133], "enable_ports_ok": 131, "enable_uart": 179, "enclosur": 175, "encod": [135, 137], "end": [114, 116, 133, 135, 137, 184], "end_tim": 110, "end_timestamp": 114, "english": 179, "enhanc": [155, 157], "enough": 186, "enrich": 186, "ensur": [155, 175, 184], "enter": [146, 155, 157, 160], "entir": [135, 137, 175], "entri": [108, 177], "enum": [13, 22, 23], "env": 178, "environ": 178, "eof": [135, 137], "equal": [135, 137], "equival": [49, 51, 53, 55, 57, 133], "error": [128, 135, 137, 184], "escap": [175, 184], "etc": [49, 53, 55, 57, 98, 178, 179], "ethernet": 179, "even": 155, "event": [49, 51, 53, 55, 57, 62, 68, 104, 106, 112, 122, 131, 133, 146, 155, 157, 160, 184], "event_id": [104, 106, 112], "event_idx": 62, "event_nam": [27, 49, 51, 53, 55, 57, 66, 68, 104, 106, 112, 122], "eventnam": [27, 49, 51, 53, 55, 57], "eventoccurr": 122, "eventprotocol": 2, "events_nam": 86, "events_occurr": 122, "everi": [49, 51, 53, 55, 57, 186], "everyth": 184, "ex": [146, 155, 157, 160], "exampl": [49, 51, 53, 55, 57, 122, 146, 155, 157, 160, 178], "exce": [135, 137, 146, 155, 157, 160], "except": [26, 30, 31, 34, 77, 79, 80, 82, 139, 153, 154, 156, 158, 159, 161], "execut": [49, 51, 53, 55, 57, 133, 146, 155, 157, 160], "exist": [135, 137, 146, 155, 157, 160], "exit": [133, 146, 155, 157, 160, 175, 184], "exit_and_return": 133, "expect": 184, "experi": [51, 98], "experiment": [178, 185], "explor": 184, "export": [49, 51, 53, 55, 57], "extend": [157, 160], "extens": [27, 49, 51, 53, 55, 57, 68], "extern": 179, "extra_set": 23, "extrus": 174, "f": 133, "factori": 22, "factory_valu": 22, "fail": 184, "failur": 184, "fals": [86, 135, 137, 184], "fan": 179, "far": [135, 137], "faster": 179, "feel": [175, 179], "few": 184, "fewer": 184, "fi": 179, "file": [49, 51, 53, 55, 57, 108, 135, 137, 175, 178, 179], "fileno": [135, 137], "filestream": [164, 165], "final": [49, 51, 53, 55, 57], "find": [49, 53, 55, 57, 178, 184], "find_module_by_nam": [49, 51, 53, 55, 57], "finit": 155, "firmwar": [49, 51, 53, 55, 57, 60, 61, 68, 73, 76, 133, 179], "firmware_vers": [86, 133], "first": [131, 133, 146, 155, 157, 160, 178], "fit": 175, "fix": [184, 186], "flip": [49, 51, 53, 55, 57], "float": [22, 104, 106, 112, 122, 146, 155, 157, 160], "floor": 184, "flush": [135, 137], "folder": [49, 51, 53, 55, 57, 178, 179], "follow": [146, 155, 157, 160, 175, 178, 179, 184], "food": 186, "force_hotplug": 179, "format": 179, "foundat": 175, "frame": [175, 184], "free": [175, 179], "freez": 184, "frequenc": 184, "frequent": 184, "from": [49, 51, 53, 55, 57, 70, 78, 81, 96, 100, 102, 104, 106, 110, 112, 118, 124, 126, 131, 135, 137, 146, 155, 157, 160, 175, 179, 184], "fromlist": [96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128], "full": [172, 179], "func": 179, "func2": 179, "function": [36, 40, 43, 49, 51, 53, 55, 57, 166, 178, 184, 186], "further": [135, 137], "fvc4": 179, "g": [49, 51, 53, 55, 57, 60, 133, 177, 184], "gener": [62, 178, 179], "get": [23, 122, 133, 143, 178, 179, 184], "get_all_timestamps_by_ev": 122, "get_descript": 23, "get_event_nam": 62, "get_events_nam": 122, "get_index": 23, "get_indic": 23, "get_modul": 133, "get_text": 23, "get_timestamp_transmiss": 133, "get_timestamps_by_event_nam": 122, "get_typ": 23, "get_valu": 23, "getting_start": 178, "getvalu": [135, 137], "ghost": 184, "git": 179, "github": [40, 179], "given": [146, 155, 157, 160], "global": [146, 155, 157, 160], "global_count": 155, "global_tim": 155, "globalcount": 155, "globalcounter1end": [27, 49, 51, 53, 55, 57, 68], "globalcounter_end": [27, 49, 51, 53, 55, 57, 68], "globalcounterreset": [28, 49, 51, 53, 55, 57, 76], "globaltim": 155, "globaltimer1cancel": [28, 49, 51, 53, 55, 57, 76], "globaltimer1end": [27, 49, 51, 53, 55, 57, 68], "globaltimer1start": [27, 49, 51, 53, 55, 57, 68], "globaltimer1trig": [28, 49, 51, 53, 55, 57, 76], "globaltimer_end": [27, 49, 51, 53, 55, 57, 68], "globaltimer_start": [27, 49, 51, 53, 55, 57, 68], "globaltimercancel": [28, 49, 51, 53, 55, 57, 76], "globaltimertrig": [28, 49, 51, 53, 55, 57, 76], "go": [179, 184], "group": [23, 179], "gui": [170, 178, 184], "guidanc": 175, "h": 133, "h1": 178, "h2": 178, "h3": 178, "ha": [135, 137, 179, 184], "handl": [49, 51, 53, 55, 57, 146, 155, 157, 160, 175], "handler": [49, 51, 53, 55, 57], "handshak": [49, 51, 53, 55, 57, 131, 133], "handshake_ok": 131, "happen": 184, "hardwar": [49, 51, 53, 55, 57, 62, 133, 146, 155, 157, 160, 178, 181], "hardware_descript": 133, "hardwareinfocontain": 70, "harm": 184, "have": [96, 135, 137, 155, 179, 184], "hdmi": 179, "header": [131, 133, 178], "health": 184, "heartbeat": 184, "heavier": 175, "help": [172, 184], "here": [155, 157, 175, 178, 179], "high": 184, "hint": [135, 137], "histori": 108, "hit": [135, 137], "hold": [155, 160], "host_timestamp": [96, 98, 100, 102, 104, 106, 112, 114, 116, 118, 120, 124, 126, 128], "hour": 184, "how": [175, 184], "http": [40, 179], "hw_info_contain": 70, "hw_output": 62, "hx711": 179, "hygien": 186, "i": [22, 23, 49, 51, 53, 55, 57, 61, 91, 131, 133, 135, 137, 155, 157, 160, 175, 178, 179, 184, 186], "i2c": 178, "i2cdetect": 179, "id": [49, 51, 53, 55, 57, 86, 98, 179], "idx": 38, "ignor": 184, "immedi": [135, 137], "implement": [135, 137], "improv": 184, "includ": [143, 178, 179, 186], "index": [23, 104, 106, 112], "indic": [135, 137, 184], "ineffici": 155, "infonam": 110, "inform": [70, 98, 143, 186], "infovalu": 110, "infrar": 175, "initi": [49, 51, 53, 55, 57, 133], "inlin": 172, "inner": 184, "input": [49, 51, 53, 55, 57, 61, 62, 68, 73, 133, 146, 155, 157, 160], "input_matrix": 155, "insert": 179, "insid": [175, 177, 184, 186], "inspir": 40, "instal": [174, 178], "instanc": [146, 155, 157, 160], "instead": 179, "instruct": [174, 175, 178, 179], "int": [22, 23, 49, 51, 53, 55, 57, 86, 104, 106, 112, 146, 155, 157, 160], "integ": [146, 155, 157, 160], "integr": 177, "interact": [51, 135, 137], "interfac": [91, 179], "interfer": 184, "intern": [146, 155, 157, 160], "internet": [179, 184], "intersess": 184, "io": [135, 137], "ip": 179, "ir": [175, 184], "is_condit": [27, 49, 51, 53, 55, 57, 66, 68], "is_global_counter_end": [27, 49, 51, 53, 55, 57, 66, 68], "is_global_timer_cancel": [27, 49, 51, 53, 55, 57, 66, 68], "is_global_timer_end": [27, 49, 51, 53, 55, 57, 66, 68], "is_global_timer_start": [27, 49, 51, 53, 55, 57, 66, 68], "is_global_timer_trigg": [27, 49, 51, 53, 55, 57, 66, 68], "is_run": [155, 160], "is_state_tim": [27, 49, 51, 53, 55, 57, 66, 68], "isatti": [135, 137], "issu": 184, "item": 179, "its": [22, 184], "itself": 184, "ivar": 155, "j": 133, "jitteri": 179, "john": [49, 51, 53, 55, 57], "jump": 179, "just": 184, "k": 133, "keep": [155, 157, 175], "kei": [22, 23, 122, 146, 155, 157, 160], "kept": [155, 157], "kernel": 179, "keyboard": 179, "kill": 38, "know": [179, 184], "kwd": [4, 5, 6, 7, 8, 9, 10, 11, 13], "l": [133, 184], "languag": 179, "last": 184, "launch": 178, "learn": 184, "led": [49, 51, 53, 55, 57, 60], "legaci": [146, 155, 157, 160], "length": [135, 137], "less": [155, 179, 184], "level": 178, "libportaudio2": 179, "libqt5multimedia5": 179, "librari": [155, 157, 179], "lid": 175, "like": [49, 53, 55, 57, 98, 155, 157, 178, 179, 184], "line": [98, 108, 135, 137, 179, 184], "link": [146, 155, 157, 160, 179], "list": [22, 23, 49, 51, 53, 55, 57, 86, 108, 114, 116, 122, 135, 137, 143, 146, 155, 157, 160, 174, 178], "listen": [146, 155, 157, 160], "lite": 179, "live": 177, "ll": 175, "load": [49, 51, 53, 55, 57, 86, 133], "load_cont": 108, "load_messag": 86, "load_serial_messag": [49, 51, 53, 55, 57, 131, 133], "load_serial_message_ok": 131, "log": 179, "logic": [49, 51, 53, 55, 57, 157, 160], "login": 179, "long": 184, "loop": [49, 51, 53, 55, 57, 179], "loop_handl": [49, 51, 53, 55, 57], "loop_interv": [146, 155, 157, 160], "loop_mod": [146, 155, 157, 160], "lose": 184, "lost": 184, "lot": [155, 157, 184], "lower": [175, 178], "m": [133, 179], "machin": [49, 51, 53, 55, 57, 114, 116, 146, 155, 157, 160, 174], "mai": 96, "main": [62, 179, 186], "main_set": 23, "maintain": 186, "mainten": [175, 178, 185], "make": [175, 184], "manag": [179, 186], "mani": 184, "manifest": 155, "manual": [49, 53, 55, 57, 133, 172, 175, 184, 186], "manual_overrid": [49, 53, 55, 57], "manual_override_exec_ev": 133, "mask": [184, 186], "matlab": [155, 157], "matrix": [133, 146, 155, 157, 160], "max_stat": [148, 150, 152], "maxdepth": 178, "md": [178, 179], "mean": 184, "mechan": 175, "mention": 175, "messag": [30, 34, 49, 51, 53, 55, 57, 86, 96, 100, 102, 104, 106, 108, 110, 112, 118, 120, 124, 126, 128, 131, 133, 146, 157, 160], "message_api": 51, "message_id": [49, 51, 53, 55, 57], "messageapi": 51, "meta_output_nam": 155, "meth": 108, "method": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 32, 33, 37, 38, 41, 44, 49, 51, 53, 55, 57, 60, 61, 62, 63, 66, 68, 70, 73, 76, 78, 81, 86, 88, 91, 92, 93, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 131, 133, 135, 137, 143, 144, 146, 148, 150, 152, 155, 157, 160, 164, 165, 170], "mice": [175, 184, 186], "micro": 179, "microcontrol": 175, "microsecond": 155, "might": 184, "mind": [155, 157], "minut": 184, "misalign": 184, "misplac": 184, "mm": 175, "mode": [49, 51, 53, 55, 57, 133], "model": [49, 51, 53, 55, 57, 108], "modifi": [178, 179], "modul": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 35, 46, 47, 48, 49, 51, 53, 55, 57, 58, 62, 64, 70, 71, 74, 84, 86, 89, 94, 129, 131, 133, 138, 145, 162, 168, 178], "module_event_nam": 131, "module_nam": 86, "module_requested_ev": 131, "monitor": [146, 155, 157, 160, 175, 177, 179], "month": 186, "more": [135, 137, 184], "most": [135, 137], "motor": [175, 184], "motor_set": 23, "mount": 175, "mous": [172, 175, 178, 179, 184], "move": 184, "movement": 184, "msg": [86, 135, 137], "msg_id": 86, "multimedia": 178, "must": [60, 61, 68, 73, 76, 135, 137, 146, 155, 157, 160, 179], "mv": [178, 186], "my_bpod": [49, 51, 53, 55, 57], "n_condit": 148, "n_global_count": 150, "n_global_tim": 152, "n_serial_ev": 86, "name": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 25, 49, 51, 53, 55, 57, 60, 62, 93, 98, 104, 106, 112, 114, 116, 122, 131, 133, 146, 155, 157, 160, 179], "nano": 179, "narr": 178, "navig": 179, "necessari": [179, 186], "need": [175, 178, 184, 186], "neg": [135, 137], "net_port": 51, "network": [179, 184], "never": [179, 184], "new": [49, 51, 53, 55, 57, 133, 135, 137, 178, 179, 184], "new_sma_s": 51, "new_state_matrix": 133, "newbot": 179, "newlin": [135, 137], "night": 177, "non": [135, 137], "none": [4, 5, 6, 7, 8, 9, 10, 11, 13, 23, 25, 38, 49, 51, 53, 55, 57, 86, 96, 98, 100, 102, 104, 106, 110, 112, 118, 120, 122, 124, 126, 128, 135, 137, 143, 146, 155, 157, 160, 165], "notif": 177, "novel": 184, "now": 133, "number": [49, 51, 53, 55, 57, 133, 135, 137, 146, 155, 157, 160, 179, 184], "o": [57, 133, 178], "object": [15, 16, 17, 18, 19, 20, 22, 23, 25, 29, 32, 33, 38, 49, 51, 53, 55, 57, 60, 61, 62, 63, 66, 70, 73, 76, 78, 81, 86, 88, 91, 92, 93, 96, 108, 131, 133, 135, 137, 143, 144, 148, 150, 152, 155, 164, 165], "obtain": [70, 179], "occur": [146, 155, 157, 160, 184], "occurr": [114, 116, 122], "off": 184, "off_messag": [146, 155, 157, 160], "offset": [135, 137], "often": 184, "omit": [135, 137], "on_messag": [146, 155, 157, 160], "on_set_delai": [146, 155, 157, 160], "onc": [184, 186], "one": [49, 51, 53, 55, 57, 133, 135, 137, 146, 155, 157, 160, 177], "ones": 177, "oneset_trigg": [146, 155, 157, 160], "onli": [135, 137, 184], "opcod": [49, 51, 53, 55, 57], "open": [38, 49, 51, 53, 55, 57, 91, 179, 184], "opencv": 179, "oper": [135, 137, 178], "option": [49, 51, 53, 55, 57], "order": 184, "orient": 175, "origin": [96, 155, 157, 175], "oserror": [135, 137], "other": [175, 179], "otherwis": [49, 51, 53, 55, 57], "out": [49, 53, 55, 57], "output": [49, 51, 53, 55, 57, 61, 62, 76, 146, 155, 157, 160], "output_act": [146, 155, 157, 160], "output_matrix": 155, "outputchannel": [28, 49, 51, 53, 55, 57], "overdetect": 184, "overlap": 184, "overrid": [49, 51, 53, 55, 57, 133, 135, 137], "override_digital_hw_st": 133, "overview": [178, 181], "own": 177, "pa1_port1in": [27, 49, 51, 53, 55, 57, 68], "packag": [178, 179], "page": [172, 178], "panel": 179, "param": [49, 51, 53, 55, 57, 91, 146, 155, 157, 160], "paramet": [27, 49, 51, 53, 55, 57, 62, 66, 68, 70, 86, 104, 106, 108, 112, 114, 116, 122, 126, 146, 155, 157, 160], "pars": 108, "part": [172, 174, 178], "particip": 179, "particular": 22, "password": 179, "path": [49, 51, 53, 55, 57, 143], "pc": [96, 184], "pdf": 172, "perform": [53, 55, 177, 184], "persist": 184, "person": 184, "phone": 179, "photog": 184, "pi": 178, "piezoelectr": 175, "pin": 178, "pin2": 179, "pip": 179, "pitch": 184, "plai": 184, "pleas": 172, "plot": 184, "plug": 184, "plugin": 179, "po": [135, 137], "poorli": 184, "port": [27, 38, 49, 51, 53, 55, 57, 68, 73, 133, 146, 155, 157, 160, 179, 184], "port1": [27, 49, 51, 53, 55, 57, 68, 73], "port1in": [27, 49, 51, 53, 55, 57, 68], "port1lit": [146, 155, 157, 160], "port1out": 122, "port2": 73, "port2in": 122, "port2out": 122, "port3": 73, "port3in": 122, "port3lit": [146, 155, 157, 160], "port3out": 122, "port4": 73, "port5": 73, "port6": 73, "port7": 73, "port8": 73, "posit": [135, 137, 146, 155, 157, 160, 175], "possibl": 23, "power": [175, 179, 184], "precis": 155, "prefer": 179, "preinstal": 179, "prevent": 175, "previous": [146, 155, 157, 160], "print": [120, 172, 174], "privat": [53, 55], "problem": [184, 186], "process": [49, 51, 53, 55, 57, 78, 81, 100, 102, 110, 118, 124, 126], "program": 155, "progress": 186, "proper": 186, "properli": 186, "properti": 143, "protocol": [49, 51, 53, 55, 57, 120, 177], "provid": [135, 137, 172, 175, 186], "pulseaudio": 179, "pump": [175, 184], "purchas": 175, "push": 175, "put": 179, "pwm": [49, 51, 53, 55, 57, 60, 179], "pwm1": [146, 155, 157, 160], "pwm2": [146, 155, 157, 160], "py": [108, 126, 179], "pybpodapi": [49, 51, 53, 55, 57, 155, 157, 178], "pybpodgui_plugin": [100, 102, 108, 110, 118, 120, 124, 126], "pybpodprotocol": [37, 39], "pyqt5": 178, "python": [91, 155, 157, 179], "python3": 179, "qtmultimedia": 179, "qualiti": 175, "qualnam": [4, 5, 6, 7, 8, 9, 10, 11, 13], "qwidget": 170, "r": 133, "rais": [135, 137], "rang": [146, 155, 157, 160], "rare": 184, "raspberri": 178, "raspberrypi": 179, "reach": [135, 137], "read": [78, 81, 135, 137], "readabl": [135, 137], "reader": 175, "readi": 179, "readlin": [135, 137], "real": [177, 179], "receiv": [49, 53, 55, 57, 70, 131, 177, 179], "recommend": 184, "reconnect": 184, "record": 184, "reduc": 155, "referenc": [146, 155, 157, 160], "refil": 184, "regard": 177, "regist": [49, 51, 53, 55, 57], "regular": 184, "rel": [135, 137], "relai": 133, "releas": [49, 51, 53, 55, 57], "reliabl": 175, "reload": 184, "remot": [177, 178, 184], "remov": [179, 184, 186], "render": 178, "repeat": 155, "repetit": 122, "replac": [146, 157, 160, 184], "repo": 179, "report": [184, 186], "repres": [51, 70, 96, 98, 100, 102, 104, 106, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128], "represent": [22, 23], "request": [53, 55, 131, 133], "requir": 186, "reset": [49, 51, 53, 55, 57, 133], "reset_clock": 133, "reset_serial_messag": [49, 51, 53, 55, 57, 131, 133], "resolut": 179, "resolv": 184, "respons": 184, "restart": 184, "result": 178, "retriev": [49, 51, 53, 55, 57, 135, 137], "return": [23, 27, 38, 39, 42, 45, 49, 51, 53, 55, 57, 62, 66, 68, 91, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 133, 135, 137, 143, 146, 155, 157, 160, 184], "review": [184, 186], "reward": 175, "rfid": [175, 184], "right": 179, "rigid": 175, "rise": 184, "rodent": 177, "room": 184, "routin": 186, "row": [96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128], "rst": 178, "rtype": [49, 51, 53, 55, 57], "rule": 178, "run": [49, 51, 53, 55, 57, 133, 143, 155, 160, 179, 184], "run_asap": [49, 51, 53, 55, 57], "run_state_machin": [49, 51, 53, 55, 57, 131, 133], "same": [178, 179, 184], "save": 108, "scale": [179, 184], "scaleprotocol": [41, 42], "scheme": 133, "scipi": 179, "sck": 78, "score": 184, "screen": [178, 184], "screen_set": 23, "screenshot": 184, "script": 184, "sd": 179, "search": [49, 51, 53, 55, 57, 179], "second": [146, 155, 157, 160, 179, 184], "section": [175, 178, 186], "see": [146, 155, 157, 160, 179, 184], "seealso": 126, "seek": [135, 137], "seekabl": [135, 137], "select": 179, "send": [38, 49, 51, 53, 55, 57, 86, 133, 146, 157, 160, 179, 184], "send_ev": [146, 155, 157, 160], "send_state_machin": [49, 51, 53, 55, 57], "send_to_hw_seri": 133, "sensor": [175, 179], "sent": 133, "separ": [135, 137], "sergi": 184, "serial": [28, 49, 51, 53, 55, 57, 60, 76, 91, 133, 184], "serial1": [28, 49, 51, 53, 55, 57, 73, 76], "serial1_3": 73, "serial1_4": 73, "serial2": 73, "serial3": 73, "serial_channel": [49, 51, 53, 55, 57], "serial_messag": [49, 51, 53, 55, 57], "serial_port": [49, 51, 53, 55, 57, 86, 91], "serialportnam": 91, "server": [100, 102, 110, 118, 124, 126, 179], "servo": 178, "session": [38, 49, 51, 53, 55, 57, 96, 108, 133, 135, 137, 184], "session_io": 108, "session_nam": [49, 51, 53, 55, 57], "sessionio": 108, "set": [49, 51, 53, 55, 57, 60, 61, 68, 70, 73, 76, 133, 135, 137, 146, 155, 157, 160, 178, 184], "set_condit": [146, 155, 157, 160], "set_global_count": [146, 155, 157, 160], "set_global_tim": [146, 155, 157, 160], "set_global_timer_legaci": [146, 155, 157, 160], "set_module_relai": 133, "setup": [70, 175, 178, 185], "setup_input_channel": 62, "setup_output_channel": 62, "setuptools_scm": 179, "share": 179, "should": [49, 51, 53, 55, 57, 135, 137, 146, 155, 157, 160, 178, 179, 184], "sht31": 179, "sick": 184, "simplifi": 91, "site": 179, "size": [93, 135, 137], "sleep": 184, "slightli": 184, "slot": 175, "sma": [49, 51, 53, 55, 57, 122, 146, 155, 157, 160], "so": [135, 137, 155, 157, 184], "soft": [49, 51, 53, 55, 57, 133], "softcod": [28, 49, 51, 53, 55, 57, 76, 112, 184], "softcode1": [28, 49, 51, 53, 55, 57, 76], "softcode_handler_funct": [49, 51, 53, 55, 57], "softwar": [174, 178, 181], "some": 184, "someth": [179, 184, 186], "sometim": 184, "sort": 175, "sound": [178, 184], "sound_set": 23, "sounddevic": 179, "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 41, 42, 44, 45, 49, 51, 53, 55, 57, 60, 61, 62, 63, 66, 68, 70, 73, 76, 78, 79, 81, 82, 86, 88, 91, 92, 93, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 131, 133, 135, 137, 140, 143, 144, 146, 148, 150, 152, 154, 155, 157, 158, 160, 161, 164, 165, 167, 170, 175, 178, 179], "specif": [60, 61, 68, 73, 76, 114, 116, 186], "specifi": [135, 137], "sporad": 184, "stabil": 175, "stage": 184, "start": [4, 5, 6, 7, 8, 9, 10, 11, 13, 49, 51, 53, 55, 57, 114, 116, 135, 137, 146, 155, 157, 160, 178, 179, 184], "start_tim": 110, "state": [49, 51, 53, 55, 57, 104, 106, 112, 114, 116, 122, 133, 135, 137, 146, 155, 157, 160], "state_change_condit": [146, 155, 157, 160], "state_machin": [49, 51, 53, 55, 57], "state_machine_installation_statu": 131, "state_nam": [114, 116, 146, 155, 157, 160], "state_tim": [146, 155, 157, 160], "state_timer_matrix": 155, "statedur": [114, 116], "statemachin": [49, 51, 53, 55, 57, 122], "statemachinebas": 157, "statemachinebuild": 160, "statemachinerunn": 146, "statement": 120, "stateoccurr": 122, "states_occurr": 122, "static": [27, 49, 51, 53, 55, 57, 66, 68], "statu": [177, 184], "stderr": [78, 81, 100, 102, 110, 118, 124, 126], "stdout": [78, 81], "step": 179, "still": [146, 155, 157, 160, 184], "stl": 175, "stop": [49, 51, 53, 55, 57, 175, 184], "store": [114, 116, 143], "str": [22, 23, 27, 49, 51, 53, 55, 57, 66, 68, 104, 106, 108, 112, 114, 116, 122, 146, 155, 157, 160], "stream": [78, 81, 135, 137, 144], "string": [22, 23, 135, 137, 146, 155, 157, 160], "stringio": [135, 137], "structur": [155, 157, 175], "stuck": 184, "sub": 178, "subclass": [135, 137], "subject": 184, "subscrib": 179, "success": 131, "sucros": 186, "sudo": 179, "summari": 184, "superenum": [4, 5, 6, 7, 8, 9, 10, 11, 12], "supplement": 184, "suppli": [175, 179, 184], "supplier": 175, "support": [49, 51, 53, 55, 57, 60, 172, 175], "sure": [175, 179, 184], "suspect": [184, 186], "symbol": 179, "symlink": 179, "sync": [49, 51, 53, 55, 57, 133, 146, 155, 157, 160], "sync_channel": [49, 51, 53, 55, 57], "sync_channel_mod": [131, 133], "sync_channel_mode_ok": 131, "sync_mod": [49, 51, 53, 55, 57], "synchron": [49, 51, 53, 55, 57, 146, 155, 157, 160], "system": [23, 172, 175, 177, 178, 186], "t": [133, 135, 137, 155, 175, 184], "tab": 179, "tag": 184, "take": [146, 155, 157, 160], "target_ev": [146, 155, 157, 160], "task": [98, 177, 184], "team": 179, "technic": [178, 181], "telegram": [177, 178, 186], "telegram_chat": 179, "telegram_set": 23, "telegram_token": 179, "tell": [135, 137], "temperatur": [179, 184], "tempsensorprotocol": [44, 45], "tend": 184, "termin": [179, 184], "test": [49, 51, 53, 55, 57, 184], "text": [135, 137, 179], "textio": [135, 137], "textiobas": [135, 137], "than": [49, 51, 53, 55, 57, 155, 179, 184], "thei": [23, 146, 157, 160, 175, 184], "them": [175, 179, 184], "thi": [49, 51, 53, 55, 57, 104, 106, 112, 114, 116, 135, 137, 146, 155, 157, 160, 172, 178, 184, 186], "thing": 98, "think": 179, "threshold": [146, 155, 157, 160, 184], "through": [49, 51, 53, 55, 57, 86, 177], "time": [146, 155, 157, 160, 177, 178, 184], "timeout": 91, "timer": [146, 155, 157, 160], "timer_dur": [146, 155, 157, 160], "timer_id": [146, 155, 157, 160], "timestamp": [49, 51, 53, 55, 57, 104, 106, 112, 114, 116, 122, 133], "titl": 178, "toctre": 178, "todo": 155, "tool": 179, "toolbar": 179, "top": 184, "total": [135, 137], "total_states_ad": 155, "touch": [179, 184], "touchscreen": 184, "touchscreen_set": 23, "train": [177, 184, 186], "transact": 91, "transit": [146, 155, 157, 160], "transmiss": [133, 184], "transpar": 175, "trap": 184, "trial": [49, 51, 53, 55, 57, 143, 155, 184], "trial_start_timestamp": 122, "trigger": [133, 146, 155, 157, 160, 184], "trigger_softcod": 133, "true": [96, 98, 100, 102, 104, 106, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 135, 137, 179, 184], "truncat": [135, 137], "try": 184, "tty": [49, 51, 53, 55, 57], "ttyacm": 179, "tube": 174, "tunnel": 175, "tup": [27, 49, 51, 53, 55, 57, 68], "tupl": [146, 155, 157, 160], "turn": 184, "two": [177, 184, 186], "txt": 179, "txtline": 108, "type": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 23, 27, 38, 39, 42, 45, 49, 51, 53, 55, 57, 61, 66, 68, 108, 122, 133, 143, 146, 157, 160, 179], "typestr": [96, 98, 100, 102, 104, 106, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128], "u": 133, "uart": 178, "udev": 178, "udevadm": 179, "unchang": [135, 137], "undeclar": [146, 155, 157, 160], "underli": [135, 137], "unexpectedli": 184, "uniqu": [49, 51, 53, 55, 57, 146, 155, 157, 160], "unless": [175, 184], "unlik": [146, 155, 157, 160], "unplug": 184, "unrel": 184, "until": [135, 137, 146, 155, 157, 160], "unus": [135, 137], "up": [70, 175], "updat": [49, 51, 53, 55, 57, 178], "update_state_numb": [146, 157, 160], "upgrad": 179, "upload": 51, "upper": 175, "us": [49, 51, 53, 55, 57, 86, 135, 137, 146, 155, 157, 160, 172, 175, 177, 178], "usag": [178, 179], "usb": [179, 184], "usb1": 73, "usbmodem1293": [49, 51, 53, 55, 57], "user": [49, 51, 53, 55, 57, 177, 179], "username_to_id_bot": 179, "usual": [78, 81, 135, 137, 179, 184], "v": [133, 179], "valid": [146, 155, 157, 160], "valu": [4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 23, 49, 53, 55, 57, 60, 61, 68, 73, 76, 122, 126, 146, 155, 157, 160], "value_nam": 126, "value_typ": 22, "valueerror": [135, 137], "valv": [28, 49, 51, 53, 55, 57, 60, 76, 184], "variabl": [51, 104, 106, 112, 114, 116, 122, 155, 160], "variou": 175, "vc4": 179, "ventil": 184, "venv": 179, "veri": 184, "verifi": 184, "version": [49, 51, 53, 55, 57, 146, 155, 157, 160], "via": [146, 155, 157, 160, 184], "video": [179, 184], "view": 172, "viewer": 179, "villag": [172, 175], "virtual": [133, 155], "wa": [51, 184], "wait": 184, "walk": 184, "want": 179, "water": [175, 184, 186], "wayland": 179, "we": [172, 179], "web": 179, "webpag": 179, "websit": 179, "week": 186, "weigh": 184, "weight": [179, 184], "welcom": [155, 157], "well": 184, "were": [146, 157, 160], "what": [175, 178, 184], "when": [22, 23, 49, 51, 53, 55, 57, 146, 155, 157, 160, 175, 179, 184, 186], "whenc": [135, 137], "where": [146, 155, 157, 160, 175, 184], "whether": [51, 135, 137, 155, 160], "which": [135, 137, 155, 157, 178], "while": [49, 51, 53, 55, 57, 160], "white": 175, "whole": [155, 157], "whose": [122, 146, 155, 157, 160], "why": 184, "wi": 179, "window": 179, "wire": [27, 28, 49, 51, 53, 55, 57, 60, 68, 76], "wire1": [28, 49, 51, 53, 55, 57, 73, 76], "wire1high": [27, 28, 49, 51, 53, 55, 57, 68, 76], "wire2": 73, "within": 178, "without": [122, 175], "won": 155, "work": [184, 186], "workspace_path": [49, 51, 53, 55, 57], "writabl": [135, 137], "write": [49, 53, 55, 57, 133, 135, 137, 179], "write_to_modul": 133, "writelin": [135, 137], "written": [135, 137], "wrong": 184, "www": 179, "x": [133, 179, 184], "x11": 179, "y": 179, "ye": [179, 184], "yet": 155, "you": [146, 155, 157, 160, 172, 175, 178, 184, 186], "your": [155, 172, 178, 179], "z": 133, "zero": [146, 155, 157, 160], "zone": 184, "\u00b5l": 184}, "titles": ["classes", "collection", "Collection", "enums", "Actions", "Active", "AreaActive", "Color", "Cycle", "DataTable", "Info", "ScreenActive", "State", "SuperEnum", "protocols", "CameraProtocol", "EventProtocol", "PyBpodProtocol", "ScaleProtocol", "TelegramBotProtocol", "TempSensorProtocol", "settings_class", "Setting", "Settings", "subject", "Subject", "task", "Event", "Output", "Task", "village.classes.task.TaskError", "training", "Settings", "Training", "village.classes.training.TrainingError", "devices", "bpod", "PyBpod", "Softcode", "get_bpod", "scale", "Scale", "get_scale", "temp_sensor", "TempSensor", "get_temp_sensor", "gui", "pybpodapi", "bpod", "Bpod", "bpod_base", "BpodBase", "bpod_com_protocol", "BpodCOMProtocol", "bpod_com_protocol_modules", "BpodCOMProtocolModules", "bpod_io", "BpodIO", "hardware", "channels", "ChannelName", "ChannelType", "Channels", "EventsPositions", "events", "base_eventname", "BaseEventName", "bpod_events", "EventName", "hardware", "Hardware", "input_channels", "bpod_input_channels", "InputName", "output_channels", "bpod_output_channels", "OutputChannel", "non_blockingsocketreceive", "NonBlockingSocketReceive", "village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream", "non_blockingstreamreader", "NonBlockingStreamReader", "village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream", "settings", "bpod_modules", "bpod_module", "BpodModule", "bpod_modules", "BpodModules", "com", "arcom", "ArCOM", "ArduinoTypes", "DataType", "messaging", "base_message", "BaseMessage", "debug", "DebugMessage", "end_trial", "EndTrial", "error", "ErrorMessage", "event_occurrence", "EventOccurrence", "event_resume", "EventResume", "parser", "MessageParser", "session_info", "SessionInfo", "softcode_occurrence", "SoftcodeOccurrence", "state_occurrence", "StateOccurrence", "state_transition", "StateTransition", "stderr", "StderrMessage", "stdout", "StdoutMessage", "trial", "Trial", "untagged_message", "UntaggedMessage", "value", "ValueMessage", "warning", "WarningMessage", "protocol", "recv_msg_headers", "ReceiveMessageHeader", "send_msg_headers", "SendMessageHeader", "stderr_buffer", "StderrBuffer", "stdout_buffer", "StdoutBuffer", "exceptions", "bpod_error", "village.pybpodapi.exceptions.bpod_error.BpodErrorException", "protocol", "session", "Session", "StreamsWrapper", "state_machine", "StateMachine", "conditions", "Conditions", "global_counters", "GlobalCounters", "global_timers", "GlobalTimers", "state_machine_base", "village.pybpodapi.state_machine.state_machine_base.SMAError", "StateMachineBase", "state_machine_builder", "StateMachineBuilder", "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError", "state_machine_runner", "StateMachineRunner", "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError", "utils", "csv", "Reader", "Writer", "date_parser", "parse", "screen", "behaviour_window", "BehaviourWindow", "API", "Assembly instructions", "Electronic Instructions", "Assembly of the Mouse Village", "List of parts", "Software installation", "What is the Mouse Village", "Welcome to village\u2019s documentation!", "Install MV Raspberry", "Hardware Technical Details", "Operation of the Mouse Village", "Software overview", "Results", "Alarms", "Usage", "Maintenance", "Experimental setup"], "titleterms": {"": 178, "1": 179, "2": 179, "3d": 175, "If": 179, "access": 179, "action": 4, "activ": 5, "alarm": [179, 184], "aluminium": 175, "an": 179, "api": 171, "ar": 179, "arcom": [90, 91], "arduinotyp": 92, "areaact": 6, "assembli": [172, 174], "base_eventnam": 65, "base_messag": 95, "baseeventnam": 66, "basemessag": 96, "behaviour_window": 169, "behaviourwindow": 170, "biweekli": 186, "bot": 179, "bpod": [36, 48, 49, 79, 82], "bpod_bas": 50, "bpod_com_protocol": 52, "bpod_com_protocol_modul": 54, "bpod_error": [139, 140], "bpod_ev": 67, "bpod_input_channel": 72, "bpod_io": 56, "bpod_modul": [84, 85, 87], "bpod_output_channel": 75, "bpodbas": 51, "bpodcomprotocol": 53, "bpodcomprotocolmodul": 55, "bpoderrorexcept": 140, "bpodio": 57, "bpodmodul": [86, 88], "cameraprotocol": 15, "channel": [59, 62], "channelnam": 60, "channeltyp": 61, "check": 179, "class": [0, 30, 34, 171], "cnc": 175, "collect": [1, 2], "color": 7, "com": 89, "commun": 179, "compon": 175, "condit": [147, 148], "configur": 179, "connect": 179, "content": 178, "creat": 179, "csv": 163, "cycl": 8, "daili": 186, "datat": 9, "datatyp": 93, "date_pars": 166, "debug": 97, "debugmessag": 98, "detail": 180, "devic": [35, 171], "document": 178, "electron": [173, 175], "end_trial": 99, "endtrial": 100, "enum": 3, "env": 179, "environ": 179, "error": 101, "errormessag": 102, "event": [27, 64], "event_occurr": 103, "event_resum": 105, "eventnam": 68, "eventoccurr": 104, "eventprotocol": 16, "eventresum": 106, "eventsposit": 63, "except": [138, 140], "exist": 179, "experiment": 187, "extrus": 175, "first": 179, "get_bpod": 39, "get_scal": 42, "get_temp_sensor": 45, "global_count": 149, "global_tim": 151, "globalcount": 150, "globaltim": 152, "gui": [46, 171], "hardwar": [58, 69, 70, 179, 180], "i": 177, "i2c": 179, "index": 178, "info": 10, "input_channel": 71, "inputnam": 73, "instal": [176, 179], "instruct": [172, 173], "interrog": 184, "launch": 179, "list": 175, "machin": 175, "mainten": 186, "make": 179, "messag": 94, "messagepars": 108, "monthli": 186, "mous": [174, 177, 181], "multimedia": 179, "mv": [174, 179, 181], "need": 179, "non_blockingsocketrec": [77, 79], "non_blockingstreamread": [80, 82], "nonblockingsocketrec": 78, "nonblockingstreamread": 81, "o": 179, "occasion": 186, "one": 179, "onli": 179, "oper": 181, "option": 179, "output": 28, "output_channel": 74, "outputchannel": 76, "overview": 182, "pars": 167, "parser": 107, "part": 175, "pi": 179, "pin": 179, "print": 175, "protocol": [14, 129, 141], "pybpod": 37, "pybpodapi": [47, 79, 82, 140, 154, 158, 161, 171], "pybpodprotocol": 17, "pyqt5": 179, "raspberri": 179, "raspi": 179, "reader": 164, "realvnc": 179, "receivemessagehead": 131, "recv_msg_head": 130, "remot": 179, "result": 183, "rule": 179, "scale": [40, 41], "scaleprotocol": 18, "screen": [168, 171, 179], "screenact": 11, "search": 178, "send_msg_head": 132, "sendmessagehead": 133, "servo": 179, "session": [142, 143], "session_info": 109, "sessioninfo": 110, "set": [22, 23, 32, 83, 179], "settings_class": 21, "setup": 187, "slow": 179, "smaerror": 154, "softcod": 38, "softcode_occurr": 111, "softcodeoccurr": 112, "softwar": [176, 179, 182], "sound": 179, "state": 12, "state_machin": [145, 154, 158, 161], "state_machine_bas": [153, 154], "state_machine_build": [156, 158], "state_machine_runn": [159, 161], "state_occurr": 113, "state_transit": 115, "statemachin": 146, "statemachinebas": 155, "statemachinebuild": 157, "statemachinebuildererror": 158, "statemachinerunn": 160, "statemachinerunnererror": 161, "stateoccurr": 114, "statetransit": 116, "stderr": 117, "stderr_buff": 134, "stderrbuff": 135, "stderrmessag": 118, "stdout": 119, "stdout_buff": 136, "stdoutbuff": 137, "stdoutmessag": 120, "streamswrapp": 144, "subject": [24, 25], "superenum": 13, "system": [179, 184], "task": [26, 29, 30], "taskerror": 30, "technic": 180, "telegram": 179, "telegrambotprotocol": 19, "temp_sensor": 43, "tempsensor": 44, "tempsensorprotocol": 20, "thi": 179, "thing": 179, "time": 179, "token": 179, "train": [31, 33, 34], "trainingerror": 34, "trial": [121, 122], "trigger": 179, "tube": 175, "uart": 179, "udev": 179, "unexpectedendofstream": [79, 82], "untagged_messag": 123, "untaggedmessag": 124, "updat": 179, "us": 179, "usag": 185, "util": 162, "valu": 125, "valuemessag": 126, "veri": 179, "villag": [30, 34, 79, 82, 140, 154, 158, 161, 174, 177, 178, 179, 181], "warn": 127, "warningmessag": 128, "weekli": 186, "welcom": 178, "what": [177, 179], "writer": 165, "you": 179}})