Search.setIndex({"alltitles": {"3D-Printed Parts": [[173, "d-printed-parts"]], "API": [[169, null]], "Accessing the pins by hardware (for servos) and using pin uart to communicate": [[177, "accessing-the-pins-by-hardware-for-servos-and-using-pin-uart-to-communicate"]], "Actions": [[2, null]], "Active": [[3, null]], "Alarms": [[182, null], [182, "id1"]], "Aluminium Extrusions and Tubes": [[173, "aluminium-extrusions-and-tubes"]], "ArCOM": [[89, null]], "ArduinoTypes": [[90, null]], "AreaActive": [[4, null]], "Assembly instructions": [[170, null]], "Assembly of MV": [[172, null]], "Assembly of the Mouse Village": [[172, null]], "BaseEventName": [[64, null]], "BaseMessage": [[94, null]], "BehaviourWindow": [[168, null]], "Biweekly": [[184, "biweekly"]], "Bpod": [[47, null]], "BpodBase": [[49, null]], "BpodCOMProtocol": [[51, null]], "BpodCOMProtocolModules": [[53, null]], "BpodIO": [[55, null]], "BpodModule": [[84, null]], "BpodModules": [[86, null]], "CNC Machined Parts": [[173, "cnc-machined-parts"]], "CameraProtocol": [[13, null]], "ChannelName": [[58, null]], "ChannelType": [[59, null]], "Channels": [[60, null]], "Check the token of an existing bot": [[177, "check-the-token-of-an-existing-bot"]], "Classes": [[169, "classes"]], "Color": [[5, null]], "Conditions": [[146, null]], "Configure remote access": [[177, "configure-remote-access"]], "Contents:": [[176, null]], "Create a telegram bot": [[177, "create-a-telegram-bot"]], "Cycle": [[6, null]], "Daily": [[184, "daily"]], "DataTable": [[7, null]], "DataType": [[91, null]], "DebugMessage": [[96, null]], "Devices": [[169, "devices"]], "Electronic Components": [[173, "electronic-components"]], "Electronic Instructions": [[171, null]], "EndTrial": [[98, null]], "ErrorMessage": [[100, null]], "Event": [[25, null]], "EventName": [[66, null]], "EventOccurrence": [[102, null]], "EventProtocol": [[14, null]], "EventResume": [[104, null]], "EventsPositions": [[61, null]], "Experimental setup": [[185, null]], "GlobalCounters": [[148, null]], "GlobalTimers": [[150, null]], "Gui": [[169, "gui"]], "Hardware": [[68, null]], "Hardware Technical Details": [[178, null]], "I2C": [[177, "i2c"]], "If you are using 2 screens:": [[177, "if-you-are-using-2-screens"]], "If you are using one screen only:": [[177, "if-you-are-using-one-screen-only"]], "Index & Search": [[176, "index-search"]], "Info": [[8, null]], "InputName": [[71, null]], "Install MV Raspberry": [[177, null]], "Install village": [[177, "install-village"]], "Interrogate the system": [[182, "interrogate-the-system"]], "Launch Raspberry Pi OS for the first time": [[177, "launch-raspberry-pi-os-for-the-first-time"]], "List of parts": [[173, null]], "Maintenance": [[184, null]], "Make the bot triggers the alarms": [[177, "make-the-bot-triggers-the-alarms"]], "MessageParser": [[106, null]], "Monthly": [[184, "monthly"]], "NonBlockingSocketReceive": [[76, null]], "NonBlockingStreamReader": [[79, null]], "Occasionally": [[184, "occasionally"]], "Operation of MV": [[179, null]], "Operation of the Mouse Village": [[179, null]], "Option 1: with RealVNC": [[177, "option-1-with-realvnc"]], "Option 2 (things are very slow with this): with raspi-connect": [[177, "option-2-things-are-very-slow-with-this-with-raspi-connect"]], "Output": [[26, null]], "OutputChannel": [[74, null]], "PyBpod": [[35, null]], "PyBpodProtocol": [[15, null]], "PyQT5 multimedia": [[177, "pyqt5-multimedia"]], "Pybpodapi": [[169, "pybpodapi"]], "Reader": [[162, null]], "ReceiveMessageHeader": [[129, null]], "Results": [[181, null]], "Scale": [[39, null]], "ScaleProtocol": [[16, null]], "Screen": [[169, "screen"]], "Screen settings and I2C communication": [[177, "screen-settings-and-i2c-communication"]], "ScreenActive": [[9, null]], "SendMessageHeader": [[131, null]], "Session": [[141, null]], "SessionInfo": [[108, null]], "Setting": [[20, null]], "Setting .env environment": [[177, "setting-env-environment"]], "Settings": [[21, null], [30, null]], "Softcode": [[36, null]], "SoftcodeOccurrence": [[110, null]], "Software installation": [[174, null]], "Software overview": [[180, null]], "Sound settings": [[177, "sound-settings"]], "State": [[10, null]], "StateMachine": [[144, null]], "StateMachineBase": [[153, null]], "StateMachineBuilder": [[155, null]], "StateMachineRunner": [[158, null]], "StateOccurrence": [[112, null]], "StateTransition": [[114, null]], "StderrBuffer": [[133, null]], "StderrMessage": [[116, null]], "StdoutBuffer": [[135, null]], "StdoutMessage": [[118, null]], "StreamsWrapper": [[142, null]], "Subject": [[23, null]], "SuperEnum": [[11, null]], "Task": [[27, null]], "TelegramBotProtocol": [[17, null]], "TempSensor": [[42, null]], "TempSensorProtocol": [[18, null]], "Training": [[31, null]], "Trial": [[120, null]], "Udev rules": [[177, "udev-rules"]], "UntaggedMessage": [[122, null]], "Updating the system and installing software": [[177, "updating-the-system-and-installing-software"]], "Usage": [[183, null], [183, null]], "ValueMessage": [[124, null]], "WarningMessage": [[126, null]], "Weekly": [[184, "weekly"]], "Welcome to village\u2019s documentation!": [[176, null]], "What is the Mouse Village": [[175, null]], "What you need": [[177, "what-you-need"]], "Writer": [[163, null]], "arcom": [[88, null]], "base_eventname": [[63, null]], "base_message": [[93, null]], "behaviour_window": [[167, null]], "bpod": [[34, null], [46, null]], "bpod_base": [[48, null]], "bpod_com_protocol": [[50, null]], "bpod_com_protocol_modules": [[52, null]], "bpod_error": [[137, null]], "bpod_events": [[65, null]], "bpod_input_channels": [[70, null]], "bpod_io": [[54, null]], "bpod_module": [[83, null]], "bpod_modules": [[82, null], [85, null]], "bpod_output_channels": [[73, null]], "channels": [[57, null]], "classes": [[0, null]], "com": [[87, null]], "conditions": [[145, null]], "csv": [[161, null]], "date_parser": [[164, null]], "debug": [[95, null]], "devices": [[33, null]], "end_trial": [[97, null]], "enums": [[1, null]], "error": [[99, null]], "event_occurrence": [[101, null]], "event_resume": [[103, null]], "events": [[62, null]], "exceptions": [[136, null]], "get_bpod": [[37, null]], "get_scale": [[40, null]], "get_temp_sensor": [[43, null]], "global_counters": [[147, null]], "global_timers": [[149, null]], "gui": [[44, null]], "hardware": [[56, null], [67, null]], "input_channels": [[69, null]], "messaging": [[92, null]], "non_blockingsocketreceive": [[75, null]], "non_blockingstreamreader": [[78, null]], "output_channels": [[72, null]], "parse": [[165, null]], "parser": [[105, null]], "protocol": [[127, null], [139, null]], "protocols": [[12, null]], "pybpodapi": [[45, null]], "recv_msg_headers": [[128, null]], "scale": [[38, null]], "screen": [[166, null]], "send_msg_headers": [[130, null]], "session": [[140, null]], "session_info": [[107, null]], "settings": [[81, null]], "settings_class": [[19, null]], "softcode_occurrence": [[109, null]], "state_machine": [[143, null]], "state_machine_base": [[151, null]], "state_machine_builder": [[154, null]], "state_machine_runner": [[157, null]], "state_occurrence": [[111, null]], "state_transition": [[113, null]], "stderr": [[115, null]], "stderr_buffer": [[132, null]], "stdout": [[117, null]], "stdout_buffer": [[134, null]], "subject": [[22, null]], "task": [[24, null]], "temp_sensor": [[41, null]], "training": [[29, null]], "trial": [[119, null]], "untagged_message": [[121, null]], "utils": [[160, null]], "value": [[123, null]], "village.classes.task.TaskError": [[28, null]], "village.classes.training.TrainingError": [[32, null]], "village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream": [[77, null]], "village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream": [[80, null]], "village.pybpodapi.exceptions.bpod_error.BpodErrorException": [[138, null]], "village.pybpodapi.state_machine.state_machine_base.SMAError": [[152, null]], "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError": [[156, null]], "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError": [[159, null]], "warning": [[125, null]]}, "docnames": ["api_generated/village.classes", "api_generated/village.classes.enums", "api_generated/village.classes.enums.Actions", "api_generated/village.classes.enums.Active", "api_generated/village.classes.enums.AreaActive", "api_generated/village.classes.enums.Color", "api_generated/village.classes.enums.Cycle", "api_generated/village.classes.enums.DataTable", "api_generated/village.classes.enums.Info", "api_generated/village.classes.enums.ScreenActive", "api_generated/village.classes.enums.State", "api_generated/village.classes.enums.SuperEnum", "api_generated/village.classes.protocols", "api_generated/village.classes.protocols.CameraProtocol", "api_generated/village.classes.protocols.EventProtocol", "api_generated/village.classes.protocols.PyBpodProtocol", "api_generated/village.classes.protocols.ScaleProtocol", "api_generated/village.classes.protocols.TelegramBotProtocol", "api_generated/village.classes.protocols.TempSensorProtocol", "api_generated/village.classes.settings_class", "api_generated/village.classes.settings_class.Setting", "api_generated/village.classes.settings_class.Settings", "api_generated/village.classes.subject", "api_generated/village.classes.subject.Subject", "api_generated/village.classes.task", "api_generated/village.classes.task.Event", "api_generated/village.classes.task.Output", "api_generated/village.classes.task.Task", "api_generated/village.classes.task.TaskError", "api_generated/village.classes.training", "api_generated/village.classes.training.Settings", "api_generated/village.classes.training.Training", "api_generated/village.classes.training.TrainingError", "api_generated/village.devices", "api_generated/village.devices.bpod", "api_generated/village.devices.bpod.PyBpod", "api_generated/village.devices.bpod.Softcode", "api_generated/village.devices.bpod.get_bpod", "api_generated/village.devices.scale", "api_generated/village.devices.scale.Scale", "api_generated/village.devices.scale.get_scale", "api_generated/village.devices.temp_sensor", "api_generated/village.devices.temp_sensor.TempSensor", "api_generated/village.devices.temp_sensor.get_temp_sensor", "api_generated/village.gui", "api_generated/village.pybpodapi", "api_generated/village.pybpodapi.bpod", "api_generated/village.pybpodapi.bpod.Bpod", "api_generated/village.pybpodapi.bpod.bpod_base", "api_generated/village.pybpodapi.bpod.bpod_base.BpodBase", "api_generated/village.pybpodapi.bpod.bpod_com_protocol", "api_generated/village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules", "api_generated/village.pybpodapi.bpod.bpod_io", "api_generated/village.pybpodapi.bpod.bpod_io.BpodIO", "api_generated/village.pybpodapi.bpod.hardware", "api_generated/village.pybpodapi.bpod.hardware.channels", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelName", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelType", "api_generated/village.pybpodapi.bpod.hardware.channels.Channels", "api_generated/village.pybpodapi.bpod.hardware.channels.EventsPositions", "api_generated/village.pybpodapi.bpod.hardware.events", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events.EventName", "api_generated/village.pybpodapi.bpod.hardware.hardware", "api_generated/village.pybpodapi.bpod.hardware.hardware.Hardware", "api_generated/village.pybpodapi.bpod.hardware.input_channels", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName", "api_generated/village.pybpodapi.bpod.hardware.output_channels", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream", "api_generated/village.pybpodapi.bpod.settings", "api_generated/village.pybpodapi.bpod_modules", "api_generated/village.pybpodapi.bpod_modules.bpod_module", "api_generated/village.pybpodapi.bpod_modules.bpod_module.BpodModule", "api_generated/village.pybpodapi.bpod_modules.bpod_modules", "api_generated/village.pybpodapi.bpod_modules.bpod_modules.BpodModules", "api_generated/village.pybpodapi.com", "api_generated/village.pybpodapi.com.arcom", "api_generated/village.pybpodapi.com.arcom.ArCOM", "api_generated/village.pybpodapi.com.arcom.ArduinoTypes", "api_generated/village.pybpodapi.com.arcom.DataType", "api_generated/village.pybpodapi.com.messaging", "api_generated/village.pybpodapi.com.messaging.base_message", "api_generated/village.pybpodapi.com.messaging.base_message.BaseMessage", "api_generated/village.pybpodapi.com.messaging.debug", "api_generated/village.pybpodapi.com.messaging.debug.DebugMessage", "api_generated/village.pybpodapi.com.messaging.end_trial", "api_generated/village.pybpodapi.com.messaging.end_trial.EndTrial", "api_generated/village.pybpodapi.com.messaging.error", "api_generated/village.pybpodapi.com.messaging.error.ErrorMessage", "api_generated/village.pybpodapi.com.messaging.event_occurrence", "api_generated/village.pybpodapi.com.messaging.event_occurrence.EventOccurrence", "api_generated/village.pybpodapi.com.messaging.event_resume", "api_generated/village.pybpodapi.com.messaging.event_resume.EventResume", "api_generated/village.pybpodapi.com.messaging.parser", "api_generated/village.pybpodapi.com.messaging.parser.MessageParser", "api_generated/village.pybpodapi.com.messaging.session_info", "api_generated/village.pybpodapi.com.messaging.session_info.SessionInfo", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence", "api_generated/village.pybpodapi.com.messaging.state_occurrence", "api_generated/village.pybpodapi.com.messaging.state_occurrence.StateOccurrence", "api_generated/village.pybpodapi.com.messaging.state_transition", "api_generated/village.pybpodapi.com.messaging.state_transition.StateTransition", "api_generated/village.pybpodapi.com.messaging.stderr", "api_generated/village.pybpodapi.com.messaging.stderr.StderrMessage", "api_generated/village.pybpodapi.com.messaging.stdout", "api_generated/village.pybpodapi.com.messaging.stdout.StdoutMessage", "api_generated/village.pybpodapi.com.messaging.trial", "api_generated/village.pybpodapi.com.messaging.trial.Trial", "api_generated/village.pybpodapi.com.messaging.untagged_message", "api_generated/village.pybpodapi.com.messaging.untagged_message.UntaggedMessage", "api_generated/village.pybpodapi.com.messaging.value", "api_generated/village.pybpodapi.com.messaging.value.ValueMessage", "api_generated/village.pybpodapi.com.messaging.warning", "api_generated/village.pybpodapi.com.messaging.warning.WarningMessage", "api_generated/village.pybpodapi.com.protocol", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader", "api_generated/village.pybpodapi.com.protocol.send_msg_headers", "api_generated/village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader", "api_generated/village.pybpodapi.com.stderr_buffer", "api_generated/village.pybpodapi.com.stderr_buffer.StderrBuffer", "api_generated/village.pybpodapi.com.stdout_buffer", "api_generated/village.pybpodapi.com.stdout_buffer.StdoutBuffer", "api_generated/village.pybpodapi.exceptions", "api_generated/village.pybpodapi.exceptions.bpod_error", "api_generated/village.pybpodapi.exceptions.bpod_error.BpodErrorException", "api_generated/village.pybpodapi.protocol", "api_generated/village.pybpodapi.session", "api_generated/village.pybpodapi.session.Session", "api_generated/village.pybpodapi.session.StreamsWrapper", "api_generated/village.pybpodapi.state_machine", "api_generated/village.pybpodapi.state_machine.StateMachine", "api_generated/village.pybpodapi.state_machine.conditions", "api_generated/village.pybpodapi.state_machine.conditions.Conditions", "api_generated/village.pybpodapi.state_machine.global_counters", "api_generated/village.pybpodapi.state_machine.global_counters.GlobalCounters", "api_generated/village.pybpodapi.state_machine.global_timers", "api_generated/village.pybpodapi.state_machine.global_timers.GlobalTimers", "api_generated/village.pybpodapi.state_machine.state_machine_base", "api_generated/village.pybpodapi.state_machine.state_machine_base.SMAError", "api_generated/village.pybpodapi.state_machine.state_machine_base.StateMachineBase", "api_generated/village.pybpodapi.state_machine.state_machine_builder", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError", "api_generated/village.pybpodapi.state_machine.state_machine_runner", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError", "api_generated/village.pybpodapi.utils", "api_generated/village.pybpodapi.utils.csv", "api_generated/village.pybpodapi.utils.csv.Reader", "api_generated/village.pybpodapi.utils.csv.Writer", "api_generated/village.pybpodapi.utils.date_parser", "api_generated/village.pybpodapi.utils.date_parser.parse", "api_generated/village.screen", "api_generated/village.screen.behaviour_window", "api_generated/village.screen.behaviour_window.BehaviourWindow", "api_index", "assembly_of_mv/assembly_instructions", "assembly_of_mv/electronics_instructions", "assembly_of_mv/index", "assembly_of_mv/list_of_parts", "assembly_of_mv/software_installation", "getting_started", "index", "installation", "operation_of_mv/hardware_technical_details", "operation_of_mv/index", "operation_of_mv/software_overview", "results", "usage/alarms", "usage/index", "usage/maintenance", "usage/setup_experiment"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api_generated/village.classes.rst", "api_generated/village.classes.enums.rst", "api_generated/village.classes.enums.Actions.rst", "api_generated/village.classes.enums.Active.rst", "api_generated/village.classes.enums.AreaActive.rst", "api_generated/village.classes.enums.Color.rst", "api_generated/village.classes.enums.Cycle.rst", "api_generated/village.classes.enums.DataTable.rst", "api_generated/village.classes.enums.Info.rst", "api_generated/village.classes.enums.ScreenActive.rst", "api_generated/village.classes.enums.State.rst", "api_generated/village.classes.enums.SuperEnum.rst", "api_generated/village.classes.protocols.rst", "api_generated/village.classes.protocols.CameraProtocol.rst", "api_generated/village.classes.protocols.EventProtocol.rst", "api_generated/village.classes.protocols.PyBpodProtocol.rst", "api_generated/village.classes.protocols.ScaleProtocol.rst", "api_generated/village.classes.protocols.TelegramBotProtocol.rst", "api_generated/village.classes.protocols.TempSensorProtocol.rst", "api_generated/village.classes.settings_class.rst", "api_generated/village.classes.settings_class.Setting.rst", "api_generated/village.classes.settings_class.Settings.rst", "api_generated/village.classes.subject.rst", "api_generated/village.classes.subject.Subject.rst", "api_generated/village.classes.task.rst", "api_generated/village.classes.task.Event.rst", "api_generated/village.classes.task.Output.rst", "api_generated/village.classes.task.Task.rst", "api_generated/village.classes.task.TaskError.rst", "api_generated/village.classes.training.rst", "api_generated/village.classes.training.Settings.rst", "api_generated/village.classes.training.Training.rst", "api_generated/village.classes.training.TrainingError.rst", "api_generated/village.devices.rst", "api_generated/village.devices.bpod.rst", "api_generated/village.devices.bpod.PyBpod.rst", "api_generated/village.devices.bpod.Softcode.rst", "api_generated/village.devices.bpod.get_bpod.rst", "api_generated/village.devices.scale.rst", "api_generated/village.devices.scale.Scale.rst", "api_generated/village.devices.scale.get_scale.rst", "api_generated/village.devices.temp_sensor.rst", "api_generated/village.devices.temp_sensor.TempSensor.rst", "api_generated/village.devices.temp_sensor.get_temp_sensor.rst", "api_generated/village.gui.rst", "api_generated/village.pybpodapi.rst", "api_generated/village.pybpodapi.bpod.rst", "api_generated/village.pybpodapi.bpod.Bpod.rst", "api_generated/village.pybpodapi.bpod.bpod_base.rst", "api_generated/village.pybpodapi.bpod.bpod_base.BpodBase.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.rst", "api_generated/village.pybpodapi.bpod.bpod_io.rst", "api_generated/village.pybpodapi.bpod.bpod_io.BpodIO.rst", "api_generated/village.pybpodapi.bpod.hardware.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelName.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelType.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.Channels.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.EventsPositions.rst", "api_generated/village.pybpodapi.bpod.hardware.events.rst", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname.rst", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.rst", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events.rst", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events.EventName.rst", "api_generated/village.pybpodapi.bpod.hardware.hardware.rst", "api_generated/village.pybpodapi.bpod.hardware.hardware.Hardware.rst", "api_generated/village.pybpodapi.bpod.hardware.input_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.rst", "api_generated/village.pybpodapi.bpod.hardware.output_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.rst", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.rst", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive.rst", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream.rst", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.rst", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader.rst", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream.rst", "api_generated/village.pybpodapi.bpod.settings.rst", "api_generated/village.pybpodapi.bpod_modules.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_module.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_module.BpodModule.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_modules.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_modules.BpodModules.rst", "api_generated/village.pybpodapi.com.rst", "api_generated/village.pybpodapi.com.arcom.rst", "api_generated/village.pybpodapi.com.arcom.ArCOM.rst", "api_generated/village.pybpodapi.com.arcom.ArduinoTypes.rst", "api_generated/village.pybpodapi.com.arcom.DataType.rst", "api_generated/village.pybpodapi.com.messaging.rst", "api_generated/village.pybpodapi.com.messaging.base_message.rst", "api_generated/village.pybpodapi.com.messaging.base_message.BaseMessage.rst", "api_generated/village.pybpodapi.com.messaging.debug.rst", "api_generated/village.pybpodapi.com.messaging.debug.DebugMessage.rst", "api_generated/village.pybpodapi.com.messaging.end_trial.rst", "api_generated/village.pybpodapi.com.messaging.end_trial.EndTrial.rst", "api_generated/village.pybpodapi.com.messaging.error.rst", "api_generated/village.pybpodapi.com.messaging.error.ErrorMessage.rst", "api_generated/village.pybpodapi.com.messaging.event_occurrence.rst", "api_generated/village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.rst", "api_generated/village.pybpodapi.com.messaging.event_resume.rst", "api_generated/village.pybpodapi.com.messaging.event_resume.EventResume.rst", "api_generated/village.pybpodapi.com.messaging.parser.rst", "api_generated/village.pybpodapi.com.messaging.parser.MessageParser.rst", "api_generated/village.pybpodapi.com.messaging.session_info.rst", "api_generated/village.pybpodapi.com.messaging.session_info.SessionInfo.rst", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence.rst", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.rst", "api_generated/village.pybpodapi.com.messaging.state_occurrence.rst", "api_generated/village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.rst", "api_generated/village.pybpodapi.com.messaging.state_transition.rst", "api_generated/village.pybpodapi.com.messaging.state_transition.StateTransition.rst", "api_generated/village.pybpodapi.com.messaging.stderr.rst", "api_generated/village.pybpodapi.com.messaging.stderr.StderrMessage.rst", "api_generated/village.pybpodapi.com.messaging.stdout.rst", "api_generated/village.pybpodapi.com.messaging.stdout.StdoutMessage.rst", "api_generated/village.pybpodapi.com.messaging.trial.rst", "api_generated/village.pybpodapi.com.messaging.trial.Trial.rst", "api_generated/village.pybpodapi.com.messaging.untagged_message.rst", "api_generated/village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.rst", "api_generated/village.pybpodapi.com.messaging.value.rst", "api_generated/village.pybpodapi.com.messaging.value.ValueMessage.rst", "api_generated/village.pybpodapi.com.messaging.warning.rst", "api_generated/village.pybpodapi.com.messaging.warning.WarningMessage.rst", "api_generated/village.pybpodapi.com.protocol.rst", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers.rst", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.rst", "api_generated/village.pybpodapi.com.protocol.send_msg_headers.rst", "api_generated/village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.rst", "api_generated/village.pybpodapi.com.stderr_buffer.rst", "api_generated/village.pybpodapi.com.stderr_buffer.StderrBuffer.rst", "api_generated/village.pybpodapi.com.stdout_buffer.rst", "api_generated/village.pybpodapi.com.stdout_buffer.StdoutBuffer.rst", "api_generated/village.pybpodapi.exceptions.rst", "api_generated/village.pybpodapi.exceptions.bpod_error.rst", "api_generated/village.pybpodapi.exceptions.bpod_error.BpodErrorException.rst", "api_generated/village.pybpodapi.protocol.rst", "api_generated/village.pybpodapi.session.rst", "api_generated/village.pybpodapi.session.Session.rst", "api_generated/village.pybpodapi.session.StreamsWrapper.rst", "api_generated/village.pybpodapi.state_machine.rst", "api_generated/village.pybpodapi.state_machine.StateMachine.rst", "api_generated/village.pybpodapi.state_machine.conditions.rst", "api_generated/village.pybpodapi.state_machine.conditions.Conditions.rst", "api_generated/village.pybpodapi.state_machine.global_counters.rst", "api_generated/village.pybpodapi.state_machine.global_counters.GlobalCounters.rst", "api_generated/village.pybpodapi.state_machine.global_timers.rst", "api_generated/village.pybpodapi.state_machine.global_timers.GlobalTimers.rst", "api_generated/village.pybpodapi.state_machine.state_machine_base.rst", "api_generated/village.pybpodapi.state_machine.state_machine_base.SMAError.rst", "api_generated/village.pybpodapi.state_machine.state_machine_base.StateMachineBase.rst", "api_generated/village.pybpodapi.state_machine.state_machine_builder.rst", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.rst", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError.rst", "api_generated/village.pybpodapi.state_machine.state_machine_runner.rst", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.rst", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError.rst", "api_generated/village.pybpodapi.utils.rst", "api_generated/village.pybpodapi.utils.csv.rst", "api_generated/village.pybpodapi.utils.csv.Reader.rst", "api_generated/village.pybpodapi.utils.csv.Writer.rst", "api_generated/village.pybpodapi.utils.date_parser.rst", "api_generated/village.pybpodapi.utils.date_parser.parse.rst", "api_generated/village.screen.rst", "api_generated/village.screen.behaviour_window.rst", "api_generated/village.screen.behaviour_window.BehaviourWindow.rst", "api_index.rst", "assembly_of_mv/assembly_instructions.md", "assembly_of_mv/electronics_instructions.md", "assembly_of_mv/index.rst", "assembly_of_mv/list_of_parts.md", "assembly_of_mv/software_installation.md", "getting_started.md", "index.rst", "installation.md", "operation_of_mv/hardware_technical_details.md", "operation_of_mv/index.rst", "operation_of_mv/software_overview.md", "results.md", "usage/alarms.md", "usage/index.rst", "usage/maintenance.md", "usage/setup_experiment.md"], "indexentries": {"__init__() (actions method)": [[2, "village.classes.enums.Actions.__init__", false]], "__init__() (active method)": [[3, "village.classes.enums.Active.__init__", false]], "__init__() (arcom method)": [[89, "village.pybpodapi.com.arcom.ArCOM.__init__", false]], "__init__() (arduinotypes method)": [[90, "village.pybpodapi.com.arcom.ArduinoTypes.__init__", false]], "__init__() (areaactive method)": [[4, "village.classes.enums.AreaActive.__init__", false]], "__init__() (baseeventname method)": [[64, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.__init__", false]], "__init__() (basemessage method)": [[94, "village.pybpodapi.com.messaging.base_message.BaseMessage.__init__", false]], "__init__() (behaviourwindow method)": [[168, "village.screen.behaviour_window.BehaviourWindow.__init__", false]], "__init__() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.__init__", false]], "__init__() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.__init__", false]], "__init__() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.__init__", false]], "__init__() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.__init__", false]], "__init__() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.__init__", false]], "__init__() (bpodmodule method)": [[84, "village.pybpodapi.bpod_modules.bpod_module.BpodModule.__init__", false]], "__init__() (bpodmodules method)": [[86, "village.pybpodapi.bpod_modules.bpod_modules.BpodModules.__init__", false]], "__init__() (cameraprotocol method)": [[13, "village.classes.protocols.CameraProtocol.__init__", false]], "__init__() (channelname method)": [[58, "village.pybpodapi.bpod.hardware.channels.ChannelName.__init__", false]], "__init__() (channels method)": [[60, "village.pybpodapi.bpod.hardware.channels.Channels.__init__", false]], "__init__() (channeltype method)": [[59, "village.pybpodapi.bpod.hardware.channels.ChannelType.__init__", false]], "__init__() (color method)": [[5, "village.classes.enums.Color.__init__", false]], "__init__() (conditions method)": [[146, "village.pybpodapi.state_machine.conditions.Conditions.__init__", false]], "__init__() (cycle method)": [[6, "village.classes.enums.Cycle.__init__", false]], "__init__() (datatable method)": [[7, "village.classes.enums.DataTable.__init__", false]], "__init__() (datatype method)": [[91, "village.pybpodapi.com.arcom.DataType.__init__", false]], "__init__() (debugmessage method)": [[96, "village.pybpodapi.com.messaging.debug.DebugMessage.__init__", false]], "__init__() (endtrial method)": [[98, "village.pybpodapi.com.messaging.end_trial.EndTrial.__init__", false]], "__init__() (errormessage method)": [[100, "village.pybpodapi.com.messaging.error.ErrorMessage.__init__", false]], "__init__() (event method)": [[25, "village.classes.task.Event.__init__", false]], "__init__() (eventname method)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.__init__", false]], "__init__() (eventoccurrence method)": [[102, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.__init__", false]], "__init__() (eventprotocol method)": [[14, "village.classes.protocols.EventProtocol.__init__", false]], "__init__() (eventresume method)": [[104, "village.pybpodapi.com.messaging.event_resume.EventResume.__init__", false]], "__init__() (eventspositions method)": [[61, "village.pybpodapi.bpod.hardware.channels.EventsPositions.__init__", false]], "__init__() (globalcounters method)": [[148, "village.pybpodapi.state_machine.global_counters.GlobalCounters.__init__", false]], "__init__() (globaltimers method)": [[150, "village.pybpodapi.state_machine.global_timers.GlobalTimers.__init__", false]], "__init__() (hardware method)": [[68, "village.pybpodapi.bpod.hardware.hardware.Hardware.__init__", false]], "__init__() (info method)": [[8, "village.classes.enums.Info.__init__", false]], "__init__() (inputname method)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.__init__", false]], "__init__() (messageparser method)": [[106, "village.pybpodapi.com.messaging.parser.MessageParser.__init__", false]], "__init__() (nonblockingsocketreceive method)": [[76, "village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive.__init__", false]], "__init__() (nonblockingstreamreader method)": [[79, "village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader.__init__", false]], "__init__() (output method)": [[26, "village.classes.task.Output.__init__", false]], "__init__() (outputchannel method)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.__init__", false]], "__init__() (pybpod method)": [[35, "village.devices.bpod.PyBpod.__init__", false]], "__init__() (pybpodprotocol method)": [[15, "village.classes.protocols.PyBpodProtocol.__init__", false]], "__init__() (reader method)": [[162, "village.pybpodapi.utils.csv.Reader.__init__", false]], "__init__() (receivemessageheader method)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.__init__", false]], "__init__() (scale method)": [[39, "village.devices.scale.Scale.__init__", false]], "__init__() (scaleprotocol method)": [[16, "village.classes.protocols.ScaleProtocol.__init__", false]], "__init__() (screenactive method)": [[9, "village.classes.enums.ScreenActive.__init__", false]], "__init__() (sendmessageheader method)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.__init__", false]], "__init__() (session method)": [[141, "village.pybpodapi.session.Session.__init__", false]], "__init__() (sessioninfo method)": [[108, "village.pybpodapi.com.messaging.session_info.SessionInfo.__init__", false]], "__init__() (setting method)": [[20, "village.classes.settings_class.Setting.__init__", false]], "__init__() (settings method)": [[21, "village.classes.settings_class.Settings.__init__", false], [30, "village.classes.training.Settings.__init__", false]], "__init__() (softcode method)": [[36, "village.devices.bpod.Softcode.__init__", false]], "__init__() (softcodeoccurrence method)": [[110, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.__init__", false]], "__init__() (state method)": [[10, "village.classes.enums.State.__init__", false]], "__init__() (statemachine method)": [[144, "village.pybpodapi.state_machine.StateMachine.__init__", false]], "__init__() (statemachinebase method)": [[153, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.__init__", false]], "__init__() (statemachinebuilder method)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.__init__", false]], "__init__() (statemachinerunner method)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.__init__", false]], "__init__() (stateoccurrence method)": [[112, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.__init__", false]], "__init__() (statetransition method)": [[114, "village.pybpodapi.com.messaging.state_transition.StateTransition.__init__", false]], "__init__() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.__init__", false]], "__init__() (stderrmessage method)": [[116, "village.pybpodapi.com.messaging.stderr.StderrMessage.__init__", false]], "__init__() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.__init__", false]], "__init__() (stdoutmessage method)": [[118, "village.pybpodapi.com.messaging.stdout.StdoutMessage.__init__", false]], "__init__() (streamswrapper method)": [[142, "village.pybpodapi.session.StreamsWrapper.__init__", false]], "__init__() (subject method)": [[23, "village.classes.subject.Subject.__init__", false]], "__init__() (superenum method)": [[11, "village.classes.enums.SuperEnum.__init__", false]], "__init__() (task method)": [[27, "village.classes.task.Task.__init__", false]], "__init__() (telegrambotprotocol method)": [[17, "village.classes.protocols.TelegramBotProtocol.__init__", false]], "__init__() (tempsensor method)": [[42, "village.devices.temp_sensor.TempSensor.__init__", false]], "__init__() (tempsensorprotocol method)": [[18, "village.classes.protocols.TempSensorProtocol.__init__", false]], "__init__() (training method)": [[31, "village.classes.training.Training.__init__", false]], "__init__() (trial method)": [[120, "village.pybpodapi.com.messaging.trial.Trial.__init__", false]], "__init__() (untaggedmessage method)": [[122, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.__init__", false]], "__init__() (valuemessage method)": [[124, "village.pybpodapi.com.messaging.value.ValueMessage.__init__", false]], "__init__() (warningmessage method)": [[126, "village.pybpodapi.com.messaging.warning.WarningMessage.__init__", false]], "__init__() (writer method)": [[163, "village.pybpodapi.utils.csv.Writer.__init__", false]], "actions (class in village.classes.enums)": [[2, "village.classes.enums.Actions", false]], "active (class in village.classes.enums)": [[3, "village.classes.enums.Active", false]], "add_state() (statemachine method)": [[144, "village.pybpodapi.state_machine.StateMachine.add_state", false]], "add_state() (statemachinebase method)": [[153, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.add_state", false]], "add_state() (statemachinebuilder method)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.add_state", false]], "add_state() (statemachinerunner method)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.add_state", false]], "arcom (class in village.pybpodapi.com.arcom)": [[89, "village.pybpodapi.com.arcom.ArCOM", false]], "arduinotypes (class in village.pybpodapi.com.arcom)": [[90, "village.pybpodapi.com.arcom.ArduinoTypes", false]], "areaactive (class in village.classes.enums)": [[4, "village.classes.enums.AreaActive", false]], "baseeventname (class in village.pybpodapi.bpod.hardware.events.base_eventname)": [[64, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName", false]], "basemessage (class in village.pybpodapi.com.messaging.base_message)": [[94, "village.pybpodapi.com.messaging.base_message.BaseMessage", false]], "behaviourwindow (class in village.screen.behaviour_window)": [[168, "village.screen.behaviour_window.BehaviourWindow", false]], "bnc (bpod.channelnames attribute)": [[47, "village.pybpodapi.bpod.Bpod.ChannelNames.BNC", false]], "bnc (bpodbase.channelnames attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.BNC", false]], "bnc (bpodcomprotocol.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.BNC", false]], "bnc (bpodcomprotocolmodules.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.BNC", false]], "bnc (bpodio.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.BNC", false]], "bnc (channelname attribute)": [[58, "village.pybpodapi.bpod.hardware.channels.ChannelName.BNC", false]], "bnc1 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.BNC1", false]], "bnc1high (bpod.events attribute)": [[47, "village.pybpodapi.bpod.Bpod.Events.BNC1High", false]], "bnc1high (bpod.outputchannels attribute)": [[47, "village.pybpodapi.bpod.Bpod.OutputChannels.BNC1High", false]], "bnc1high (bpodbase.events attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.BNC1High", false]], "bnc1high (bpodbase.outputchannels attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.BNC1High", false]], "bnc1high (bpodcomprotocol.events attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.BNC1High", false]], "bnc1high (bpodcomprotocol.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.BNC1High", false]], "bnc1high (bpodcomprotocolmodules.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.BNC1High", false]], "bnc1high (bpodcomprotocolmodules.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.BNC1High", false]], "bnc1high (bpodio.events attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.BNC1High", false]], "bnc1high (bpodio.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.BNC1High", false]], "bnc1high (event attribute)": [[25, "village.classes.task.Event.BNC1High", false]], "bnc1high (eventname attribute)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.BNC1High", false]], "bnc1high (output attribute)": [[26, "village.classes.task.Output.BNC1High", false]], "bnc1high (outputchannel attribute)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.BNC1High", false]], "bnc2 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.BNC2", false]], "bpod (class in village.pybpodapi.bpod)": [[47, "village.pybpodapi.bpod.Bpod", false]], "bpod.channelnames (class in village.pybpodapi.bpod)": [[47, "village.pybpodapi.bpod.Bpod.ChannelNames", false]], "bpod.channeltypes (class in village.pybpodapi.bpod)": [[47, "village.pybpodapi.bpod.Bpod.ChannelTypes", false]], "bpod.events (class in village.pybpodapi.bpod)": [[47, "village.pybpodapi.bpod.Bpod.Events", false]], "bpod.outputchannels (class in village.pybpodapi.bpod)": [[47, "village.pybpodapi.bpod.Bpod.OutputChannels", false]], "bpodbase (class in village.pybpodapi.bpod.bpod_base)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase", false]], "bpodbase.channelnames (class in village.pybpodapi.bpod.bpod_base)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames", false]], "bpodbase.channeltypes (class in village.pybpodapi.bpod.bpod_base)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes", false]], "bpodbase.events (class in village.pybpodapi.bpod.bpod_base)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events", false]], "bpodbase.outputchannels (class in village.pybpodapi.bpod.bpod_base)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels", false]], "bpodcomprotocol (class in village.pybpodapi.bpod.bpod_com_protocol)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol", false]], "bpodcomprotocol.channelnames (class in village.pybpodapi.bpod.bpod_com_protocol)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames", false]], "bpodcomprotocol.channeltypes (class in village.pybpodapi.bpod.bpod_com_protocol)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes", false]], "bpodcomprotocol.events (class in village.pybpodapi.bpod.bpod_com_protocol)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events", false]], "bpodcomprotocol.outputchannels (class in village.pybpodapi.bpod.bpod_com_protocol)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels", false]], "bpodcomprotocolmodules (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules", false]], "bpodcomprotocolmodules.channelnames (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames", false]], "bpodcomprotocolmodules.channeltypes (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes", false]], "bpodcomprotocolmodules.events (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events", false]], "bpodcomprotocolmodules.outputchannels (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels", false]], "bpoderrorexception": [[138, "village.pybpodapi.exceptions.bpod_error.BpodErrorException", false]], "bpodio (class in village.pybpodapi.bpod.bpod_io)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO", false]], "bpodio.channelnames (class in village.pybpodapi.bpod.bpod_io)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames", false]], "bpodio.channeltypes (class in village.pybpodapi.bpod.bpod_io)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes", false]], "bpodio.events (class in village.pybpodapi.bpod.bpod_io)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events", false]], "bpodio.outputchannels (class in village.pybpodapi.bpod.bpod_io)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels", false]], "bpodmodule (class in village.pybpodapi.bpod_modules.bpod_module)": [[84, "village.pybpodapi.bpod_modules.bpod_module.BpodModule", false]], "bpodmodules (class in village.pybpodapi.bpod_modules.bpod_modules)": [[86, "village.pybpodapi.bpod_modules.bpod_modules.BpodModules", false]], "build_message() (statemachine method)": [[144, "village.pybpodapi.state_machine.StateMachine.build_message", false]], "build_message() (statemachinebuilder method)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.build_message", false]], "build_message() (statemachinerunner method)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.build_message", false]], "build_message_32_bits() (statemachine method)": [[144, "village.pybpodapi.state_machine.StateMachine.build_message_32_bits", false]], "build_message_32_bits() (statemachinebuilder method)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.build_message_32_bits", false]], "build_message_32_bits() (statemachinerunner method)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.build_message_32_bits", false]], "bytes_available() (arcom method)": [[89, "village.pybpodapi.com.arcom.ArCOM.bytes_available", false]], "cameraprotocol (class in village.classes.protocols)": [[13, "village.classes.protocols.CameraProtocol", false]], "channelname (class in village.pybpodapi.bpod.hardware.channels)": [[58, "village.pybpodapi.bpod.hardware.channels.ChannelName", false]], "channels (class in village.pybpodapi.bpod.hardware.channels)": [[60, "village.pybpodapi.bpod.hardware.channels.Channels", false]], "channeltype (class in village.pybpodapi.bpod.hardware.channels)": [[59, "village.pybpodapi.bpod.hardware.channels.ChannelType", false]], "check_type() (basemessage class method)": [[94, "village.pybpodapi.com.messaging.base_message.BaseMessage.check_type", false]], "check_type() (debugmessage class method)": [[96, "village.pybpodapi.com.messaging.debug.DebugMessage.check_type", false]], "check_type() (endtrial class method)": [[98, "village.pybpodapi.com.messaging.end_trial.EndTrial.check_type", false]], "check_type() (errormessage class method)": [[100, "village.pybpodapi.com.messaging.error.ErrorMessage.check_type", false]], "check_type() (eventoccurrence class method)": [[102, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.check_type", false]], "check_type() (eventresume class method)": [[104, "village.pybpodapi.com.messaging.event_resume.EventResume.check_type", false]], "check_type() (sessioninfo class method)": [[108, "village.pybpodapi.com.messaging.session_info.SessionInfo.check_type", false]], "check_type() (softcodeoccurrence class method)": [[110, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.check_type", false]], "check_type() (stateoccurrence class method)": [[112, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.check_type", false]], "check_type() (statetransition class method)": [[114, "village.pybpodapi.com.messaging.state_transition.StateTransition.check_type", false]], "check_type() (stderrmessage class method)": [[116, "village.pybpodapi.com.messaging.stderr.StderrMessage.check_type", false]], "check_type() (stdoutmessage class method)": [[118, "village.pybpodapi.com.messaging.stdout.StdoutMessage.check_type", false]], "check_type() (trial class method)": [[120, "village.pybpodapi.com.messaging.trial.Trial.check_type", false]], "check_type() (untaggedmessage class method)": [[122, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.check_type", false]], "check_type() (valuemessage class method)": [[124, "village.pybpodapi.com.messaging.value.ValueMessage.check_type", false]], "check_type() (warningmessage class method)": [[126, "village.pybpodapi.com.messaging.warning.WarningMessage.check_type", false]], "close() (arcom method)": [[89, "village.pybpodapi.com.arcom.ArCOM.close", false]], "close() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.close", false]], "close() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.close", false]], "close() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.close", false]], "close() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.close", false]], "close() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.close", false]], "close() (softcode method)": [[36, "village.devices.bpod.Softcode.close", false]], "close() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.close", false]], "close() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.close", false]], "color (class in village.classes.enums)": [[5, "village.classes.enums.Color", false]], "condition1 (bpod.events attribute)": [[47, "village.pybpodapi.bpod.Bpod.Events.Condition1", false]], "condition1 (bpodbase.events attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Condition1", false]], "condition1 (bpodcomprotocol.events attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Condition1", false]], "condition1 (bpodcomprotocolmodules.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Condition1", false]], "condition1 (bpodio.events attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Condition1", false]], "condition1 (event attribute)": [[25, "village.classes.task.Event.Condition1", false]], "condition1 (eventname attribute)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Condition1", false]], "conditions (class in village.pybpodapi.state_machine.conditions)": [[146, "village.pybpodapi.state_machine.conditions.Conditions", false]], "current_trial (session property)": [[141, "village.pybpodapi.session.Session.current_trial", false]], "cycle (class in village.classes.enums)": [[6, "village.classes.enums.Cycle", false]], "data_available() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.data_available", false]], "data_available() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.data_available", false]], "data_available() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.data_available", false]], "data_available() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.data_available", false]], "datatable (class in village.classes.enums)": [[7, "village.classes.enums.DataTable", false]], "datatype (class in village.pybpodapi.com.arcom)": [[91, "village.pybpodapi.com.arcom.DataType", false]], "debugmessage (class in village.pybpodapi.com.messaging.debug)": [[96, "village.pybpodapi.com.messaging.debug.DebugMessage", false]], "detach() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.detach", false]], "detach() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.detach", false]], "disconnect (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.DISCONNECT", false]], "echo_softcode (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.ECHO_SOFTCODE", false]], "enable_ports (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.ENABLE_PORTS", false]], "enable_ports_ok (receivemessageheader attribute)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.ENABLE_PORTS_OK", false]], "encoding (stderrbuffer attribute)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.encoding", false]], "encoding (stdoutbuffer attribute)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.encoding", false]], "endtrial (class in village.pybpodapi.com.messaging.end_trial)": [[98, "village.pybpodapi.com.messaging.end_trial.EndTrial", false]], "errormessage (class in village.pybpodapi.com.messaging.error)": [[100, "village.pybpodapi.com.messaging.error.ErrorMessage", false]], "errors (stderrbuffer attribute)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.errors", false]], "errors (stdoutbuffer attribute)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.errors", false]], "event (class in village.classes.task)": [[25, "village.classes.task.Event", false]], "eventname (class in village.pybpodapi.bpod.hardware.events.bpod_events)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName", false]], "eventoccurrence (class in village.pybpodapi.com.messaging.event_occurrence)": [[102, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence", false]], "eventprotocol (class in village.classes.protocols)": [[14, "village.classes.protocols.EventProtocol", false]], "eventresume (class in village.pybpodapi.com.messaging.event_resume)": [[104, "village.pybpodapi.com.messaging.event_resume.EventResume", false]], "eventspositions (class in village.pybpodapi.bpod.hardware.channels)": [[61, "village.pybpodapi.bpod.hardware.channels.EventsPositions", false]], "exit_and_return (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.EXIT_AND_RETURN", false]], "fileno() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.fileno", false]], "fileno() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.fileno", false]], "find_module_by_name() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.find_module_by_name", false]], "find_module_by_name() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.find_module_by_name", false]], "find_module_by_name() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.find_module_by_name", false]], "find_module_by_name() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.find_module_by_name", false]], "find_module_by_name() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.find_module_by_name", false]], "firmware_version (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.FIRMWARE_VERSION", false]], "flush() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.flush", false]], "flush() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.flush", false]], "fromlist() (basemessage class method)": [[94, "village.pybpodapi.com.messaging.base_message.BaseMessage.fromlist", false]], "fromlist() (debugmessage class method)": [[96, "village.pybpodapi.com.messaging.debug.DebugMessage.fromlist", false]], "fromlist() (endtrial class method)": [[98, "village.pybpodapi.com.messaging.end_trial.EndTrial.fromlist", false]], "fromlist() (errormessage class method)": [[100, "village.pybpodapi.com.messaging.error.ErrorMessage.fromlist", false]], "fromlist() (eventoccurrence class method)": [[102, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.fromlist", false]], "fromlist() (eventresume class method)": [[104, "village.pybpodapi.com.messaging.event_resume.EventResume.fromlist", false]], "fromlist() (messageparser method)": [[106, "village.pybpodapi.com.messaging.parser.MessageParser.fromlist", false]], "fromlist() (sessioninfo class method)": [[108, "village.pybpodapi.com.messaging.session_info.SessionInfo.fromlist", false]], "fromlist() (softcodeoccurrence class method)": [[110, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.fromlist", false]], "fromlist() (stateoccurrence class method)": [[112, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.fromlist", false]], "fromlist() (statetransition class method)": [[114, "village.pybpodapi.com.messaging.state_transition.StateTransition.fromlist", false]], "fromlist() (stderrmessage class method)": [[116, "village.pybpodapi.com.messaging.stderr.StderrMessage.fromlist", false]], "fromlist() (stdoutmessage class method)": [[118, "village.pybpodapi.com.messaging.stdout.StdoutMessage.fromlist", false]], "fromlist() (trial class method)": [[120, "village.pybpodapi.com.messaging.trial.Trial.fromlist", false]], "fromlist() (untaggedmessage class method)": [[122, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.fromlist", false]], "fromlist() (valuemessage class method)": [[124, "village.pybpodapi.com.messaging.value.ValueMessage.fromlist", false]], "fromlist() (warningmessage class method)": [[126, "village.pybpodapi.com.messaging.warning.WarningMessage.fromlist", false]], "get() (settings method)": [[21, "village.classes.settings_class.Settings.get", false]], "get_all_timestamps_by_event() (trial method)": [[120, "village.pybpodapi.com.messaging.trial.Trial.get_all_timestamps_by_event", false]], "get_bpod() (in module village.devices.bpod)": [[37, "village.devices.bpod.get_bpod", false]], "get_description() (settings method)": [[21, "village.classes.settings_class.Settings.get_description", false]], "get_event_name() (channels method)": [[60, "village.pybpodapi.bpod.hardware.channels.Channels.get_event_name", false]], "get_events_names() (trial method)": [[120, "village.pybpodapi.com.messaging.trial.Trial.get_events_names", false]], "get_index() (settings method)": [[21, "village.classes.settings_class.Settings.get_index", false]], "get_indices() (settings method)": [[21, "village.classes.settings_class.Settings.get_indices", false]], "get_modules (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.GET_MODULES", false]], "get_scale() (in module village.devices.scale)": [[40, "village.devices.scale.get_scale", false]], "get_temp_sensor() (in module village.devices.temp_sensor)": [[43, "village.devices.temp_sensor.get_temp_sensor", false]], "get_text() (settings method)": [[21, "village.classes.settings_class.Settings.get_text", false]], "get_timestamp_transmission (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.GET_TIMESTAMP_TRANSMISSION", false]], "get_timestamps_by_event_name() (trial method)": [[120, "village.pybpodapi.com.messaging.trial.Trial.get_timestamps_by_event_name", false]], "get_type() (settings method)": [[21, "village.classes.settings_class.Settings.get_type", false]], "get_values() (settings method)": [[21, "village.classes.settings_class.Settings.get_values", false]], "getvalue() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.getvalue", false]], "getvalue() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.getvalue", false]], "globalcounter1end (bpod.events attribute)": [[47, "village.pybpodapi.bpod.Bpod.Events.GlobalCounter1End", false]], "globalcounter1end (bpodbase.events attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.GlobalCounter1End", false]], "globalcounter1end (bpodcomprotocol.events attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.GlobalCounter1End", false]], "globalcounter1end (bpodcomprotocolmodules.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.GlobalCounter1End", false]], "globalcounter1end (bpodio.events attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.GlobalCounter1End", false]], "globalcounter1end (event attribute)": [[25, "village.classes.task.Event.GlobalCounter1End", false]], "globalcounter1end (eventname attribute)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.GlobalCounter1End", false]], "globalcounterreset (bpod.outputchannels attribute)": [[47, "village.pybpodapi.bpod.Bpod.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodbase.outputchannels attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodcomprotocol.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodcomprotocolmodules.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodio.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (output attribute)": [[26, "village.classes.task.Output.GlobalCounterReset", false]], "globalcounterreset (outputchannel attribute)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.GlobalCounterReset", false]], "globalcounters (class in village.pybpodapi.state_machine.global_counters)": [[148, "village.pybpodapi.state_machine.global_counters.GlobalCounters", false]], "globaltimer1cancel (bpod.outputchannels attribute)": [[47, "village.pybpodapi.bpod.Bpod.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodbase.outputchannels attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodcomprotocol.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodcomprotocolmodules.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodio.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (output attribute)": [[26, "village.classes.task.Output.GlobalTimer1Cancel", false]], "globaltimer1cancel (outputchannel attribute)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.GlobalTimer1Cancel", false]], "globaltimer1end (bpod.events attribute)": [[47, "village.pybpodapi.bpod.Bpod.Events.GlobalTimer1End", false]], "globaltimer1end (bpodbase.events attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.GlobalTimer1End", false]], "globaltimer1end (bpodcomprotocol.events attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.GlobalTimer1End", false]], "globaltimer1end (bpodcomprotocolmodules.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.GlobalTimer1End", false]], "globaltimer1end (bpodio.events attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.GlobalTimer1End", false]], "globaltimer1end (event attribute)": [[25, "village.classes.task.Event.GlobalTimer1End", false]], "globaltimer1end (eventname attribute)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.GlobalTimer1End", false]], "globaltimer1start (bpod.events attribute)": [[47, "village.pybpodapi.bpod.Bpod.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodbase.events attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodcomprotocol.events attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodcomprotocolmodules.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodio.events attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.GlobalTimer1Start", false]], "globaltimer1start (event attribute)": [[25, "village.classes.task.Event.GlobalTimer1Start", false]], "globaltimer1start (eventname attribute)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.GlobalTimer1Start", false]], "globaltimer1trig (bpod.outputchannels attribute)": [[47, "village.pybpodapi.bpod.Bpod.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodbase.outputchannels attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodcomprotocol.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodcomprotocolmodules.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodio.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (output attribute)": [[26, "village.classes.task.Output.GlobalTimer1Trig", false]], "globaltimer1trig (outputchannel attribute)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.GlobalTimer1Trig", false]], "globaltimers (class in village.pybpodapi.state_machine.global_timers)": [[150, "village.pybpodapi.state_machine.global_timers.GlobalTimers", false]], "handshake (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.HANDSHAKE", false]], "handshake_ok (receivemessageheader attribute)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.HANDSHAKE_OK", false]], "hardware (class in village.pybpodapi.bpod.hardware.hardware)": [[68, "village.pybpodapi.bpod.hardware.hardware.Hardware", false]], "hardware_description (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.HARDWARE_DESCRIPTION", false]], "info (class in village.classes.enums)": [[8, "village.classes.enums.Info", false]], "input (bpod.channeltypes attribute)": [[47, "village.pybpodapi.bpod.Bpod.ChannelTypes.INPUT", false]], "input (bpodbase.channeltypes attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes.INPUT", false]], "input (bpodcomprotocol.channeltypes attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes.INPUT", false]], "input (bpodcomprotocolmodules.channeltypes attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes.INPUT", false]], "input (bpodio.channeltypes attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes.INPUT", false]], "input (channeltype attribute)": [[59, "village.pybpodapi.bpod.hardware.channels.ChannelType.INPUT", false]], "inputname (class in village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName", false]], "is_condition() (baseeventname static method)": [[64, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_condition", false]], "is_condition() (bpod.events static method)": [[47, "village.pybpodapi.bpod.Bpod.Events.is_condition", false]], "is_condition() (bpodbase.events static method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_condition", false]], "is_condition() (bpodcomprotocol.events static method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_condition", false]], "is_condition() (bpodcomprotocolmodules.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_condition", false]], "is_condition() (bpodio.events static method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_condition", false]], "is_condition() (event static method)": [[25, "village.classes.task.Event.is_condition", false]], "is_condition() (eventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_condition", false]], "is_global_counter_end() (baseeventname static method)": [[64, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_counter_end", false]], "is_global_counter_end() (bpod.events static method)": [[47, "village.pybpodapi.bpod.Bpod.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodbase.events static method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodcomprotocol.events static method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodcomprotocolmodules.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodio.events static method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_counter_end", false]], "is_global_counter_end() (event static method)": [[25, "village.classes.task.Event.is_global_counter_end", false]], "is_global_counter_end() (eventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_counter_end", false]], "is_global_timer_cancel() (baseeventname static method)": [[64, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpod.events static method)": [[47, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodbase.events static method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodcomprotocol.events static method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodcomprotocolmodules.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodio.events static method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (event static method)": [[25, "village.classes.task.Event.is_global_timer_cancel", false]], "is_global_timer_cancel() (eventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_cancel", false]], "is_global_timer_end() (baseeventname static method)": [[64, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_end", false]], "is_global_timer_end() (bpod.events static method)": [[47, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodbase.events static method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodcomprotocol.events static method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodcomprotocolmodules.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodio.events static method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_end", false]], "is_global_timer_end() (event static method)": [[25, "village.classes.task.Event.is_global_timer_end", false]], "is_global_timer_end() (eventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_end", false]], "is_global_timer_start() (baseeventname static method)": [[64, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_start", false]], "is_global_timer_start() (bpod.events static method)": [[47, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodbase.events static method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodcomprotocol.events static method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodcomprotocolmodules.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodio.events static method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_start", false]], "is_global_timer_start() (event static method)": [[25, "village.classes.task.Event.is_global_timer_start", false]], "is_global_timer_start() (eventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_start", false]], "is_global_timer_trigger() (baseeventname static method)": [[64, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpod.events static method)": [[47, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodbase.events static method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodcomprotocol.events static method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodcomprotocolmodules.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodio.events static method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (event static method)": [[25, "village.classes.task.Event.is_global_timer_trigger", false]], "is_global_timer_trigger() (eventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_trigger", false]], "is_state_timer() (baseeventname static method)": [[64, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_state_timer", false]], "is_state_timer() (bpod.events static method)": [[47, "village.pybpodapi.bpod.Bpod.Events.is_state_timer", false]], "is_state_timer() (bpodbase.events static method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_state_timer", false]], "is_state_timer() (bpodcomprotocol.events static method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_state_timer", false]], "is_state_timer() (bpodcomprotocolmodules.events static method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_state_timer", false]], "is_state_timer() (bpodio.events static method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_state_timer", false]], "is_state_timer() (event static method)": [[25, "village.classes.task.Event.is_state_timer", false]], "is_state_timer() (eventname static method)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_state_timer", false]], "isatty() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.isatty", false]], "isatty() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.isatty", false]], "kill() (softcode method)": [[36, "village.devices.bpod.Softcode.kill", false]], "load_message() (bpodmodule method)": [[84, "village.pybpodapi.bpod_modules.bpod_module.BpodModule.load_message", false]], "load_serial_message (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.LOAD_SERIAL_MESSAGE", false]], "load_serial_message() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.load_serial_message", false]], "load_serial_message() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.load_serial_message", false]], "load_serial_message() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.load_serial_message", false]], "load_serial_message() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.load_serial_message", false]], "load_serial_message() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.load_serial_message", false]], "load_serial_message_ok (receivemessageheader attribute)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.LOAD_SERIAL_MESSAGE_OK", false]], "loop_handler() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.loop_handler", false]], "loop_handler() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.loop_handler", false]], "loop_handler() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.loop_handler", false]], "loop_handler() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.loop_handler", false]], "loop_handler() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.loop_handler", false]], "manual_override() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.manual_override", false]], "manual_override() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.manual_override", false]], "manual_override() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.manual_override", false]], "manual_override() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.manual_override", false]], "manual_override_exec_event (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.MANUAL_OVERRIDE_EXEC_EVENT", false]], "messageparser (class in village.pybpodapi.com.messaging.parser)": [[106, "village.pybpodapi.com.messaging.parser.MessageParser", false]], "module": [[0, "module-village.classes", false], [1, "module-village.classes.enums", false], [12, "module-village.classes.protocols", false], [19, "module-village.classes.settings_class", false], [22, "module-village.classes.subject", false], [24, "module-village.classes.task", false], [29, "module-village.classes.training", false], [33, "module-village.devices", false], [34, "module-village.devices.bpod", false], [38, "module-village.devices.scale", false], [41, "module-village.devices.temp_sensor", false], [44, "module-village.gui", false], [45, "module-village.pybpodapi", false], [46, "module-village.pybpodapi.bpod", false], [48, "module-village.pybpodapi.bpod.bpod_base", false], [50, "module-village.pybpodapi.bpod.bpod_com_protocol", false], [52, "module-village.pybpodapi.bpod.bpod_com_protocol_modules", false], [54, "module-village.pybpodapi.bpod.bpod_io", false], [56, "module-village.pybpodapi.bpod.hardware", false], [57, "module-village.pybpodapi.bpod.hardware.channels", false], [62, "module-village.pybpodapi.bpod.hardware.events", false], [63, "module-village.pybpodapi.bpod.hardware.events.base_eventname", false], [65, "module-village.pybpodapi.bpod.hardware.events.bpod_events", false], [67, "module-village.pybpodapi.bpod.hardware.hardware", false], [69, "module-village.pybpodapi.bpod.hardware.input_channels", false], [70, "module-village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels", false], [72, "module-village.pybpodapi.bpod.hardware.output_channels", false], [73, "module-village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels", false], [75, "module-village.pybpodapi.bpod.non_blockingsocketreceive", false], [78, "module-village.pybpodapi.bpod.non_blockingstreamreader", false], [81, "module-village.pybpodapi.bpod.settings", false], [82, "module-village.pybpodapi.bpod_modules", false], [83, "module-village.pybpodapi.bpod_modules.bpod_module", false], [85, "module-village.pybpodapi.bpod_modules.bpod_modules", false], [87, "module-village.pybpodapi.com", false], [88, "module-village.pybpodapi.com.arcom", false], [92, "module-village.pybpodapi.com.messaging", false], [93, "module-village.pybpodapi.com.messaging.base_message", false], [95, "module-village.pybpodapi.com.messaging.debug", false], [97, "module-village.pybpodapi.com.messaging.end_trial", false], [99, "module-village.pybpodapi.com.messaging.error", false], [101, "module-village.pybpodapi.com.messaging.event_occurrence", false], [103, "module-village.pybpodapi.com.messaging.event_resume", false], [105, "module-village.pybpodapi.com.messaging.parser", false], [107, "module-village.pybpodapi.com.messaging.session_info", false], [109, "module-village.pybpodapi.com.messaging.softcode_occurrence", false], [111, "module-village.pybpodapi.com.messaging.state_occurrence", false], [113, "module-village.pybpodapi.com.messaging.state_transition", false], [115, "module-village.pybpodapi.com.messaging.stderr", false], [117, "module-village.pybpodapi.com.messaging.stdout", false], [119, "module-village.pybpodapi.com.messaging.trial", false], [121, "module-village.pybpodapi.com.messaging.untagged_message", false], [123, "module-village.pybpodapi.com.messaging.value", false], [125, "module-village.pybpodapi.com.messaging.warning", false], [127, "module-village.pybpodapi.com.protocol", false], [128, "module-village.pybpodapi.com.protocol.recv_msg_headers", false], [130, "module-village.pybpodapi.com.protocol.send_msg_headers", false], [132, "module-village.pybpodapi.com.stderr_buffer", false], [134, "module-village.pybpodapi.com.stdout_buffer", false], [136, "module-village.pybpodapi.exceptions", false], [137, "module-village.pybpodapi.exceptions.bpod_error", false], [139, "module-village.pybpodapi.protocol", false], [140, "module-village.pybpodapi.session", false], [143, "module-village.pybpodapi.state_machine", false], [145, "module-village.pybpodapi.state_machine.conditions", false], [147, "module-village.pybpodapi.state_machine.global_counters", false], [149, "module-village.pybpodapi.state_machine.global_timers", false], [151, "module-village.pybpodapi.state_machine.state_machine_base", false], [154, "module-village.pybpodapi.state_machine.state_machine_builder", false], [157, "module-village.pybpodapi.state_machine.state_machine_runner", false], [160, "module-village.pybpodapi.utils", false], [161, "module-village.pybpodapi.utils.csv", false], [164, "module-village.pybpodapi.utils.date_parser", false], [166, "module-village.screen", false], [167, "module-village.screen.behaviour_window", false]], "module_event_names (receivemessageheader attribute)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.MODULE_EVENT_NAMES", false]], "module_requested_event (receivemessageheader attribute)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.MODULE_REQUESTED_EVENT", false]], "new_state_matrix (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.NEW_STATE_MATRIX", false]], "newlines (stderrbuffer attribute)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.newlines", false]], "newlines (stdoutbuffer attribute)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.newlines", false]], "nonblockingsocketreceive (class in village.pybpodapi.bpod.non_blockingsocketreceive)": [[76, "village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive", false]], "nonblockingstreamreader (class in village.pybpodapi.bpod.non_blockingstreamreader)": [[79, "village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader", false]], "open() (arcom method)": [[89, "village.pybpodapi.com.arcom.ArCOM.open", false]], "open() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.open", false]], "open() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.open", false]], "open() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.open", false]], "open() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.open", false]], "open() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.open", false]], "output (bpod.channeltypes attribute)": [[47, "village.pybpodapi.bpod.Bpod.ChannelTypes.OUTPUT", false]], "output (bpodbase.channeltypes attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes.OUTPUT", false]], "output (bpodcomprotocol.channeltypes attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes.OUTPUT", false]], "output (bpodcomprotocolmodules.channeltypes attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes.OUTPUT", false]], "output (bpodio.channeltypes attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes.OUTPUT", false]], "output (channeltype attribute)": [[59, "village.pybpodapi.bpod.hardware.channels.ChannelType.OUTPUT", false]], "output (class in village.classes.task)": [[26, "village.classes.task.Output", false]], "outputchannel (class in village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel", false]], "override_digital_hw_state (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.OVERRIDE_DIGITAL_HW_STATE", false]], "pa1_port1in (bpod.events attribute)": [[47, "village.pybpodapi.bpod.Bpod.Events.PA1_Port1In", false]], "pa1_port1in (bpodbase.events attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.PA1_Port1In", false]], "pa1_port1in (bpodcomprotocol.events attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.PA1_Port1In", false]], "pa1_port1in (bpodcomprotocolmodules.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.PA1_Port1In", false]], "pa1_port1in (bpodio.events attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.PA1_Port1In", false]], "pa1_port1in (event attribute)": [[25, "village.classes.task.Event.PA1_Port1In", false]], "pa1_port1in (eventname attribute)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.PA1_Port1In", false]], "parse() (in module village.pybpodapi.utils.date_parser)": [[165, "village.pybpodapi.utils.date_parser.parse", false]], "port1 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port1", false]], "port1in (bpod.events attribute)": [[47, "village.pybpodapi.bpod.Bpod.Events.Port1In", false]], "port1in (bpodbase.events attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Port1In", false]], "port1in (bpodcomprotocol.events attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Port1In", false]], "port1in (bpodcomprotocolmodules.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Port1In", false]], "port1in (bpodio.events attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Port1In", false]], "port1in (event attribute)": [[25, "village.classes.task.Event.Port1In", false]], "port1in (eventname attribute)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Port1In", false]], "port2 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port2", false]], "port3 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port3", false]], "port4 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port4", false]], "port5 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port5", false]], "port6 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port6", false]], "port7 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port7", false]], "port8 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port8", false]], "pwm (bpod.channelnames attribute)": [[47, "village.pybpodapi.bpod.Bpod.ChannelNames.PWM", false]], "pwm (bpodbase.channelnames attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.PWM", false]], "pwm (bpodcomprotocol.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.PWM", false]], "pwm (bpodcomprotocolmodules.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.PWM", false]], "pwm (bpodio.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.PWM", false]], "pwm (channelname attribute)": [[58, "village.pybpodapi.bpod.hardware.channels.ChannelName.PWM", false]], "pybpod (class in village.devices.bpod)": [[35, "village.devices.bpod.PyBpod", false]], "pybpodprotocol (class in village.classes.protocols)": [[15, "village.classes.protocols.PyBpodProtocol", false]], "read() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.read", false]], "read() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.read", false]], "readable() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.readable", false]], "readable() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.readable", false]], "reader (class in village.pybpodapi.utils.csv)": [[162, "village.pybpodapi.utils.csv.Reader", false]], "readline() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.readline", false]], "readline() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.readline", false]], "readlines() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.readlines", false]], "readlines() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.readlines", false]], "receivemessageheader (class in village.pybpodapi.com.protocol.recv_msg_headers)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader", false]], "reset_clock (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.RESET_CLOCK", false]], "reset_serial_messages (receivemessageheader attribute)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.RESET_SERIAL_MESSAGES", false]], "reset_serial_messages (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.RESET_SERIAL_MESSAGES", false]], "reset_serial_messages() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.reset_serial_messages", false]], "reset_serial_messages() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.reset_serial_messages", false]], "reset_serial_messages() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.reset_serial_messages", false]], "reset_serial_messages() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.reset_serial_messages", false]], "reset_serial_messages() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.reset_serial_messages", false]], "run_state_machine (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.RUN_STATE_MACHINE", false]], "run_state_machine() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.run_state_machine", false]], "run_state_machine() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.run_state_machine", false]], "run_state_machine() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.run_state_machine", false]], "run_state_machine() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.run_state_machine", false]], "run_state_machine() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.run_state_machine", false]], "scale (class in village.devices.scale)": [[39, "village.devices.scale.Scale", false]], "scaleprotocol (class in village.classes.protocols)": [[16, "village.classes.protocols.ScaleProtocol", false]], "screenactive (class in village.classes.enums)": [[9, "village.classes.enums.ScreenActive", false]], "seek() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.seek", false]], "seek() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.seek", false]], "seekable() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.seekable", false]], "seekable() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.seekable", false]], "send() (softcode method)": [[36, "village.devices.bpod.Softcode.send", false]], "send_state_machine() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.send_state_machine", false]], "send_state_machine() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.send_state_machine", false]], "send_state_machine() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.send_state_machine", false]], "send_state_machine() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.send_state_machine", false]], "send_state_machine() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.send_state_machine", false]], "send_to_hw_serial (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.SEND_TO_HW_SERIAL", false]], "sendmessageheader (class in village.pybpodapi.com.protocol.send_msg_headers)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader", false]], "serial (bpod.channelnames attribute)": [[47, "village.pybpodapi.bpod.Bpod.ChannelNames.SERIAL", false]], "serial (bpodbase.channelnames attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.SERIAL", false]], "serial (bpodcomprotocol.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.SERIAL", false]], "serial (bpodcomprotocolmodules.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.SERIAL", false]], "serial (bpodio.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.SERIAL", false]], "serial (channelname attribute)": [[58, "village.pybpodapi.bpod.hardware.channels.ChannelName.SERIAL", false]], "serial1 (bpod.outputchannels attribute)": [[47, "village.pybpodapi.bpod.Bpod.OutputChannels.Serial1", false]], "serial1 (bpodbase.outputchannels attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.Serial1", false]], "serial1 (bpodcomprotocol.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.Serial1", false]], "serial1 (bpodcomprotocolmodules.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.Serial1", false]], "serial1 (bpodio.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.Serial1", false]], "serial1 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Serial1", false]], "serial1 (output attribute)": [[26, "village.classes.task.Output.Serial1", false]], "serial1 (outputchannel attribute)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.Serial1", false]], "serial2 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Serial2", false]], "serial3 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Serial3", false]], "session (class in village.pybpodapi.session)": [[141, "village.pybpodapi.session.Session", false]], "sessioninfo (class in village.pybpodapi.com.messaging.session_info)": [[108, "village.pybpodapi.com.messaging.session_info.SessionInfo", false]], "set_condition() (statemachine method)": [[144, "village.pybpodapi.state_machine.StateMachine.set_condition", false]], "set_condition() (statemachinebase method)": [[153, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_condition", false]], "set_condition() (statemachinebuilder method)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_condition", false]], "set_condition() (statemachinerunner method)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_condition", false]], "set_global_counter() (statemachine method)": [[144, "village.pybpodapi.state_machine.StateMachine.set_global_counter", false]], "set_global_counter() (statemachinebase method)": [[153, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_global_counter", false]], "set_global_counter() (statemachinebuilder method)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_global_counter", false]], "set_global_counter() (statemachinerunner method)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_global_counter", false]], "set_global_timer() (statemachine method)": [[144, "village.pybpodapi.state_machine.StateMachine.set_global_timer", false]], "set_global_timer() (statemachinebase method)": [[153, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_global_timer", false]], "set_global_timer() (statemachinebuilder method)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_global_timer", false]], "set_global_timer() (statemachinerunner method)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_global_timer", false]], "set_global_timer_legacy() (statemachine method)": [[144, "village.pybpodapi.state_machine.StateMachine.set_global_timer_legacy", false]], "set_global_timer_legacy() (statemachinebase method)": [[153, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_global_timer_legacy", false]], "set_global_timer_legacy() (statemachinebuilder method)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_global_timer_legacy", false]], "set_global_timer_legacy() (statemachinerunner method)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_global_timer_legacy", false]], "set_module_relay (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.SET_MODULE_RELAY", false]], "setting (class in village.classes.settings_class)": [[20, "village.classes.settings_class.Setting", false]], "settings (class in village.classes.settings_class)": [[21, "village.classes.settings_class.Settings", false]], "settings (class in village.classes.training)": [[30, "village.classes.training.Settings", false]], "setup() (hardware method)": [[68, "village.pybpodapi.bpod.hardware.hardware.Hardware.setup", false]], "setup_input_channels() (channels method)": [[60, "village.pybpodapi.bpod.hardware.channels.Channels.setup_input_channels", false]], "setup_output_channels() (channels method)": [[60, "village.pybpodapi.bpod.hardware.channels.Channels.setup_output_channels", false]], "smaerror": [[152, "village.pybpodapi.state_machine.state_machine_base.SMAError", false]], "softcode (class in village.devices.bpod)": [[36, "village.devices.bpod.Softcode", false]], "softcode1 (bpod.outputchannels attribute)": [[47, "village.pybpodapi.bpod.Bpod.OutputChannels.SoftCode1", false]], "softcode1 (bpodbase.outputchannels attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.SoftCode1", false]], "softcode1 (bpodcomprotocol.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.SoftCode1", false]], "softcode1 (bpodcomprotocolmodules.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.SoftCode1", false]], "softcode1 (bpodio.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.SoftCode1", false]], "softcode1 (output attribute)": [[26, "village.classes.task.Output.SoftCode1", false]], "softcode1 (outputchannel attribute)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.SoftCode1", false]], "softcode_handler_function() (bpod method)": [[47, "village.pybpodapi.bpod.Bpod.softcode_handler_function", false]], "softcode_handler_function() (bpodbase method)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.softcode_handler_function", false]], "softcode_handler_function() (bpodcomprotocol method)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.softcode_handler_function", false]], "softcode_handler_function() (bpodcomprotocolmodules method)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.softcode_handler_function", false]], "softcode_handler_function() (bpodio method)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.softcode_handler_function", false]], "softcodeoccurrence (class in village.pybpodapi.com.messaging.softcode_occurrence)": [[110, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence", false]], "state (class in village.classes.enums)": [[10, "village.classes.enums.State", false]], "state_machine_installation_status (receivemessageheader attribute)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.STATE_MACHINE_INSTALLATION_STATUS", false]], "statemachine (class in village.pybpodapi.state_machine)": [[144, "village.pybpodapi.state_machine.StateMachine", false]], "statemachinebase (class in village.pybpodapi.state_machine.state_machine_base)": [[153, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase", false]], "statemachinebuilder (class in village.pybpodapi.state_machine.state_machine_builder)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder", false]], "statemachinebuildererror": [[156, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError", false]], "statemachinerunner (class in village.pybpodapi.state_machine.state_machine_runner)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner", false]], "statemachinerunnererror": [[159, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError", false]], "stateoccurrence (class in village.pybpodapi.com.messaging.state_occurrence)": [[112, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence", false]], "statetransition (class in village.pybpodapi.com.messaging.state_transition)": [[114, "village.pybpodapi.com.messaging.state_transition.StateTransition", false]], "stderrbuffer (class in village.pybpodapi.com.stderr_buffer)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer", false]], "stderrmessage (class in village.pybpodapi.com.messaging.stderr)": [[116, "village.pybpodapi.com.messaging.stderr.StderrMessage", false]], "stdoutbuffer (class in village.pybpodapi.com.stdout_buffer)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer", false]], "stdoutmessage (class in village.pybpodapi.com.messaging.stdout)": [[118, "village.pybpodapi.com.messaging.stdout.StdoutMessage", false]], "streamswrapper (class in village.pybpodapi.session)": [[142, "village.pybpodapi.session.StreamsWrapper", false]], "subject (class in village.classes.subject)": [[23, "village.classes.subject.Subject", false]], "superenum (class in village.classes.enums)": [[11, "village.classes.enums.SuperEnum", false]], "sync_channel_mode (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.SYNC_CHANNEL_MODE", false]], "sync_channel_mode_ok (receivemessageheader attribute)": [[129, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.SYNC_CHANNEL_MODE_OK", false]], "task (class in village.classes.task)": [[27, "village.classes.task.Task", false]], "taskerror": [[28, "village.classes.task.TaskError", false]], "telegrambotprotocol (class in village.classes.protocols)": [[17, "village.classes.protocols.TelegramBotProtocol", false]], "tell() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.tell", false]], "tell() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.tell", false]], "tempsensor (class in village.devices.temp_sensor)": [[42, "village.devices.temp_sensor.TempSensor", false]], "tempsensorprotocol (class in village.classes.protocols)": [[18, "village.classes.protocols.TempSensorProtocol", false]], "training (class in village.classes.training)": [[31, "village.classes.training.Training", false]], "trainingerror": [[32, "village.classes.training.TrainingError", false]], "trial (class in village.pybpodapi.com.messaging.trial)": [[120, "village.pybpodapi.com.messaging.trial.Trial", false]], "trigger_softcode (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.TRIGGER_SOFTCODE", false]], "truncate() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.truncate", false]], "truncate() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.truncate", false]], "tup (bpod.events attribute)": [[47, "village.pybpodapi.bpod.Bpod.Events.Tup", false]], "tup (bpodbase.events attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Tup", false]], "tup (bpodcomprotocol.events attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Tup", false]], "tup (bpodcomprotocolmodules.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Tup", false]], "tup (bpodio.events attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Tup", false]], "tup (event attribute)": [[25, "village.classes.task.Event.Tup", false]], "tup (eventname attribute)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Tup", false]], "unexpectedendofstream": [[77, "village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream", false], [80, "village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream", false]], "untaggedmessage (class in village.pybpodapi.com.messaging.untagged_message)": [[122, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage", false]], "update_state_numbers() (statemachine method)": [[144, "village.pybpodapi.state_machine.StateMachine.update_state_numbers", false]], "update_state_numbers() (statemachinebuilder method)": [[155, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.update_state_numbers", false]], "update_state_numbers() (statemachinerunner method)": [[158, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.update_state_numbers", false]], "usb1 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.USB1", false]], "valuemessage (class in village.pybpodapi.com.messaging.value)": [[124, "village.pybpodapi.com.messaging.value.ValueMessage", false]], "valve (bpod.channelnames attribute)": [[47, "village.pybpodapi.bpod.Bpod.ChannelNames.VALVE", false]], "valve (bpod.outputchannels attribute)": [[47, "village.pybpodapi.bpod.Bpod.OutputChannels.Valve", false]], "valve (bpodbase.channelnames attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.VALVE", false]], "valve (bpodbase.outputchannels attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.Valve", false]], "valve (bpodcomprotocol.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.VALVE", false]], "valve (bpodcomprotocol.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.Valve", false]], "valve (bpodcomprotocolmodules.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.VALVE", false]], "valve (bpodcomprotocolmodules.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.Valve", false]], "valve (bpodio.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.VALVE", false]], "valve (bpodio.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.Valve", false]], "valve (channelname attribute)": [[58, "village.pybpodapi.bpod.hardware.channels.ChannelName.VALVE", false]], "valve (output attribute)": [[26, "village.classes.task.Output.Valve", false]], "valve (outputchannel attribute)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.Valve", false]], "village.classes": [[0, "module-village.classes", false]], "village.classes.enums": [[1, "module-village.classes.enums", false]], "village.classes.protocols": [[12, "module-village.classes.protocols", false]], "village.classes.settings_class": [[19, "module-village.classes.settings_class", false]], "village.classes.subject": [[22, "module-village.classes.subject", false]], "village.classes.task": [[24, "module-village.classes.task", false]], "village.classes.training": [[29, "module-village.classes.training", false]], "village.devices": [[33, "module-village.devices", false]], "village.devices.bpod": [[34, "module-village.devices.bpod", false]], "village.devices.scale": [[38, "module-village.devices.scale", false]], "village.devices.temp_sensor": [[41, "module-village.devices.temp_sensor", false]], "village.gui": [[44, "module-village.gui", false]], "village.pybpodapi": [[45, "module-village.pybpodapi", false]], "village.pybpodapi.bpod": [[46, "module-village.pybpodapi.bpod", false]], "village.pybpodapi.bpod.bpod_base": [[48, "module-village.pybpodapi.bpod.bpod_base", false]], "village.pybpodapi.bpod.bpod_com_protocol": [[50, "module-village.pybpodapi.bpod.bpod_com_protocol", false]], "village.pybpodapi.bpod.bpod_com_protocol_modules": [[52, "module-village.pybpodapi.bpod.bpod_com_protocol_modules", false]], "village.pybpodapi.bpod.bpod_io": [[54, "module-village.pybpodapi.bpod.bpod_io", false]], "village.pybpodapi.bpod.hardware": [[56, "module-village.pybpodapi.bpod.hardware", false]], "village.pybpodapi.bpod.hardware.channels": [[57, "module-village.pybpodapi.bpod.hardware.channels", false]], "village.pybpodapi.bpod.hardware.events": [[62, "module-village.pybpodapi.bpod.hardware.events", false]], "village.pybpodapi.bpod.hardware.events.base_eventname": [[63, "module-village.pybpodapi.bpod.hardware.events.base_eventname", false]], "village.pybpodapi.bpod.hardware.events.bpod_events": [[65, "module-village.pybpodapi.bpod.hardware.events.bpod_events", false]], "village.pybpodapi.bpod.hardware.hardware": [[67, "module-village.pybpodapi.bpod.hardware.hardware", false]], "village.pybpodapi.bpod.hardware.input_channels": [[69, "module-village.pybpodapi.bpod.hardware.input_channels", false]], "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels": [[70, "module-village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels", false]], "village.pybpodapi.bpod.hardware.output_channels": [[72, "module-village.pybpodapi.bpod.hardware.output_channels", false]], "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels": [[73, "module-village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels", false]], "village.pybpodapi.bpod.non_blockingsocketreceive": [[75, "module-village.pybpodapi.bpod.non_blockingsocketreceive", false]], "village.pybpodapi.bpod.non_blockingstreamreader": [[78, "module-village.pybpodapi.bpod.non_blockingstreamreader", false]], "village.pybpodapi.bpod.settings": [[81, "module-village.pybpodapi.bpod.settings", false]], "village.pybpodapi.bpod_modules": [[82, "module-village.pybpodapi.bpod_modules", false]], "village.pybpodapi.bpod_modules.bpod_module": [[83, "module-village.pybpodapi.bpod_modules.bpod_module", false]], "village.pybpodapi.bpod_modules.bpod_modules": [[85, "module-village.pybpodapi.bpod_modules.bpod_modules", false]], "village.pybpodapi.com": [[87, "module-village.pybpodapi.com", false]], "village.pybpodapi.com.arcom": [[88, "module-village.pybpodapi.com.arcom", false]], "village.pybpodapi.com.messaging": [[92, "module-village.pybpodapi.com.messaging", false]], "village.pybpodapi.com.messaging.base_message": [[93, "module-village.pybpodapi.com.messaging.base_message", false]], "village.pybpodapi.com.messaging.debug": [[95, "module-village.pybpodapi.com.messaging.debug", false]], "village.pybpodapi.com.messaging.end_trial": [[97, "module-village.pybpodapi.com.messaging.end_trial", false]], "village.pybpodapi.com.messaging.error": [[99, "module-village.pybpodapi.com.messaging.error", false]], "village.pybpodapi.com.messaging.event_occurrence": [[101, "module-village.pybpodapi.com.messaging.event_occurrence", false]], "village.pybpodapi.com.messaging.event_resume": [[103, "module-village.pybpodapi.com.messaging.event_resume", false]], "village.pybpodapi.com.messaging.parser": [[105, "module-village.pybpodapi.com.messaging.parser", false]], "village.pybpodapi.com.messaging.session_info": [[107, "module-village.pybpodapi.com.messaging.session_info", false]], "village.pybpodapi.com.messaging.softcode_occurrence": [[109, "module-village.pybpodapi.com.messaging.softcode_occurrence", false]], "village.pybpodapi.com.messaging.state_occurrence": [[111, "module-village.pybpodapi.com.messaging.state_occurrence", false]], "village.pybpodapi.com.messaging.state_transition": [[113, "module-village.pybpodapi.com.messaging.state_transition", false]], "village.pybpodapi.com.messaging.stderr": [[115, "module-village.pybpodapi.com.messaging.stderr", false]], "village.pybpodapi.com.messaging.stdout": [[117, "module-village.pybpodapi.com.messaging.stdout", false]], "village.pybpodapi.com.messaging.trial": [[119, "module-village.pybpodapi.com.messaging.trial", false]], "village.pybpodapi.com.messaging.untagged_message": [[121, "module-village.pybpodapi.com.messaging.untagged_message", false]], "village.pybpodapi.com.messaging.value": [[123, "module-village.pybpodapi.com.messaging.value", false]], "village.pybpodapi.com.messaging.warning": [[125, "module-village.pybpodapi.com.messaging.warning", false]], "village.pybpodapi.com.protocol": [[127, "module-village.pybpodapi.com.protocol", false]], "village.pybpodapi.com.protocol.recv_msg_headers": [[128, "module-village.pybpodapi.com.protocol.recv_msg_headers", false]], "village.pybpodapi.com.protocol.send_msg_headers": [[130, "module-village.pybpodapi.com.protocol.send_msg_headers", false]], "village.pybpodapi.com.stderr_buffer": [[132, "module-village.pybpodapi.com.stderr_buffer", false]], "village.pybpodapi.com.stdout_buffer": [[134, "module-village.pybpodapi.com.stdout_buffer", false]], "village.pybpodapi.exceptions": [[136, "module-village.pybpodapi.exceptions", false]], "village.pybpodapi.exceptions.bpod_error": [[137, "module-village.pybpodapi.exceptions.bpod_error", false]], "village.pybpodapi.protocol": [[139, "module-village.pybpodapi.protocol", false]], "village.pybpodapi.session": [[140, "module-village.pybpodapi.session", false]], "village.pybpodapi.state_machine": [[143, "module-village.pybpodapi.state_machine", false]], "village.pybpodapi.state_machine.conditions": [[145, "module-village.pybpodapi.state_machine.conditions", false]], "village.pybpodapi.state_machine.global_counters": [[147, "module-village.pybpodapi.state_machine.global_counters", false]], "village.pybpodapi.state_machine.global_timers": [[149, "module-village.pybpodapi.state_machine.global_timers", false]], "village.pybpodapi.state_machine.state_machine_base": [[151, "module-village.pybpodapi.state_machine.state_machine_base", false]], "village.pybpodapi.state_machine.state_machine_builder": [[154, "module-village.pybpodapi.state_machine.state_machine_builder", false]], "village.pybpodapi.state_machine.state_machine_runner": [[157, "module-village.pybpodapi.state_machine.state_machine_runner", false]], "village.pybpodapi.utils": [[160, "module-village.pybpodapi.utils", false]], "village.pybpodapi.utils.csv": [[161, "module-village.pybpodapi.utils.csv", false]], "village.pybpodapi.utils.date_parser": [[164, "module-village.pybpodapi.utils.date_parser", false]], "village.screen": [[166, "module-village.screen", false]], "village.screen.behaviour_window": [[167, "module-village.screen.behaviour_window", false]], "warningmessage (class in village.pybpodapi.com.messaging.warning)": [[126, "village.pybpodapi.com.messaging.warning.WarningMessage", false]], "wire (bpod.channelnames attribute)": [[47, "village.pybpodapi.bpod.Bpod.ChannelNames.WIRE", false]], "wire (bpodbase.channelnames attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.WIRE", false]], "wire (bpodcomprotocol.channelnames attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.WIRE", false]], "wire (bpodcomprotocolmodules.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.WIRE", false]], "wire (bpodio.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.WIRE", false]], "wire (channelname attribute)": [[58, "village.pybpodapi.bpod.hardware.channels.ChannelName.WIRE", false]], "wire1 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Wire1", false]], "wire1high (bpod.events attribute)": [[47, "village.pybpodapi.bpod.Bpod.Events.Wire1High", false]], "wire1high (bpod.outputchannels attribute)": [[47, "village.pybpodapi.bpod.Bpod.OutputChannels.Wire1High", false]], "wire1high (bpodbase.events attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Wire1High", false]], "wire1high (bpodbase.outputchannels attribute)": [[49, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.Wire1High", false]], "wire1high (bpodcomprotocol.events attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Wire1High", false]], "wire1high (bpodcomprotocol.outputchannels attribute)": [[51, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.Wire1High", false]], "wire1high (bpodcomprotocolmodules.events attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Wire1High", false]], "wire1high (bpodcomprotocolmodules.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.Wire1High", false]], "wire1high (bpodio.events attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Wire1High", false]], "wire1high (bpodio.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.Wire1High", false]], "wire1high (event attribute)": [[25, "village.classes.task.Event.Wire1High", false]], "wire1high (eventname attribute)": [[66, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Wire1High", false]], "wire1high (output attribute)": [[26, "village.classes.task.Output.Wire1High", false]], "wire1high (outputchannel attribute)": [[74, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.Wire1High", false]], "wire2 (inputname attribute)": [[71, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Wire2", false]], "writable() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.writable", false]], "writable() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.writable", false]], "write() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.write", false]], "write() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.write", false]], "write_to_module (sendmessageheader attribute)": [[131, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.WRITE_TO_MODULE", false]], "writelines() (stderrbuffer method)": [[133, "village.pybpodapi.com.stderr_buffer.StderrBuffer.writelines", false]], "writelines() (stdoutbuffer method)": [[135, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.writelines", false]], "writer (class in village.pybpodapi.utils.csv)": [[163, "village.pybpodapi.utils.csv.Writer", false]]}, "objects": {"village": [[0, 0, 0, "-", "classes"], [33, 0, 0, "-", "devices"], [44, 0, 0, "-", "gui"], [45, 0, 0, "-", "pybpodapi"], [166, 0, 0, "-", "screen"]], "village.classes": [[1, 0, 0, "-", "enums"], [12, 0, 0, "-", "protocols"], [19, 0, 0, "-", "settings_class"], [22, 0, 0, "-", "subject"], [24, 0, 0, "-", "task"], [29, 0, 0, "-", "training"]], "village.classes.enums": [[2, 1, 1, "", "Actions"], [3, 1, 1, "", "Active"], [4, 1, 1, "", "AreaActive"], [5, 1, 1, "", "Color"], [6, 1, 1, "", "Cycle"], [7, 1, 1, "", "DataTable"], [8, 1, 1, "", "Info"], [9, 1, 1, "", "ScreenActive"], [10, 1, 1, "", "State"], [11, 1, 1, "", "SuperEnum"]], "village.classes.enums.Actions": [[2, 2, 1, "", "__init__"]], "village.classes.enums.Active": [[3, 2, 1, "", "__init__"]], "village.classes.enums.AreaActive": [[4, 2, 1, "", "__init__"]], "village.classes.enums.Color": [[5, 2, 1, "", "__init__"]], "village.classes.enums.Cycle": [[6, 2, 1, "", "__init__"]], "village.classes.enums.DataTable": [[7, 2, 1, "", "__init__"]], "village.classes.enums.Info": [[8, 2, 1, "", "__init__"]], "village.classes.enums.ScreenActive": [[9, 2, 1, "", "__init__"]], "village.classes.enums.State": [[10, 2, 1, "", "__init__"]], "village.classes.enums.SuperEnum": [[11, 2, 1, "", "__init__"]], "village.classes.protocols": [[13, 1, 1, "", "CameraProtocol"], [14, 1, 1, "", "EventProtocol"], [15, 1, 1, "", "PyBpodProtocol"], [16, 1, 1, "", "ScaleProtocol"], [17, 1, 1, "", "TelegramBotProtocol"], [18, 1, 1, "", "TempSensorProtocol"]], "village.classes.protocols.CameraProtocol": [[13, 2, 1, "", "__init__"]], "village.classes.protocols.EventProtocol": [[14, 2, 1, "", "__init__"]], "village.classes.protocols.PyBpodProtocol": [[15, 2, 1, "", "__init__"]], "village.classes.protocols.ScaleProtocol": [[16, 2, 1, "", "__init__"]], "village.classes.protocols.TelegramBotProtocol": [[17, 2, 1, "", "__init__"]], "village.classes.protocols.TempSensorProtocol": [[18, 2, 1, "", "__init__"]], "village.classes.settings_class": [[20, 1, 1, "", "Setting"], [21, 1, 1, "", "Settings"]], "village.classes.settings_class.Setting": [[20, 2, 1, "", "__init__"]], "village.classes.settings_class.Settings": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "get"], [21, 2, 1, "", "get_description"], [21, 2, 1, "", "get_index"], [21, 2, 1, "", "get_indices"], [21, 2, 1, "", "get_text"], [21, 2, 1, "", "get_type"], [21, 2, 1, "", "get_values"]], "village.classes.subject": [[23, 1, 1, "", "Subject"]], "village.classes.subject.Subject": [[23, 2, 1, "", "__init__"]], "village.classes.task": [[25, 1, 1, "", "Event"], [26, 1, 1, "", "Output"], [27, 1, 1, "", "Task"], [28, 4, 1, "", "TaskError"]], "village.classes.task.Event": [[25, 3, 1, "", "BNC1High"], [25, 3, 1, "", "Condition1"], [25, 3, 1, "", "GlobalCounter1End"], [25, 3, 1, "", "GlobalTimer1End"], [25, 3, 1, "", "GlobalTimer1Start"], [25, 3, 1, "", "PA1_Port1In"], [25, 3, 1, "", "Port1In"], [25, 3, 1, "", "Tup"], [25, 3, 1, "", "Wire1High"], [25, 2, 1, "", "__init__"], [25, 2, 1, "", "is_condition"], [25, 2, 1, "", "is_global_counter_end"], [25, 2, 1, "", "is_global_timer_cancel"], [25, 2, 1, "", "is_global_timer_end"], [25, 2, 1, "", "is_global_timer_start"], [25, 2, 1, "", "is_global_timer_trigger"], [25, 2, 1, "", "is_state_timer"]], "village.classes.task.Output": [[26, 3, 1, "", "BNC1High"], [26, 3, 1, "", "GlobalCounterReset"], [26, 3, 1, "", "GlobalTimer1Cancel"], [26, 3, 1, "", "GlobalTimer1Trig"], [26, 3, 1, "", "Serial1"], [26, 3, 1, "", "SoftCode1"], [26, 3, 1, "", "Valve"], [26, 3, 1, "", "Wire1High"], [26, 2, 1, "", "__init__"]], "village.classes.task.Task": [[27, 2, 1, "", "__init__"]], "village.classes.training": [[30, 1, 1, "", "Settings"], [31, 1, 1, "", "Training"], [32, 4, 1, "", "TrainingError"]], "village.classes.training.Settings": [[30, 2, 1, "", "__init__"]], "village.classes.training.Training": [[31, 2, 1, "", "__init__"]], "village.devices": [[34, 0, 0, "-", "bpod"], [38, 0, 0, "-", "scale"], [41, 0, 0, "-", "temp_sensor"]], "village.devices.bpod": [[35, 1, 1, "", "PyBpod"], [36, 1, 1, "", "Softcode"], [37, 5, 1, "", "get_bpod"]], "village.devices.bpod.PyBpod": [[35, 2, 1, "", "__init__"]], "village.devices.bpod.Softcode": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "close"], [36, 2, 1, "", "kill"], [36, 2, 1, "", "send"]], "village.devices.scale": [[39, 1, 1, "", "Scale"], [40, 5, 1, "", "get_scale"]], "village.devices.scale.Scale": [[39, 2, 1, "", "__init__"]], "village.devices.temp_sensor": [[42, 1, 1, "", "TempSensor"], [43, 5, 1, "", "get_temp_sensor"]], "village.devices.temp_sensor.TempSensor": [[42, 2, 1, "", "__init__"]], "village.pybpodapi": [[46, 0, 0, "-", "bpod"], [82, 0, 0, "-", "bpod_modules"], [87, 0, 0, "-", "com"], [136, 0, 0, "-", "exceptions"], [139, 0, 0, "-", "protocol"], [140, 0, 0, "-", "session"], [143, 0, 0, "-", "state_machine"], [160, 0, 0, "-", "utils"]], "village.pybpodapi.bpod": [[47, 1, 1, "", "Bpod"], [48, 0, 0, "-", "bpod_base"], [50, 0, 0, "-", "bpod_com_protocol"], [52, 0, 0, "-", "bpod_com_protocol_modules"], [54, 0, 0, "-", "bpod_io"], [56, 0, 0, "-", "hardware"], [75, 0, 0, "-", "non_blockingsocketreceive"], [78, 0, 0, "-", "non_blockingstreamreader"], [81, 0, 0, "-", "settings"]], "village.pybpodapi.bpod.Bpod": [[47, 1, 1, "", "ChannelNames"], [47, 1, 1, "", "ChannelTypes"], [47, 1, 1, "", "Events"], [47, 1, 1, "", "OutputChannels"], [47, 2, 1, "", "__init__"], [47, 2, 1, "", "close"], [47, 2, 1, "", "data_available"], [47, 2, 1, "", "find_module_by_name"], [47, 2, 1, "", "load_serial_message"], [47, 2, 1, "", "loop_handler"], [47, 2, 1, "", "manual_override"], [47, 2, 1, "", "open"], [47, 2, 1, "", "reset_serial_messages"], [47, 2, 1, "", "run_state_machine"], [47, 2, 1, "", "send_state_machine"], [47, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.Bpod.ChannelNames": [[47, 3, 1, "", "BNC"], [47, 3, 1, "", "PWM"], [47, 3, 1, "", "SERIAL"], [47, 3, 1, "", "VALVE"], [47, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.Bpod.ChannelTypes": [[47, 3, 1, "", "INPUT"], [47, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.Bpod.Events": [[47, 3, 1, "", "BNC1High"], [47, 3, 1, "", "Condition1"], [47, 3, 1, "", "GlobalCounter1End"], [47, 3, 1, "", "GlobalTimer1End"], [47, 3, 1, "", "GlobalTimer1Start"], [47, 3, 1, "", "PA1_Port1In"], [47, 3, 1, "", "Port1In"], [47, 3, 1, "", "Tup"], [47, 3, 1, "", "Wire1High"], [47, 2, 1, "", "is_condition"], [47, 2, 1, "", "is_global_counter_end"], [47, 2, 1, "", "is_global_timer_cancel"], [47, 2, 1, "", "is_global_timer_end"], [47, 2, 1, "", "is_global_timer_start"], [47, 2, 1, "", "is_global_timer_trigger"], [47, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.Bpod.OutputChannels": [[47, 3, 1, "", "BNC1High"], [47, 3, 1, "", "GlobalCounterReset"], [47, 3, 1, "", "GlobalTimer1Cancel"], [47, 3, 1, "", "GlobalTimer1Trig"], [47, 3, 1, "", "Serial1"], [47, 3, 1, "", "SoftCode1"], [47, 3, 1, "", "Valve"], [47, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_base": [[49, 1, 1, "", "BpodBase"]], "village.pybpodapi.bpod.bpod_base.BpodBase": [[49, 1, 1, "", "ChannelNames"], [49, 1, 1, "", "ChannelTypes"], [49, 1, 1, "", "Events"], [49, 1, 1, "", "OutputChannels"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "close"], [49, 2, 1, "", "find_module_by_name"], [49, 2, 1, "", "load_serial_message"], [49, 2, 1, "", "loop_handler"], [49, 2, 1, "", "open"], [49, 2, 1, "", "reset_serial_messages"], [49, 2, 1, "", "run_state_machine"], [49, 2, 1, "", "send_state_machine"], [49, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames": [[49, 3, 1, "", "BNC"], [49, 3, 1, "", "PWM"], [49, 3, 1, "", "SERIAL"], [49, 3, 1, "", "VALVE"], [49, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes": [[49, 3, 1, "", "INPUT"], [49, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_base.BpodBase.Events": [[49, 3, 1, "", "BNC1High"], [49, 3, 1, "", "Condition1"], [49, 3, 1, "", "GlobalCounter1End"], [49, 3, 1, "", "GlobalTimer1End"], [49, 3, 1, "", "GlobalTimer1Start"], [49, 3, 1, "", "PA1_Port1In"], [49, 3, 1, "", "Port1In"], [49, 3, 1, "", "Tup"], [49, 3, 1, "", "Wire1High"], [49, 2, 1, "", "is_condition"], [49, 2, 1, "", "is_global_counter_end"], [49, 2, 1, "", "is_global_timer_cancel"], [49, 2, 1, "", "is_global_timer_end"], [49, 2, 1, "", "is_global_timer_start"], [49, 2, 1, "", "is_global_timer_trigger"], [49, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels": [[49, 3, 1, "", "BNC1High"], [49, 3, 1, "", "GlobalCounterReset"], [49, 3, 1, "", "GlobalTimer1Cancel"], [49, 3, 1, "", "GlobalTimer1Trig"], [49, 3, 1, "", "Serial1"], [49, 3, 1, "", "SoftCode1"], [49, 3, 1, "", "Valve"], [49, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_com_protocol": [[51, 1, 1, "", "BpodCOMProtocol"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol": [[51, 1, 1, "", "ChannelNames"], [51, 1, 1, "", "ChannelTypes"], [51, 1, 1, "", "Events"], [51, 1, 1, "", "OutputChannels"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "close"], [51, 2, 1, "", "data_available"], [51, 2, 1, "", "find_module_by_name"], [51, 2, 1, "", "load_serial_message"], [51, 2, 1, "", "loop_handler"], [51, 2, 1, "", "manual_override"], [51, 2, 1, "", "open"], [51, 2, 1, "", "reset_serial_messages"], [51, 2, 1, "", "run_state_machine"], [51, 2, 1, "", "send_state_machine"], [51, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames": [[51, 3, 1, "", "BNC"], [51, 3, 1, "", "PWM"], [51, 3, 1, "", "SERIAL"], [51, 3, 1, "", "VALVE"], [51, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes": [[51, 3, 1, "", "INPUT"], [51, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events": [[51, 3, 1, "", "BNC1High"], [51, 3, 1, "", "Condition1"], [51, 3, 1, "", "GlobalCounter1End"], [51, 3, 1, "", "GlobalTimer1End"], [51, 3, 1, "", "GlobalTimer1Start"], [51, 3, 1, "", "PA1_Port1In"], [51, 3, 1, "", "Port1In"], [51, 3, 1, "", "Tup"], [51, 3, 1, "", "Wire1High"], [51, 2, 1, "", "is_condition"], [51, 2, 1, "", "is_global_counter_end"], [51, 2, 1, "", "is_global_timer_cancel"], [51, 2, 1, "", "is_global_timer_end"], [51, 2, 1, "", "is_global_timer_start"], [51, 2, 1, "", "is_global_timer_trigger"], [51, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels": [[51, 3, 1, "", "BNC1High"], [51, 3, 1, "", "GlobalCounterReset"], [51, 3, 1, "", "GlobalTimer1Cancel"], [51, 3, 1, "", "GlobalTimer1Trig"], [51, 3, 1, "", "Serial1"], [51, 3, 1, "", "SoftCode1"], [51, 3, 1, "", "Valve"], [51, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_com_protocol_modules": [[53, 1, 1, "", "BpodCOMProtocolModules"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules": [[53, 1, 1, "", "ChannelNames"], [53, 1, 1, "", "ChannelTypes"], [53, 1, 1, "", "Events"], [53, 1, 1, "", "OutputChannels"], [53, 2, 1, "", "__init__"], [53, 2, 1, "", "close"], [53, 2, 1, "", "data_available"], [53, 2, 1, "", "find_module_by_name"], [53, 2, 1, "", "load_serial_message"], [53, 2, 1, "", "loop_handler"], [53, 2, 1, "", "manual_override"], [53, 2, 1, "", "open"], [53, 2, 1, "", "reset_serial_messages"], [53, 2, 1, "", "run_state_machine"], [53, 2, 1, "", "send_state_machine"], [53, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames": [[53, 3, 1, "", "BNC"], [53, 3, 1, "", "PWM"], [53, 3, 1, "", "SERIAL"], [53, 3, 1, "", "VALVE"], [53, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes": [[53, 3, 1, "", "INPUT"], [53, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events": [[53, 3, 1, "", "BNC1High"], [53, 3, 1, "", "Condition1"], [53, 3, 1, "", "GlobalCounter1End"], [53, 3, 1, "", "GlobalTimer1End"], [53, 3, 1, "", "GlobalTimer1Start"], [53, 3, 1, "", "PA1_Port1In"], [53, 3, 1, "", "Port1In"], [53, 3, 1, "", "Tup"], [53, 3, 1, "", "Wire1High"], [53, 2, 1, "", "is_condition"], [53, 2, 1, "", "is_global_counter_end"], [53, 2, 1, "", "is_global_timer_cancel"], [53, 2, 1, "", "is_global_timer_end"], [53, 2, 1, "", "is_global_timer_start"], [53, 2, 1, "", "is_global_timer_trigger"], [53, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels": [[53, 3, 1, "", "BNC1High"], [53, 3, 1, "", "GlobalCounterReset"], [53, 3, 1, "", "GlobalTimer1Cancel"], [53, 3, 1, "", "GlobalTimer1Trig"], [53, 3, 1, "", "Serial1"], [53, 3, 1, "", "SoftCode1"], [53, 3, 1, "", "Valve"], [53, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_io": [[55, 1, 1, "", "BpodIO"]], "village.pybpodapi.bpod.bpod_io.BpodIO": [[55, 1, 1, "", "ChannelNames"], [55, 1, 1, "", "ChannelTypes"], [55, 1, 1, "", "Events"], [55, 1, 1, "", "OutputChannels"], [55, 2, 1, "", "__init__"], [55, 2, 1, "", "close"], [55, 2, 1, "", "data_available"], [55, 2, 1, "", "find_module_by_name"], [55, 2, 1, "", "load_serial_message"], [55, 2, 1, "", "loop_handler"], [55, 2, 1, "", "manual_override"], [55, 2, 1, "", "open"], [55, 2, 1, "", "reset_serial_messages"], [55, 2, 1, "", "run_state_machine"], [55, 2, 1, "", "send_state_machine"], [55, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames": [[55, 3, 1, "", "BNC"], [55, 3, 1, "", "PWM"], [55, 3, 1, "", "SERIAL"], [55, 3, 1, "", "VALVE"], [55, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes": [[55, 3, 1, "", "INPUT"], [55, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_io.BpodIO.Events": [[55, 3, 1, "", "BNC1High"], [55, 3, 1, "", "Condition1"], [55, 3, 1, "", "GlobalCounter1End"], [55, 3, 1, "", "GlobalTimer1End"], [55, 3, 1, "", "GlobalTimer1Start"], [55, 3, 1, "", "PA1_Port1In"], [55, 3, 1, "", "Port1In"], [55, 3, 1, "", "Tup"], [55, 3, 1, "", "Wire1High"], [55, 2, 1, "", "is_condition"], [55, 2, 1, "", "is_global_counter_end"], [55, 2, 1, "", "is_global_timer_cancel"], [55, 2, 1, "", "is_global_timer_end"], [55, 2, 1, "", "is_global_timer_start"], [55, 2, 1, "", "is_global_timer_trigger"], [55, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels": [[55, 3, 1, "", "BNC1High"], [55, 3, 1, "", "GlobalCounterReset"], [55, 3, 1, "", "GlobalTimer1Cancel"], [55, 3, 1, "", "GlobalTimer1Trig"], [55, 3, 1, "", "Serial1"], [55, 3, 1, "", "SoftCode1"], [55, 3, 1, "", "Valve"], [55, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.hardware": [[57, 0, 0, "-", "channels"], [62, 0, 0, "-", "events"], [67, 0, 0, "-", "hardware"], [69, 0, 0, "-", "input_channels"], [72, 0, 0, "-", "output_channels"]], "village.pybpodapi.bpod.hardware.channels": [[58, 1, 1, "", "ChannelName"], [59, 1, 1, "", "ChannelType"], [60, 1, 1, "", "Channels"], [61, 1, 1, "", "EventsPositions"]], "village.pybpodapi.bpod.hardware.channels.ChannelName": [[58, 3, 1, "", "BNC"], [58, 3, 1, "", "PWM"], [58, 3, 1, "", "SERIAL"], [58, 3, 1, "", "VALVE"], [58, 3, 1, "", "WIRE"], [58, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.channels.ChannelType": [[59, 3, 1, "", "INPUT"], [59, 3, 1, "", "OUTPUT"], [59, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.channels.Channels": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "get_event_name"], [60, 2, 1, "", "setup_input_channels"], [60, 2, 1, "", "setup_output_channels"]], "village.pybpodapi.bpod.hardware.channels.EventsPositions": [[61, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.events": [[63, 0, 0, "-", "base_eventname"], [65, 0, 0, "-", "bpod_events"]], "village.pybpodapi.bpod.hardware.events.base_eventname": [[64, 1, 1, "", "BaseEventName"]], "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "is_condition"], [64, 2, 1, "", "is_global_counter_end"], [64, 2, 1, "", "is_global_timer_cancel"], [64, 2, 1, "", "is_global_timer_end"], [64, 2, 1, "", "is_global_timer_start"], [64, 2, 1, "", "is_global_timer_trigger"], [64, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.hardware.events.bpod_events": [[66, 1, 1, "", "EventName"]], "village.pybpodapi.bpod.hardware.events.bpod_events.EventName": [[66, 3, 1, "", "BNC1High"], [66, 3, 1, "", "Condition1"], [66, 3, 1, "", "GlobalCounter1End"], [66, 3, 1, "", "GlobalTimer1End"], [66, 3, 1, "", "GlobalTimer1Start"], [66, 3, 1, "", "PA1_Port1In"], [66, 3, 1, "", "Port1In"], [66, 3, 1, "", "Tup"], [66, 3, 1, "", "Wire1High"], [66, 2, 1, "", "__init__"], [66, 2, 1, "", "is_condition"], [66, 2, 1, "", "is_global_counter_end"], [66, 2, 1, "", "is_global_timer_cancel"], [66, 2, 1, "", "is_global_timer_end"], [66, 2, 1, "", "is_global_timer_start"], [66, 2, 1, "", "is_global_timer_trigger"], [66, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.hardware.hardware": [[68, 1, 1, "", "Hardware"]], "village.pybpodapi.bpod.hardware.hardware.Hardware": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "setup"]], "village.pybpodapi.bpod.hardware.input_channels": [[70, 0, 0, "-", "bpod_input_channels"]], "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels": [[71, 1, 1, "", "InputName"]], "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName": [[71, 3, 1, "", "BNC1"], [71, 3, 1, "", "BNC2"], [71, 3, 1, "", "Port1"], [71, 3, 1, "", "Port2"], [71, 3, 1, "", "Port3"], [71, 3, 1, "", "Port4"], [71, 3, 1, "", "Port5"], [71, 3, 1, "", "Port6"], [71, 3, 1, "", "Port7"], [71, 3, 1, "", "Port8"], [71, 3, 1, "", "Serial1"], [71, 3, 1, "", "Serial2"], [71, 3, 1, "", "Serial3"], [71, 3, 1, "", "USB1"], [71, 3, 1, "", "Wire1"], [71, 3, 1, "", "Wire2"], [71, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.output_channels": [[73, 0, 0, "-", "bpod_output_channels"]], "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels": [[74, 1, 1, "", "OutputChannel"]], "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel": [[74, 3, 1, "", "BNC1High"], [74, 3, 1, "", "GlobalCounterReset"], [74, 3, 1, "", "GlobalTimer1Cancel"], [74, 3, 1, "", "GlobalTimer1Trig"], [74, 3, 1, "", "Serial1"], [74, 3, 1, "", "SoftCode1"], [74, 3, 1, "", "Valve"], [74, 3, 1, "", "Wire1High"], [74, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.non_blockingsocketreceive": [[76, 1, 1, "", "NonBlockingSocketReceive"], [77, 4, 1, "", "UnexpectedEndOfStream"]], "village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive": [[76, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.non_blockingstreamreader": [[79, 1, 1, "", "NonBlockingStreamReader"], [80, 4, 1, "", "UnexpectedEndOfStream"]], "village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader": [[79, 2, 1, "", "__init__"]], "village.pybpodapi.bpod_modules": [[83, 0, 0, "-", "bpod_module"], [85, 0, 0, "-", "bpod_modules"]], "village.pybpodapi.bpod_modules.bpod_module": [[84, 1, 1, "", "BpodModule"]], "village.pybpodapi.bpod_modules.bpod_module.BpodModule": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "load_message"]], "village.pybpodapi.bpod_modules.bpod_modules": [[86, 1, 1, "", "BpodModules"]], "village.pybpodapi.bpod_modules.bpod_modules.BpodModules": [[86, 2, 1, "", "__init__"]], "village.pybpodapi.com": [[88, 0, 0, "-", "arcom"], [92, 0, 0, "-", "messaging"], [127, 0, 0, "-", "protocol"], [132, 0, 0, "-", "stderr_buffer"], [134, 0, 0, "-", "stdout_buffer"]], "village.pybpodapi.com.arcom": [[89, 1, 1, "", "ArCOM"], [90, 1, 1, "", "ArduinoTypes"], [91, 1, 1, "", "DataType"]], "village.pybpodapi.com.arcom.ArCOM": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "bytes_available"], [89, 2, 1, "", "close"], [89, 2, 1, "", "open"]], "village.pybpodapi.com.arcom.ArduinoTypes": [[90, 2, 1, "", "__init__"]], "village.pybpodapi.com.arcom.DataType": [[91, 2, 1, "", "__init__"]], "village.pybpodapi.com.messaging": [[93, 0, 0, "-", "base_message"], [95, 0, 0, "-", "debug"], [97, 0, 0, "-", "end_trial"], [99, 0, 0, "-", "error"], [101, 0, 0, "-", "event_occurrence"], [103, 0, 0, "-", "event_resume"], [105, 0, 0, "-", "parser"], [107, 0, 0, "-", "session_info"], [109, 0, 0, "-", "softcode_occurrence"], [111, 0, 0, "-", "state_occurrence"], [113, 0, 0, "-", "state_transition"], [115, 0, 0, "-", "stderr"], [117, 0, 0, "-", "stdout"], [119, 0, 0, "-", "trial"], [121, 0, 0, "-", "untagged_message"], [123, 0, 0, "-", "value"], [125, 0, 0, "-", "warning"]], "village.pybpodapi.com.messaging.base_message": [[94, 1, 1, "", "BaseMessage"]], "village.pybpodapi.com.messaging.base_message.BaseMessage": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "check_type"], [94, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.debug": [[96, 1, 1, "", "DebugMessage"]], "village.pybpodapi.com.messaging.debug.DebugMessage": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "check_type"], [96, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.end_trial": [[98, 1, 1, "", "EndTrial"]], "village.pybpodapi.com.messaging.end_trial.EndTrial": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "check_type"], [98, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.error": [[100, 1, 1, "", "ErrorMessage"]], "village.pybpodapi.com.messaging.error.ErrorMessage": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "check_type"], [100, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.event_occurrence": [[102, 1, 1, "", "EventOccurrence"]], "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "check_type"], [102, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.event_resume": [[104, 1, 1, "", "EventResume"]], "village.pybpodapi.com.messaging.event_resume.EventResume": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "check_type"], [104, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.parser": [[106, 1, 1, "", "MessageParser"]], "village.pybpodapi.com.messaging.parser.MessageParser": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.session_info": [[108, 1, 1, "", "SessionInfo"]], "village.pybpodapi.com.messaging.session_info.SessionInfo": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "check_type"], [108, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.softcode_occurrence": [[110, 1, 1, "", "SoftcodeOccurrence"]], "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "check_type"], [110, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.state_occurrence": [[112, 1, 1, "", "StateOccurrence"]], "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "check_type"], [112, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.state_transition": [[114, 1, 1, "", "StateTransition"]], "village.pybpodapi.com.messaging.state_transition.StateTransition": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "check_type"], [114, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.stderr": [[116, 1, 1, "", "StderrMessage"]], "village.pybpodapi.com.messaging.stderr.StderrMessage": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "check_type"], [116, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.stdout": [[118, 1, 1, "", "StdoutMessage"]], "village.pybpodapi.com.messaging.stdout.StdoutMessage": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "check_type"], [118, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.trial": [[120, 1, 1, "", "Trial"]], "village.pybpodapi.com.messaging.trial.Trial": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "check_type"], [120, 2, 1, "", "fromlist"], [120, 2, 1, "", "get_all_timestamps_by_event"], [120, 2, 1, "", "get_events_names"], [120, 2, 1, "", "get_timestamps_by_event_name"]], "village.pybpodapi.com.messaging.untagged_message": [[122, 1, 1, "", "UntaggedMessage"]], "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "check_type"], [122, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.value": [[124, 1, 1, "", "ValueMessage"]], "village.pybpodapi.com.messaging.value.ValueMessage": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "check_type"], [124, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.warning": [[126, 1, 1, "", "WarningMessage"]], "village.pybpodapi.com.messaging.warning.WarningMessage": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "check_type"], [126, 2, 1, "", "fromlist"]], "village.pybpodapi.com.protocol": [[128, 0, 0, "-", "recv_msg_headers"], [130, 0, 0, "-", "send_msg_headers"]], "village.pybpodapi.com.protocol.recv_msg_headers": [[129, 1, 1, "", "ReceiveMessageHeader"]], "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader": [[129, 3, 1, "", "ENABLE_PORTS_OK"], [129, 3, 1, "", "HANDSHAKE_OK"], [129, 3, 1, "", "LOAD_SERIAL_MESSAGE_OK"], [129, 3, 1, "", "MODULE_EVENT_NAMES"], [129, 3, 1, "", "MODULE_REQUESTED_EVENT"], [129, 3, 1, "", "RESET_SERIAL_MESSAGES"], [129, 3, 1, "", "STATE_MACHINE_INSTALLATION_STATUS"], [129, 3, 1, "", "SYNC_CHANNEL_MODE_OK"], [129, 2, 1, "", "__init__"]], "village.pybpodapi.com.protocol.send_msg_headers": [[131, 1, 1, "", "SendMessageHeader"]], "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader": [[131, 3, 1, "", "DISCONNECT"], [131, 3, 1, "", "ECHO_SOFTCODE"], [131, 3, 1, "", "ENABLE_PORTS"], [131, 3, 1, "", "EXIT_AND_RETURN"], [131, 3, 1, "", "FIRMWARE_VERSION"], [131, 3, 1, "", "GET_MODULES"], [131, 3, 1, "", "GET_TIMESTAMP_TRANSMISSION"], [131, 3, 1, "", "HANDSHAKE"], [131, 3, 1, "", "HARDWARE_DESCRIPTION"], [131, 3, 1, "", "LOAD_SERIAL_MESSAGE"], [131, 3, 1, "", "MANUAL_OVERRIDE_EXEC_EVENT"], [131, 3, 1, "", "NEW_STATE_MATRIX"], [131, 3, 1, "", "OVERRIDE_DIGITAL_HW_STATE"], [131, 3, 1, "", "RESET_CLOCK"], [131, 3, 1, "", "RESET_SERIAL_MESSAGES"], [131, 3, 1, "", "RUN_STATE_MACHINE"], [131, 3, 1, "", "SEND_TO_HW_SERIAL"], [131, 3, 1, "", "SET_MODULE_RELAY"], [131, 3, 1, "", "SYNC_CHANNEL_MODE"], [131, 3, 1, "", "TRIGGER_SOFTCODE"], [131, 3, 1, "", "WRITE_TO_MODULE"], [131, 2, 1, "", "__init__"]], "village.pybpodapi.com.stderr_buffer": [[133, 1, 1, "", "StderrBuffer"]], "village.pybpodapi.com.stderr_buffer.StderrBuffer": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "close"], [133, 2, 1, "", "detach"], [133, 3, 1, "", "encoding"], [133, 3, 1, "", "errors"], [133, 2, 1, "", "fileno"], [133, 2, 1, "", "flush"], [133, 2, 1, "", "getvalue"], [133, 2, 1, "", "isatty"], [133, 3, 1, "", "newlines"], [133, 2, 1, "", "read"], [133, 2, 1, "", "readable"], [133, 2, 1, "", "readline"], [133, 2, 1, "", "readlines"], [133, 2, 1, "", "seek"], [133, 2, 1, "", "seekable"], [133, 2, 1, "", "tell"], [133, 2, 1, "", "truncate"], [133, 2, 1, "", "writable"], [133, 2, 1, "", "write"], [133, 2, 1, "", "writelines"]], "village.pybpodapi.com.stdout_buffer": [[135, 1, 1, "", "StdoutBuffer"]], "village.pybpodapi.com.stdout_buffer.StdoutBuffer": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "close"], [135, 2, 1, "", "detach"], [135, 3, 1, "", "encoding"], [135, 3, 1, "", "errors"], [135, 2, 1, "", "fileno"], [135, 2, 1, "", "flush"], [135, 2, 1, "", "getvalue"], [135, 2, 1, "", "isatty"], [135, 3, 1, "", "newlines"], [135, 2, 1, "", "read"], [135, 2, 1, "", "readable"], [135, 2, 1, "", "readline"], [135, 2, 1, "", "readlines"], [135, 2, 1, "", "seek"], [135, 2, 1, "", "seekable"], [135, 2, 1, "", "tell"], [135, 2, 1, "", "truncate"], [135, 2, 1, "", "writable"], [135, 2, 1, "", "write"], [135, 2, 1, "", "writelines"]], "village.pybpodapi.exceptions": [[137, 0, 0, "-", "bpod_error"]], "village.pybpodapi.exceptions.bpod_error": [[138, 4, 1, "", "BpodErrorException"]], "village.pybpodapi.session": [[141, 1, 1, "", "Session"], [142, 1, 1, "", "StreamsWrapper"]], "village.pybpodapi.session.Session": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "current_trial"]], "village.pybpodapi.session.StreamsWrapper": [[142, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine": [[144, 1, 1, "", "StateMachine"], [145, 0, 0, "-", "conditions"], [147, 0, 0, "-", "global_counters"], [149, 0, 0, "-", "global_timers"], [151, 0, 0, "-", "state_machine_base"], [154, 0, 0, "-", "state_machine_builder"], [157, 0, 0, "-", "state_machine_runner"]], "village.pybpodapi.state_machine.StateMachine": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "add_state"], [144, 2, 1, "", "build_message"], [144, 2, 1, "", "build_message_32_bits"], [144, 2, 1, "", "set_condition"], [144, 2, 1, "", "set_global_counter"], [144, 2, 1, "", "set_global_timer"], [144, 2, 1, "", "set_global_timer_legacy"], [144, 2, 1, "", "update_state_numbers"]], "village.pybpodapi.state_machine.conditions": [[146, 1, 1, "", "Conditions"]], "village.pybpodapi.state_machine.conditions.Conditions": [[146, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine.global_counters": [[148, 1, 1, "", "GlobalCounters"]], "village.pybpodapi.state_machine.global_counters.GlobalCounters": [[148, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine.global_timers": [[150, 1, 1, "", "GlobalTimers"]], "village.pybpodapi.state_machine.global_timers.GlobalTimers": [[150, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine.state_machine_base": [[152, 4, 1, "", "SMAError"], [153, 1, 1, "", "StateMachineBase"]], "village.pybpodapi.state_machine.state_machine_base.StateMachineBase": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "add_state"], [153, 2, 1, "", "set_condition"], [153, 2, 1, "", "set_global_counter"], [153, 2, 1, "", "set_global_timer"], [153, 2, 1, "", "set_global_timer_legacy"]], "village.pybpodapi.state_machine.state_machine_builder": [[155, 1, 1, "", "StateMachineBuilder"], [156, 4, 1, "", "StateMachineBuilderError"]], "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "add_state"], [155, 2, 1, "", "build_message"], [155, 2, 1, "", "build_message_32_bits"], [155, 2, 1, "", "set_condition"], [155, 2, 1, "", "set_global_counter"], [155, 2, 1, "", "set_global_timer"], [155, 2, 1, "", "set_global_timer_legacy"], [155, 2, 1, "", "update_state_numbers"]], "village.pybpodapi.state_machine.state_machine_runner": [[158, 1, 1, "", "StateMachineRunner"], [159, 4, 1, "", "StateMachineRunnerError"]], "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "add_state"], [158, 2, 1, "", "build_message"], [158, 2, 1, "", "build_message_32_bits"], [158, 2, 1, "", "set_condition"], [158, 2, 1, "", "set_global_counter"], [158, 2, 1, "", "set_global_timer"], [158, 2, 1, "", "set_global_timer_legacy"], [158, 2, 1, "", "update_state_numbers"]], "village.pybpodapi.utils": [[161, 0, 0, "-", "csv"], [164, 0, 0, "-", "date_parser"]], "village.pybpodapi.utils.csv": [[162, 1, 1, "", "Reader"], [163, 1, 1, "", "Writer"]], "village.pybpodapi.utils.csv.Reader": [[162, 2, 1, "", "__init__"]], "village.pybpodapi.utils.csv.Writer": [[163, 2, 1, "", "__init__"]], "village.pybpodapi.utils.date_parser": [[165, 5, 1, "", "parse"]], "village.screen": [[167, 0, 0, "-", "behaviour_window"]], "village.screen.behaviour_window": [[168, 1, 1, "", "BehaviourWindow"]], "village.screen.behaviour_window.BehaviourWindow": [[168, 2, 1, "", "__init__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:property"}, "terms": {"": [76, 131, 144, 153, 155, 158, 173, 175, 177, 182], "0": [47, 49, 51, 53, 55, 84, 133, 135, 144, 153, 155, 158, 177, 182], "0x4": [47, 49, 51, 53, 55, 131], "0x45": 177, "0x64": 177, "1": [2, 3, 4, 5, 6, 7, 8, 9, 11, 26, 47, 49, 51, 53, 55, 59, 71, 74, 89, 129, 131, 133, 135, 144, 153, 155, 158, 176, 182], "1000": 182, "100u": [144, 153, 155, 158], "115200": 89, "12": 177, "1280": 177, "128gb": 177, "13": 177, "2": [47, 49, 51, 53, 55, 59, 71, 133, 135, 176, 182], "20x20": 173, "24": 175, "24\u00bac": 182, "25": [144, 153, 155, 158], "250": 153, "255": [47, 49, 51, 53, 55, 144, 153, 155, 158], "2afc": 175, "2afc_protocol": [47, 49, 51, 53, 55], "2chan": 177, "3": [26, 47, 49, 51, 53, 55, 71, 74, 131, 177, 182, 184], "30x30": 173, "32": [144, 155, 158], "35": 129, "3600": [144, 153, 155, 158], "3d": [170, 172], "4": [47, 49, 51, 53, 55, 71, 131, 177, 182], "429496": 120, "5": [71, 129, 144, 153, 155, 158, 177, 182], "50": 182, "500": 182, "6": [71, 131, 182], "600": 182, "69": 129, "7": [71, 175], "720": 177, "7295": 120, "8": 71, "8gb": 177, "99": 177, "A": [20, 144, 153, 155, 158], "Be": 182, "By": 176, "For": [173, 176, 177, 182], "IN": 177, "If": [133, 135, 144, 153, 155, 158, 182], "In": 177, "It": [94, 175, 182], "Not": 182, "OR": 177, "THAT": 177, "The": [20, 21, 47, 49, 51, 53, 55, 129, 131, 133, 135, 144, 153, 155, 158, 173, 175, 177, 184], "These": [58, 59, 66, 71, 74, 173, 176], "To": 176, "__init__": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 30, 31, 35, 36, 39, 42, 47, 49, 51, 53, 55, 58, 59, 60, 61, 64, 66, 68, 71, 74, 76, 79, 84, 86, 89, 90, 91, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 141, 142, 144, 146, 148, 150, 153, 155, 158, 162, 163, 168], "_arcom": [51, 53], "_bpodbase__process_opcod": [47, 49, 51, 53, 55], "_bpodbase__update_timestamp": [47, 49, 51, 53, 55], "_condition1": [25, 47, 49, 51, 53, 55, 66], "_globalcounter1_end": [25, 47, 49, 51, 53, 55, 66], "_globalcounterreset": [26, 47, 49, 51, 53, 55, 74], "_globaltimer1_end": [25, 47, 49, 51, 53, 55, 66], "_globaltimer1_start": [25, 47, 49, 51, 53, 55, 66], "_globaltimercancel": [26, 47, 49, 51, 53, 55, 74], "_globaltimertrig": [26, 47, 49, 51, 53, 55, 74], "_tup": [25, 47, 49, 51, 53, 55, 66, 120, 144, 153, 155, 158], "a49": 182, "abl": 177, "abnorm": 182, "about": 141, "abov": [177, 182], "absolut": [133, 135], "abstract": 49, "academi": [177, 182], "access": [173, 175, 176, 182], "accord": [58, 59, 66, 71, 74], "accordingli": [47, 49, 51, 53, 55], "account": 177, "accuraci": 173, "acid": 184, "acryl": 173, "action": [51, 53, 144, 153, 155, 158, 182], "activ": 177, "actual": [144, 155, 158], "ad": [133, 135, 153, 176, 177], "add": [47, 49, 51, 53, 55, 144, 153, 155, 158, 176, 177], "add_stat": [144, 153, 155, 158], "addit": 176, "addition": 175, "address": 177, "adjust": [177, 182], "admin": 177, "administr": 177, "advanc": 177, "affect": [153, 155, 182], "after": [133, 135, 182], "again": 182, "alarm": [176, 183, 184], "alarm_set": 21, "alert": 175, "align": 182, "all": [133, 135, 144, 153, 155, 158, 173, 177, 182, 184], "allow": [175, 177, 182], "alreadi": [49, 133, 135], "also": 182, "altern": 170, "aluminium": 172, "alwai": [133, 135, 182], "amount": 182, "an": [20, 68, 84, 89, 102, 104, 110, 126, 133, 135, 144, 153, 155, 158, 182], "analog": [47, 49, 51, 53, 55, 58], "ani": [21, 133, 135, 144, 153, 155, 158, 175], "anim": [175, 182], "annoi": 182, "anoth": [175, 177], "antenna": 182, "anyon": [153, 155], "anywher": 177, "api": [49, 106, 176], "api_index": 176, "applic": [133, 135], "apt": 177, "ar": [21, 47, 49, 51, 53, 55, 120, 133, 135, 144, 153, 155, 158, 173, 176, 182], "arcom": [51, 53], "arduino": [89, 173, 182], "area": 182, "arg": [2, 3, 4, 5, 6, 7, 8, 9, 11], "argument": [133, 135], "around": 177, "ask": 177, "assembl": 173, "assembli": 176, "assess": [182, 184], "assign": [144, 153, 155, 158], "associ": [84, 102, 104, 110, 144, 153, 155, 158], "attempt": [133, 135], "attribut": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18, 25, 26, 35, 39, 42, 47, 49, 51, 53, 55, 58, 59, 66, 68, 71, 74, 86, 90, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 141, 144, 158], "auto": [176, 177], "autom": [173, 175], "automat": [144, 153, 155, 158, 177], "avail": [58, 71, 74, 175], "back": [177, 182], "bad": 182, "basal": 182, "base": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 30, 31, 35, 36, 39, 42, 47, 49, 51, 53, 55, 58, 59, 60, 61, 64, 66, 68, 71, 74, 76, 79, 84, 86, 89, 90, 91, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 141, 142, 144, 146, 148, 150, 153, 155, 158, 162, 163, 168, 173, 176], "base_messag": [116, 118], "baseeventnam": 66, "basemessag": [96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126], "basic": [173, 176], "baudrat": [47, 49, 51, 53, 55, 89], "beam": [173, 182], "becaus": 182, "becom": 182, "been": [94, 133, 135, 153, 182], "befor": [144, 153, 155, 158], "behavior": [175, 182, 184], "being": [153, 158, 182], "below": [170, 173, 182, 184], "between": [47, 49, 51, 53, 55, 89, 144, 153, 155, 158, 182], "bigger": [47, 49, 51, 53, 55], "bin": 177, "binari": [144, 153, 155, 158], "bit": [144, 155, 158], "blank": 177, "block": [133, 135], "blocker": 173, "blue": 182, "bnc": [25, 26, 47, 49, 51, 53, 55, 58, 66, 74], "bnc1": [26, 47, 49, 51, 53, 55, 71, 74], "bnc1high": [25, 26, 47, 49, 51, 53, 55, 66, 74], "bnc2": 71, "board": [47, 49, 51, 53, 55, 94, 96, 102, 104, 110], "board_messag": [98, 100, 108, 122, 124], "board_timestamp": [102, 104, 110], "boardmessag": [98, 100, 108, 116, 118, 122, 124], "bool": [25, 47, 49, 51, 53, 55, 64, 66, 153, 158], "boot": 177, "bot": 176, "botfath": 177, "both": 177, "bottl": [182, 184], "boundari": [2, 3, 4, 5, 6, 7, 8, 9, 11], "box": [47, 49, 51, 53, 55, 71, 144, 153, 155, 158, 175, 182, 184], "bpod": [49, 51, 53, 55, 58, 59, 60, 66, 68, 71, 74, 84, 86, 102, 104, 110, 118, 129, 131, 141, 144, 153, 155, 158, 177, 182], "bpod_bas": [47, 49, 51, 53, 55], "bpod_set": 21, "bpod_workspac": [47, 49, 51, 53, 55], "bpodbas": [47, 51, 53, 55], "bpodcomprotocol": 53, "bpodcomprotocolmodul": 55, "bpodio": 47, "braincircuitsbehaviorlab": 177, "browser": [170, 177], "buffer": [133, 135], "build": [47, 49, 51, 53, 55, 131, 144, 155, 158, 170, 173], "build_messag": [144, 155, 158], "build_message_32_bit": [144, 155, 158], "builder": 155, "button": 182, "buzzer": [173, 182], "byte": [47, 49, 51, 53, 55, 129, 131, 133, 135], "bytes_avail": 89, "c": 131, "cabl": [173, 177, 182], "cad": 173, "cage": [173, 182, 184], "calibr": [182, 184], "cam": 182, "camera": [173, 175, 182], "camera_set": 21, "can": [20, 47, 49, 51, 53, 55, 133, 135, 144, 153, 155, 158, 170, 175, 176, 177, 182, 184], "cannot": 173, "caption": 176, "captur": [144, 153, 155, 158], "card": 177, "categori": 21, "caus": [144, 153, 155, 158], "cd": [177, 182], "chamber": 173, "chang": [102, 104, 110, 133, 135, 144, 153, 155, 158, 177, 182, 184], "channel": [47, 49, 51, 53, 55, 58, 59, 71, 74, 131, 144, 153, 155, 158], "channel_nam": [47, 51, 53, 55], "channel_numb": [47, 51, 53, 55], "channel_typ": [47, 51, 53, 55], "channel_valu": [144, 153, 155, 158], "channelnam": [47, 49, 51, 53, 55], "channeltyp": [47, 49, 51, 53, 55], "charact": [129, 131, 133, 135, 144, 153, 155, 158], "chat": 177, "check": [175, 182, 184], "check_typ": [94, 96, 98, 100, 102, 104, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126], "choos": 177, "chromium": 177, "citric": 184, "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 38, 39, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 161, 162, 163, 167, 168, 176], "classmethod": [94, 96, 98, 100, 102, 104, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126], "clean": [182, 184], "click": 177, "clock": 131, "clone": 177, "close": [36, 47, 49, 51, 53, 55, 89, 133, 135, 182], "cmdline": 177, "cnc": 172, "code": [36, 47, 49, 51, 53, 55, 66, 129, 131, 153, 176, 177], "columns_head": 163, "com": [38, 51, 53, 98, 100, 108, 116, 118, 122, 124, 177], "come": 182, "command": [47, 49, 51, 53, 55, 129, 177], "common": 182, "commun": [49, 51, 53, 176, 182], "compat": [153, 155], "complet": [144, 153, 155, 158], "compon": [170, 172, 182], "comprehens": 170, "compress": 131, "comput": 177, "condit": [25, 47, 49, 51, 53, 55, 66, 144, 153, 155, 158, 175], "condition1": [25, 47, 49, 51, 53, 55, 66], "condition_channel": [144, 153, 155, 158], "condition_numb": [144, 153, 155, 158], "config": 177, "configur": [47, 49, 51, 53, 55, 131, 175, 176], "connect": [36, 47, 49, 51, 53, 55, 58, 68, 84, 89, 131, 173, 182], "connector": 173, "consid": 182, "consum": [47, 49, 51, 53, 55], "contain": [20, 144, 153, 155, 158], "content": [94, 96, 98, 100, 116, 118, 122, 126, 133, 135, 177], "control": [133, 135, 173], "convers": 177, "copi": 177, "correct": 182, "correctli": 182, "correspond": [112, 114, 120], "corridor": [173, 175, 182, 184], "corridor_set": 21, "could": 176, "count": [144, 153, 155, 158], "counter": [144, 153, 155, 158], "counter_numb": [144, 153, 155, 158], "countri": 177, "cover": 173, "cpu": 177, "cqrobot": 177, "creat": [47, 49, 51, 53, 55, 120, 176], "credenti": 177, "cross": 182, "current": [36, 47, 49, 51, 53, 55, 68, 133, 135, 141, 158, 177], "current_st": 158, "current_tri": 141, "d": 177, "dai": [175, 182], "data": [47, 49, 51, 53, 55, 89, 131, 144, 153, 155, 158, 177], "data_avail": [47, 51, 53, 55], "date": 165, "dateutil": 177, "decod": [133, 135], "default": [20, 133, 135, 176], "defin": [51, 53, 59, 129, 131], "delet": 182, "deliv": 182, "deliveri": 184, "describ": 176, "descript": [10, 20, 21, 47, 49, 51, 53, 55, 68, 144, 153, 155, 158, 182], "descriptor": [133, 135], "design": 175, "desktop": [47, 49, 51, 53, 55], "detach": [133, 135], "detail": [173, 176, 179], "detect": [173, 177, 182], "determin": [133, 135], "dev": [47, 49, 51, 53, 55, 182], "devic": [51, 53, 68, 129, 131, 176, 177, 182], "dfrobot": [38, 177], "dfrobot_hx711_i2c": 38, "dict": [120, 144, 153, 155, 158], "dictionari": [120, 144, 153, 155, 158], "differ": [21, 182], "digit": 131, "direct": 176, "directli": [47, 49, 51, 53, 55, 170], "directory_set": 21, "disabl": 177, "disconnect": [131, 173, 182], "discov": 177, "displai": [177, 182], "dmesg": 177, "do": 182, "doc": 176, "docstr": 176, "doe": [133, 135, 170], "doesn": 182, "don": 173, "done": 184, "door": [173, 182], "down": [177, 182], "download": [170, 177], "drop": 184, "drunk": 182, "dtoverlai": 177, "due": 182, "durabl": 173, "durat": [144, 153, 155, 158], "dure": [173, 182], "dust": 182, "duti": 184, "e": [47, 49, 51, 53, 55, 58, 131, 175, 177, 182], "each": [133, 135, 153, 173, 177], "easier": 182, "echo": 131, "echo_softcod": 131, "ecohab": 182, "edit": [176, 177], "effect": [133, 135], "either": [170, 175], "electron": [170, 172, 176, 182], "email": 182, "empti": [133, 135, 177], "enabl": [47, 49, 51, 53, 55, 131, 177], "enable_port": [129, 131], "enable_ports_ok": 129, "enable_uart": 177, "enclosur": 173, "encod": [133, 135], "end": [112, 114, 131, 133, 135, 182], "end_tim": 108, "end_timestamp": 112, "english": 177, "enhanc": [153, 155], "enough": 184, "enrich": 184, "ensur": [153, 173, 182], "enter": [144, 153, 155, 158], "entir": [133, 135, 173], "entri": [106, 175], "enum": [11, 20, 21], "env": 176, "environ": 176, "eof": [133, 135], "equal": [133, 135], "equival": [47, 49, 51, 53, 55, 131], "error": [126, 133, 135, 182], "escap": [173, 182], "etc": [47, 51, 53, 55, 96, 176, 177], "ethernet": 177, "even": 153, "event": [47, 49, 51, 53, 55, 60, 66, 102, 104, 110, 120, 129, 131, 144, 153, 155, 158, 182], "event_id": [102, 104, 110], "event_idx": 60, "event_nam": [25, 47, 49, 51, 53, 55, 64, 66, 102, 104, 110, 120], "eventnam": [25, 47, 49, 51, 53, 55], "eventoccurr": 120, "events_nam": 84, "events_occurr": 120, "everi": [47, 49, 51, 53, 55, 184], "everyth": 182, "ex": [144, 153, 155, 158], "exampl": [47, 49, 51, 53, 55, 120, 144, 153, 155, 158, 176], "exce": [133, 135, 144, 153, 155, 158], "except": [24, 28, 29, 32, 75, 77, 78, 80, 137, 151, 152, 154, 156, 157, 159], "execut": [47, 49, 51, 53, 55, 131, 144, 153, 155, 158], "exist": [133, 135, 144, 153, 155, 158], "exit": [131, 144, 153, 155, 158, 173, 182], "exit_and_return": 131, "expect": 182, "experi": [49, 96], "experiment": [176, 183], "explor": 182, "export": [47, 49, 51, 53, 55], "extend": [155, 158], "extens": [25, 47, 49, 51, 53, 55, 66], "extern": 177, "extra_set": 21, "extrus": 172, "f": 131, "factori": 20, "factory_valu": 20, "fail": 182, "failur": 182, "fals": [84, 133, 135, 182], "fan": 177, "far": [133, 135], "faster": 177, "feel": [173, 177], "few": 182, "fewer": 182, "fi": 177, "file": [47, 49, 51, 53, 55, 106, 133, 135, 173, 176, 177], "fileno": [133, 135], "filestream": [162, 163], "final": [47, 49, 51, 53, 55], "find": [47, 51, 53, 55, 176, 182], "find_module_by_nam": [47, 49, 51, 53, 55], "finit": 153, "firmwar": [47, 49, 51, 53, 55, 58, 59, 66, 71, 74, 131, 177], "firmware_vers": [84, 131], "first": [129, 131, 144, 153, 155, 158, 176], "fit": 173, "fix": [182, 184], "flip": [47, 49, 51, 53, 55], "float": [20, 102, 104, 110, 120, 144, 153, 155, 158], "floor": 182, "flush": [133, 135], "folder": [47, 49, 51, 53, 55, 176, 177], "follow": [144, 153, 155, 158, 173, 176, 177, 182], "food": 184, "force_hotplug": 177, "format": 177, "foundat": 173, "frame": [173, 182], "free": [173, 177], "freez": 182, "frequenc": 182, "frequent": 182, "from": [47, 49, 51, 53, 55, 68, 76, 79, 94, 98, 100, 102, 104, 108, 110, 116, 122, 124, 129, 133, 135, 144, 153, 155, 158, 173, 177, 182], "fromlist": [94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126], "full": [170, 177], "func": 177, "func2": 177, "function": [34, 38, 41, 47, 49, 51, 53, 55, 164, 176, 182, 184], "further": [133, 135], "fvc4": 177, "g": [47, 49, 51, 53, 55, 58, 131, 175, 182], "gener": [60, 176, 177], "get": [21, 120, 131, 141, 176, 177, 182], "get_all_timestamps_by_ev": 120, "get_descript": 21, "get_event_nam": 60, "get_events_nam": 120, "get_index": 21, "get_indic": 21, "get_modul": 131, "get_text": 21, "get_timestamp_transmiss": 131, "get_timestamps_by_event_nam": 120, "get_typ": 21, "get_valu": 21, "getting_start": 176, "getvalu": [133, 135], "ghost": 182, "git": 177, "github": [38, 177], "given": [2, 3, 4, 5, 6, 7, 8, 9, 11, 144, 153, 155, 158], "global": [144, 153, 155, 158], "global_count": 153, "global_tim": 153, "globalcount": 153, "globalcounter1end": [25, 47, 49, 51, 53, 55, 66], "globalcounter_end": [25, 47, 49, 51, 53, 55, 66], "globalcounterreset": [26, 47, 49, 51, 53, 55, 74], "globaltim": 153, "globaltimer1cancel": [26, 47, 49, 51, 53, 55, 74], "globaltimer1end": [25, 47, 49, 51, 53, 55, 66], "globaltimer1start": [25, 47, 49, 51, 53, 55, 66], "globaltimer1trig": [26, 47, 49, 51, 53, 55, 74], "globaltimer_end": [25, 47, 49, 51, 53, 55, 66], "globaltimer_start": [25, 47, 49, 51, 53, 55, 66], "globaltimercancel": [26, 47, 49, 51, 53, 55, 74], "globaltimertrig": [26, 47, 49, 51, 53, 55, 74], "go": [177, 182], "group": [21, 177], "gui": [168, 176, 182], "guidanc": 173, "h": 131, "h1": 176, "h2": 176, "h3": 176, "ha": [133, 135, 177, 182], "handl": [47, 49, 51, 53, 55, 144, 153, 155, 158, 173], "handler": [47, 49, 51, 53, 55], "handshak": [47, 49, 51, 53, 55, 129, 131], "handshake_ok": 129, "happen": 182, "hardwar": [47, 49, 51, 53, 55, 60, 131, 144, 153, 155, 158, 176, 179], "hardware_descript": 131, "hardwareinfocontain": 68, "harm": 182, "have": [94, 133, 135, 153, 177, 182], "hdmi": 177, "header": [129, 131, 176], "health": 182, "heartbeat": 182, "heavier": 173, "help": [170, 182], "here": [153, 155, 173, 176, 177], "high": 182, "hint": [133, 135], "histori": 106, "hit": [133, 135], "hold": [153, 158], "host_timestamp": [94, 96, 98, 100, 102, 104, 110, 112, 114, 116, 118, 122, 124, 126], "hour": 182, "how": [173, 182], "http": [38, 177], "hw_info_contain": 68, "hw_output": 60, "hx711": 177, "hygien": 184, "i": [20, 21, 47, 49, 51, 53, 55, 59, 89, 129, 131, 133, 135, 153, 155, 158, 173, 176, 177, 182, 184], "i2c": 176, "i2cdetect": 177, "id": [47, 49, 51, 53, 55, 84, 96, 177], "idx": 36, "ignor": 182, "immedi": [133, 135], "implement": [133, 135], "improv": 182, "includ": [141, 176, 177, 184], "index": [21, 102, 104, 110], "indic": [133, 135, 182], "ineffici": 153, "infonam": 108, "inform": [68, 96, 141, 184], "infovalu": 108, "infrar": 173, "initi": [47, 49, 51, 53, 55, 131], "inlin": 170, "inner": 182, "input": [47, 49, 51, 53, 55, 59, 60, 66, 71, 131, 144, 153, 155, 158], "input_matrix": 153, "insert": 177, "insid": [173, 175, 182, 184], "inspir": 38, "instal": [172, 176], "instanc": [144, 153, 155, 158], "instead": 177, "instruct": [172, 173, 176, 177], "int": [20, 21, 47, 49, 51, 53, 55, 84, 102, 104, 110, 144, 153, 155, 158], "integ": [144, 153, 155, 158], "integr": 175, "interact": [49, 133, 135], "interfac": [89, 177], "interfer": 182, "intern": [144, 153, 155, 158], "internet": [177, 182], "intersess": 182, "io": [133, 135], "ip": 177, "ir": [173, 182], "is_condit": [25, 47, 49, 51, 53, 55, 64, 66], "is_global_counter_end": [25, 47, 49, 51, 53, 55, 64, 66], "is_global_timer_cancel": [25, 47, 49, 51, 53, 55, 64, 66], "is_global_timer_end": [25, 47, 49, 51, 53, 55, 64, 66], "is_global_timer_start": [25, 47, 49, 51, 53, 55, 64, 66], "is_global_timer_trigg": [25, 47, 49, 51, 53, 55, 64, 66], "is_run": [153, 158], "is_state_tim": [25, 47, 49, 51, 53, 55, 64, 66], "isatti": [133, 135], "issu": 182, "item": 177, "its": [20, 182], "itself": 182, "ivar": 153, "j": 131, "jitteri": 177, "john": [47, 49, 51, 53, 55], "jump": 177, "just": 182, "k": 131, "keep": [153, 155, 173], "kei": [20, 21, 120, 144, 153, 155, 158], "kept": [153, 155], "kernel": 177, "keyboard": 177, "kill": 36, "know": [177, 182], "kwd": [2, 3, 4, 5, 6, 7, 8, 9, 11], "l": [131, 182], "languag": 177, "last": 182, "launch": 176, "learn": 182, "led": [47, 49, 51, 53, 55, 58], "legaci": [144, 153, 155, 158], "length": [133, 135], "less": [153, 177, 182], "level": 176, "libportaudio2": 177, "libqt5multimedia5": 177, "librari": [153, 155, 177], "lid": 173, "like": [47, 51, 53, 55, 96, 153, 155, 176, 177, 182], "line": [96, 106, 133, 135, 177, 182], "link": [144, 153, 155, 158, 177], "list": [20, 21, 47, 49, 51, 53, 55, 84, 106, 112, 114, 120, 133, 135, 141, 144, 153, 155, 158, 172, 176], "listen": [144, 153, 155, 158], "lite": 177, "live": 175, "ll": 173, "load": [47, 49, 51, 53, 55, 84, 131], "load_cont": 106, "load_messag": 84, "load_serial_messag": [47, 49, 51, 53, 55, 129, 131], "load_serial_message_ok": 129, "log": 177, "logic": [47, 49, 51, 53, 55, 155, 158], "login": 177, "long": 182, "loop": [47, 49, 51, 53, 55, 177], "loop_handl": [47, 49, 51, 53, 55], "loop_interv": [144, 153, 155, 158], "loop_mod": [144, 153, 155, 158], "lose": 182, "lost": 182, "lot": [153, 155, 182], "lower": [173, 176], "m": [131, 177], "machin": [47, 49, 51, 53, 55, 112, 114, 144, 153, 155, 158, 172], "mai": 94, "main": [60, 177, 184], "main_set": 21, "maintain": 184, "mainten": [173, 176, 183], "make": [173, 182], "manag": [177, 184], "mani": 182, "manifest": 153, "manual": [47, 51, 53, 55, 131, 170, 173, 182, 184], "manual_overrid": [47, 51, 53, 55], "manual_override_exec_ev": 131, "mask": [182, 184], "matlab": [153, 155], "matrix": [131, 144, 153, 155, 158], "max_stat": [146, 148, 150], "maxdepth": 176, "md": [176, 177], "mean": 182, "mechan": 173, "mention": 173, "messag": [28, 32, 47, 49, 51, 53, 55, 84, 94, 98, 100, 102, 104, 106, 108, 110, 116, 118, 122, 124, 126, 129, 131, 144, 155, 158], "message_api": 49, "message_id": [47, 49, 51, 53, 55], "messageapi": 49, "meta_output_nam": 153, "meth": 106, "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 30, 31, 35, 36, 39, 42, 47, 49, 51, 53, 55, 58, 59, 60, 61, 64, 66, 68, 71, 74, 76, 79, 84, 86, 89, 90, 91, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 141, 142, 144, 146, 148, 150, 153, 155, 158, 162, 163, 168], "mice": [173, 182, 184], "micro": 177, "microcontrol": 173, "microsecond": 153, "might": 182, "mind": [153, 155], "minut": 182, "misalign": 182, "misplac": 182, "mm": 173, "mode": [47, 49, 51, 53, 55, 131], "model": [47, 49, 51, 53, 55, 106], "modifi": [176, 177], "modul": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 33, 44, 45, 46, 47, 49, 51, 53, 55, 56, 60, 62, 68, 69, 72, 82, 84, 87, 92, 127, 129, 131, 136, 143, 160, 166, 176], "module_event_nam": 129, "module_nam": 84, "module_requested_ev": 129, "monitor": [144, 153, 155, 158, 173, 175, 177], "month": 184, "more": [133, 135, 182], "most": [133, 135], "motor": [173, 182], "motor_set": 21, "mount": 173, "mous": [170, 173, 176, 177, 182], "move": 182, "movement": 182, "msg": [84, 133, 135], "msg_id": 84, "multimedia": 176, "must": [58, 59, 66, 71, 74, 133, 135, 144, 153, 155, 158, 177], "mv": [176, 184], "my_bpod": [47, 49, 51, 53, 55], "n_condit": 146, "n_global_count": 148, "n_global_tim": 150, "n_serial_ev": 84, "name": [2, 3, 4, 5, 6, 7, 8, 9, 11, 20, 23, 47, 49, 51, 53, 55, 58, 60, 91, 96, 102, 104, 110, 112, 114, 120, 129, 131, 144, 153, 155, 158, 177], "nano": 177, "narr": 176, "navig": 177, "necessari": [177, 184], "need": [173, 176, 182, 184], "neg": [133, 135], "net_port": 49, "network": [177, 182], "never": [177, 182], "new": [47, 49, 51, 53, 55, 131, 133, 135, 176, 177, 182], "new_sma_s": 49, "new_state_matrix": 131, "newbot": 177, "newlin": [133, 135], "night": 175, "non": [133, 135], "none": [2, 3, 4, 5, 6, 7, 8, 9, 11, 21, 23, 36, 47, 49, 51, 53, 55, 84, 94, 96, 98, 100, 102, 104, 108, 110, 116, 118, 120, 122, 124, 126, 133, 135, 141, 144, 153, 155, 158, 163], "notif": 175, "novel": 182, "now": 131, "number": [47, 49, 51, 53, 55, 131, 133, 135, 144, 153, 155, 158, 177, 182], "o": [55, 131, 176], "object": [13, 14, 15, 16, 17, 18, 20, 21, 23, 27, 30, 31, 36, 47, 49, 51, 53, 55, 58, 59, 60, 61, 64, 68, 71, 74, 76, 79, 84, 86, 89, 90, 91, 94, 106, 129, 131, 133, 135, 141, 142, 146, 148, 150, 153, 162, 163], "obtain": [68, 177], "occur": [144, 153, 155, 158, 182], "occurr": [112, 114, 120], "off": 182, "off_messag": [144, 153, 155, 158], "offset": [133, 135], "often": 182, "omit": [133, 135], "on_messag": [144, 153, 155, 158], "on_set_delai": [144, 153, 155, 158], "onc": [182, 184], "one": [47, 49, 51, 53, 55, 131, 133, 135, 144, 153, 155, 158, 175], "ones": 175, "oneset_trigg": [144, 153, 155, 158], "onli": [133, 135, 182], "opcod": [47, 49, 51, 53, 55], "open": [36, 47, 49, 51, 53, 55, 89, 177, 182], "opencv": 177, "oper": [133, 135, 176], "option": [47, 49, 51, 53, 55], "order": 182, "orient": 173, "origin": [94, 153, 155, 173], "oserror": [133, 135], "other": [173, 177], "otherwis": [47, 49, 51, 53, 55], "out": [47, 51, 53, 55], "output": [47, 49, 51, 53, 55, 59, 60, 74, 144, 153, 155, 158], "output_act": [144, 153, 155, 158], "output_matrix": 153, "outputchannel": [26, 47, 49, 51, 53, 55], "overdetect": 182, "overlap": 182, "overrid": [47, 49, 51, 53, 55, 131, 133, 135], "override_digital_hw_st": 131, "overview": [176, 179], "own": 175, "pa1_port1in": [25, 47, 49, 51, 53, 55, 66], "packag": [176, 177], "page": [170, 176], "panel": 177, "param": [47, 49, 51, 53, 55, 89, 144, 153, 155, 158], "paramet": [25, 47, 49, 51, 53, 55, 60, 64, 66, 68, 84, 102, 104, 106, 110, 112, 114, 120, 124, 144, 153, 155, 158], "pars": 106, "part": [170, 172, 176], "particip": 177, "particular": 20, "password": 177, "path": [47, 49, 51, 53, 55, 141], "pc": [94, 182], "pdf": 170, "perform": [51, 53, 175, 182], "persist": 182, "person": 182, "phone": 177, "photog": 182, "pi": 176, "piezoelectr": 173, "pin": 176, "pin2": 177, "pip": 177, "pitch": 182, "plai": 182, "pleas": 170, "plot": 182, "plug": 182, "plugin": 177, "po": [133, 135], "poorli": 182, "port": [25, 36, 47, 49, 51, 53, 55, 66, 71, 131, 144, 153, 155, 158, 177, 182], "port1": [25, 47, 49, 51, 53, 55, 66, 71], "port1in": [25, 47, 49, 51, 53, 55, 66], "port1lit": [144, 153, 155, 158], "port1out": 120, "port2": 71, "port2in": 120, "port2out": 120, "port3": 71, "port3in": 120, "port3lit": [144, 153, 155, 158], "port3out": 120, "port4": 71, "port5": 71, "port6": 71, "port7": 71, "port8": 71, "posit": [133, 135, 144, 153, 155, 158, 173], "possibl": 21, "power": [173, 177, 182], "precis": 153, "prefer": 177, "preinstal": 177, "prevent": 173, "previous": [144, 153, 155, 158], "print": [118, 170, 172], "privat": [51, 53], "problem": [182, 184], "process": [47, 49, 51, 53, 55, 76, 79, 98, 100, 108, 116, 122, 124], "program": 153, "progress": 184, "proper": 184, "properli": 184, "properti": 141, "protocol": [47, 49, 51, 53, 55, 118, 175], "provid": [133, 135, 170, 173, 184], "pulseaudio": 177, "pump": [173, 182], "purchas": 173, "push": 173, "put": 177, "pwm": [47, 49, 51, 53, 55, 58, 177], "pwm1": [144, 153, 155, 158], "pwm2": [144, 153, 155, 158], "py": [106, 124, 177], "pybpodapi": [47, 49, 51, 53, 55, 153, 155, 176], "pybpodgui_plugin": [98, 100, 106, 108, 116, 118, 122, 124], "pybpodprotocol": [35, 37], "pyqt5": 176, "python": [89, 153, 155, 177], "python3": 177, "qtmultimedia": 177, "qualiti": 173, "qualnam": [2, 3, 4, 5, 6, 7, 8, 9, 11], "qwidget": 168, "r": 131, "rais": [133, 135], "rang": [144, 153, 155, 158], "rare": 182, "raspberri": 176, "raspberrypi": 177, "reach": [133, 135], "read": [76, 79, 133, 135], "readabl": [133, 135], "reader": 173, "readi": 177, "readlin": [133, 135], "real": [175, 177], "receiv": [47, 51, 53, 55, 68, 129, 175, 177], "recommend": 182, "reconnect": 182, "record": 182, "reduc": 153, "referenc": [144, 153, 155, 158], "refil": 182, "regard": 175, "regist": [47, 49, 51, 53, 55], "regular": 182, "rel": [133, 135], "relai": 131, "releas": [47, 49, 51, 53, 55], "reliabl": 173, "reload": 182, "remot": [175, 176, 182], "remov": [177, 182, 184], "render": 176, "repeat": 153, "repetit": 120, "replac": [144, 155, 158, 182], "repo": 177, "report": [182, 184], "repres": [49, 68, 94, 96, 98, 100, 102, 104, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126], "represent": [20, 21], "request": [51, 53, 129, 131], "requir": 184, "reset": [47, 49, 51, 53, 55, 131], "reset_clock": 131, "reset_serial_messag": [47, 49, 51, 53, 55, 129, 131], "resolut": 177, "resolv": 182, "respons": 182, "restart": 182, "result": 176, "retriev": [47, 49, 51, 53, 55, 133, 135], "return": [21, 25, 36, 37, 40, 43, 47, 49, 51, 53, 55, 60, 64, 66, 89, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 131, 133, 135, 141, 144, 153, 155, 158, 182], "review": [182, 184], "reward": 173, "rfid": [173, 182], "right": 177, "rigid": 173, "rise": 182, "rodent": 175, "room": 182, "routin": 184, "row": [94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126], "rst": 176, "rtype": [47, 49, 51, 53, 55], "rule": 176, "run": [47, 49, 51, 53, 55, 131, 141, 153, 158, 177, 182], "run_asap": [47, 49, 51, 53, 55], "run_state_machin": [47, 49, 51, 53, 55, 129, 131], "same": [176, 177, 182], "save": 106, "scale": [177, 182], "scaleprotocol": [39, 40], "scheme": 131, "scipi": 177, "sck": 76, "score": 182, "screen": [176, 182], "screen_set": 21, "screenshot": 182, "script": 182, "sd": 177, "search": [47, 49, 51, 53, 55, 177], "second": [144, 153, 155, 158, 177, 182], "section": [173, 176, 184], "see": [144, 153, 155, 158, 177, 182], "seealso": 124, "seek": [133, 135], "seekabl": [133, 135], "select": 177, "send": [36, 47, 49, 51, 53, 55, 84, 131, 144, 155, 158, 177, 182], "send_ev": [144, 153, 155, 158], "send_state_machin": [47, 49, 51, 53, 55], "send_to_hw_seri": 131, "sensor": [173, 177], "sent": 131, "separ": [133, 135], "sergi": 182, "serial": [26, 47, 49, 51, 53, 55, 58, 74, 89, 131, 182], "serial1": [26, 47, 49, 51, 53, 55, 71, 74], "serial1_3": 71, "serial1_4": 71, "serial2": 71, "serial3": 71, "serial_channel": [47, 49, 51, 53, 55], "serial_messag": [47, 49, 51, 53, 55], "serial_port": [47, 49, 51, 53, 55, 84, 89], "serialportnam": 89, "server": [98, 100, 108, 116, 122, 124, 177], "servo": 176, "session": [36, 47, 49, 51, 53, 55, 94, 106, 131, 133, 135, 182], "session_io": 106, "session_nam": [47, 49, 51, 53, 55], "sessionio": 106, "set": [47, 49, 51, 53, 55, 58, 59, 66, 68, 71, 74, 131, 133, 135, 144, 153, 155, 158, 176, 182], "set_condit": [144, 153, 155, 158], "set_global_count": [144, 153, 155, 158], "set_global_tim": [144, 153, 155, 158], "set_global_timer_legaci": [144, 153, 155, 158], "set_module_relai": 131, "setup": [68, 173, 176, 183], "setup_input_channel": 60, "setup_output_channel": 60, "setuptools_scm": 177, "share": 177, "should": [47, 49, 51, 53, 55, 133, 135, 144, 153, 155, 158, 176, 177, 182], "sht31": 177, "sick": 182, "simplifi": 89, "site": 177, "size": [91, 133, 135], "sleep": 182, "slightli": 182, "slot": 173, "sma": [47, 49, 51, 53, 55, 120, 144, 153, 155, 158], "so": [133, 135, 153, 155, 182], "soft": [47, 49, 51, 53, 55, 131], "softcod": [26, 47, 49, 51, 53, 55, 74, 110, 182], "softcode1": [26, 47, 49, 51, 53, 55, 74], "softcode_handler_funct": [47, 49, 51, 53, 55], "softwar": [172, 176, 179], "some": 182, "someth": [177, 182, 184], "sometim": 182, "sort": 173, "sound": [176, 182], "sound_set": 21, "sounddevic": 177, "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 39, 40, 42, 43, 47, 49, 51, 53, 55, 58, 59, 60, 61, 64, 66, 68, 71, 74, 76, 77, 79, 80, 84, 86, 89, 90, 91, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 131, 133, 135, 138, 141, 142, 144, 146, 148, 150, 152, 153, 155, 156, 158, 159, 162, 163, 165, 168, 173, 176, 177], "specif": [58, 59, 66, 71, 74, 112, 114, 184], "specifi": [133, 135], "sporad": 182, "stabil": 173, "stage": 182, "start": [2, 3, 4, 5, 6, 7, 8, 9, 11, 47, 49, 51, 53, 55, 112, 114, 133, 135, 144, 153, 155, 158, 176, 177, 182], "start_tim": 108, "state": [47, 49, 51, 53, 55, 102, 104, 110, 112, 114, 120, 131, 133, 135, 144, 153, 155, 158], "state_change_condit": [144, 153, 155, 158], "state_machin": [47, 49, 51, 53, 55], "state_machine_installation_statu": 129, "state_nam": [112, 114, 144, 153, 155, 158], "state_tim": [144, 153, 155, 158], "state_timer_matrix": 153, "statedur": [112, 114], "statemachin": [47, 49, 51, 53, 55, 120], "statemachinebas": 155, "statemachinebuild": 158, "statemachinerunn": 144, "statement": 118, "stateoccurr": 120, "states_occurr": 120, "static": [25, 47, 49, 51, 53, 55, 64, 66], "statu": [175, 182], "stderr": [76, 79, 98, 100, 108, 116, 122, 124], "stdout": [76, 79], "step": 177, "still": [144, 153, 155, 158, 182], "stl": 173, "stop": [47, 49, 51, 53, 55, 173, 182], "store": [112, 114, 141], "str": [20, 21, 25, 47, 49, 51, 53, 55, 64, 66, 102, 104, 106, 110, 112, 114, 120, 144, 153, 155, 158], "stream": [76, 79, 133, 135, 142], "string": [20, 21, 133, 135, 144, 153, 155, 158], "stringio": [133, 135], "structur": [153, 155, 173], "stuck": 182, "sub": 176, "subclass": [133, 135], "subject": 182, "subscrib": 177, "success": 129, "sucros": 184, "sudo": 177, "summari": 182, "superenum": [2, 3, 4, 5, 6, 7, 8, 9, 10], "supplement": 182, "suppli": [173, 177, 182], "supplier": 173, "support": [47, 49, 51, 53, 55, 58, 170, 173], "sure": [173, 177, 182], "suspect": [182, 184], "symbol": 177, "symlink": 177, "sync": [47, 49, 51, 53, 55, 131, 144, 153, 155, 158], "sync_channel": [47, 49, 51, 53, 55], "sync_channel_mod": [129, 131], "sync_channel_mode_ok": 129, "sync_mod": [47, 49, 51, 53, 55], "synchron": [47, 49, 51, 53, 55, 144, 153, 155, 158], "system": [21, 170, 173, 175, 176, 184], "t": [131, 133, 135, 153, 173, 182], "tab": 177, "tag": 182, "take": [144, 153, 155, 158], "target_ev": [144, 153, 155, 158], "task": [96, 175, 182], "team": 177, "technic": [176, 179], "telegram": [175, 176, 184], "telegram_chat": 177, "telegram_set": 21, "telegram_token": 177, "tell": [133, 135], "temperatur": [177, 182], "tempsensorprotocol": [42, 43], "tend": 182, "termin": [177, 182], "test": [47, 49, 51, 53, 55, 182], "text": [133, 135, 177], "textio": [133, 135], "textiobas": [133, 135], "than": [47, 49, 51, 53, 55, 153, 177, 182], "thei": [21, 144, 155, 158, 173, 182], "them": [173, 177, 182], "thi": [47, 49, 51, 53, 55, 102, 104, 110, 112, 114, 133, 135, 144, 153, 155, 158, 170, 176, 182, 184], "thing": 96, "think": 177, "threshold": [144, 153, 155, 158, 182], "through": [47, 49, 51, 53, 55, 84, 175], "time": [144, 153, 155, 158, 175, 176, 182], "timeout": 89, "timer": [144, 153, 155, 158], "timer_dur": [144, 153, 155, 158], "timer_id": [144, 153, 155, 158], "timestamp": [47, 49, 51, 53, 55, 102, 104, 110, 112, 114, 120, 131], "titl": 176, "toctre": 176, "todo": 153, "tool": 177, "toolbar": 177, "top": 182, "total": [133, 135], "total_states_ad": 153, "touch": [177, 182], "touchscreen": 182, "touchscreen_set": 21, "train": [175, 182, 184], "transact": 89, "transit": [144, 153, 155, 158], "transmiss": [131, 182], "transpar": 173, "trap": 182, "trial": [47, 49, 51, 53, 55, 141, 153, 182], "trial_start_timestamp": 120, "trigger": [131, 144, 153, 155, 158, 182], "trigger_softcod": 131, "true": [94, 96, 98, 100, 102, 104, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 133, 135, 177, 182], "truncat": [133, 135], "try": 182, "tty": [47, 49, 51, 53, 55], "ttyacm": 177, "tube": 172, "tunnel": 173, "tup": [25, 47, 49, 51, 53, 55, 66], "tupl": [144, 153, 155, 158], "turn": 182, "two": [175, 182, 184], "txt": 177, "txtline": 106, "type": [2, 3, 4, 5, 6, 7, 8, 9, 11, 20, 21, 25, 36, 37, 40, 43, 47, 49, 51, 53, 55, 59, 64, 66, 106, 120, 131, 141, 144, 155, 158, 177], "typestr": [94, 96, 98, 100, 102, 104, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126], "u": 131, "uart": 176, "udev": 176, "udevadm": 177, "unchang": [133, 135], "undeclar": [144, 153, 155, 158], "underli": [133, 135], "unexpectedli": 182, "uniqu": [47, 49, 51, 53, 55, 144, 153, 155, 158], "unless": [173, 182], "unlik": [144, 153, 155, 158], "unplug": 182, "unrel": 182, "until": [133, 135, 144, 153, 155, 158], "unus": [133, 135], "up": [68, 173], "updat": [47, 49, 51, 53, 55, 176], "update_state_numb": [144, 155, 158], "upgrad": 177, "upload": 49, "upper": 173, "us": [47, 49, 51, 53, 55, 84, 133, 135, 144, 153, 155, 158, 170, 173, 175, 176], "usag": [176, 177], "usb": [177, 182], "usb1": 71, "usbmodem1293": [47, 49, 51, 53, 55], "user": [47, 49, 51, 53, 55, 175, 177], "username_to_id_bot": 177, "usual": [76, 79, 133, 135, 177, 182], "v": [131, 177], "valid": [144, 153, 155, 158], "valu": [2, 3, 4, 5, 6, 7, 8, 9, 11, 20, 21, 47, 51, 53, 55, 58, 59, 66, 71, 74, 120, 124, 144, 153, 155, 158], "value_nam": 124, "value_typ": 20, "valueerror": [133, 135], "valv": [26, 47, 49, 51, 53, 55, 58, 74, 182], "variabl": [49, 102, 104, 110, 112, 114, 120, 153, 158], "variou": 173, "vc4": 177, "ventil": 182, "venv": 177, "veri": 182, "verifi": 182, "version": [47, 49, 51, 53, 55, 144, 153, 155, 158], "via": [144, 153, 155, 158, 182], "video": [177, 182], "view": 170, "viewer": 177, "villag": [170, 173], "virtual": [131, 153], "wa": [49, 182], "wait": 182, "walk": 182, "want": 177, "water": [173, 182, 184], "wayland": 177, "we": [170, 177], "web": 177, "webpag": 177, "websit": 177, "week": 184, "weigh": 182, "weight": [177, 182], "welcom": [153, 155], "well": 182, "were": [144, 155, 158], "what": [173, 176, 182], "when": [20, 21, 47, 49, 51, 53, 55, 144, 153, 155, 158, 173, 177, 182, 184], "whenc": [133, 135], "where": [144, 153, 155, 158, 173, 182], "whether": [49, 133, 135, 153, 158], "which": [133, 135, 153, 155, 176], "while": [47, 49, 51, 53, 55, 158], "white": 173, "whole": [153, 155], "whose": [120, 144, 153, 155, 158], "why": 182, "wi": 177, "window": 177, "wire": [25, 26, 47, 49, 51, 53, 55, 58, 66, 74], "wire1": [26, 47, 49, 51, 53, 55, 71, 74], "wire1high": [25, 26, 47, 49, 51, 53, 55, 66, 74], "wire2": 71, "within": 176, "without": [120, 173], "won": 153, "work": [182, 184], "workspace_path": [47, 49, 51, 53, 55], "writabl": [133, 135], "write": [47, 51, 53, 55, 131, 133, 135, 177], "write_to_modul": 131, "writelin": [133, 135], "written": [133, 135], "wrong": 182, "www": 177, "x": [131, 177, 182], "x11": 177, "y": 177, "ye": [177, 182], "yet": 153, "you": [144, 153, 155, 158, 170, 173, 176, 182, 184], "your": [153, 170, 176, 177], "z": 131, "zero": [144, 153, 155, 158], "zone": 182, "\u00b5l": 182}, "titles": ["classes", "enums", "Actions", "Active", "AreaActive", "Color", "Cycle", "DataTable", "Info", "ScreenActive", "State", "SuperEnum", "protocols", "CameraProtocol", "EventProtocol", "PyBpodProtocol", "ScaleProtocol", "TelegramBotProtocol", "TempSensorProtocol", "settings_class", "Setting", "Settings", "subject", "Subject", "task", "Event", "Output", "Task", "village.classes.task.TaskError", "training", "Settings", "Training", "village.classes.training.TrainingError", "devices", "bpod", "PyBpod", "Softcode", "get_bpod", "scale", "Scale", "get_scale", "temp_sensor", "TempSensor", "get_temp_sensor", "gui", "pybpodapi", "bpod", "Bpod", "bpod_base", "BpodBase", "bpod_com_protocol", "BpodCOMProtocol", "bpod_com_protocol_modules", "BpodCOMProtocolModules", "bpod_io", "BpodIO", "hardware", "channels", "ChannelName", "ChannelType", "Channels", "EventsPositions", "events", "base_eventname", "BaseEventName", "bpod_events", "EventName", "hardware", "Hardware", "input_channels", "bpod_input_channels", "InputName", "output_channels", "bpod_output_channels", "OutputChannel", "non_blockingsocketreceive", "NonBlockingSocketReceive", "village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream", "non_blockingstreamreader", "NonBlockingStreamReader", "village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream", "settings", "bpod_modules", "bpod_module", "BpodModule", "bpod_modules", "BpodModules", "com", "arcom", "ArCOM", "ArduinoTypes", "DataType", "messaging", "base_message", "BaseMessage", "debug", "DebugMessage", "end_trial", "EndTrial", "error", "ErrorMessage", "event_occurrence", "EventOccurrence", "event_resume", "EventResume", "parser", "MessageParser", "session_info", "SessionInfo", "softcode_occurrence", "SoftcodeOccurrence", "state_occurrence", "StateOccurrence", "state_transition", "StateTransition", "stderr", "StderrMessage", "stdout", "StdoutMessage", "trial", "Trial", "untagged_message", "UntaggedMessage", "value", "ValueMessage", "warning", "WarningMessage", "protocol", "recv_msg_headers", "ReceiveMessageHeader", "send_msg_headers", "SendMessageHeader", "stderr_buffer", "StderrBuffer", "stdout_buffer", "StdoutBuffer", "exceptions", "bpod_error", "village.pybpodapi.exceptions.bpod_error.BpodErrorException", "protocol", "session", "Session", "StreamsWrapper", "state_machine", "StateMachine", "conditions", "Conditions", "global_counters", "GlobalCounters", "global_timers", "GlobalTimers", "state_machine_base", "village.pybpodapi.state_machine.state_machine_base.SMAError", "StateMachineBase", "state_machine_builder", "StateMachineBuilder", "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError", "state_machine_runner", "StateMachineRunner", "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError", "utils", "csv", "Reader", "Writer", "date_parser", "parse", "screen", "behaviour_window", "BehaviourWindow", "API", "Assembly instructions", "Electronic Instructions", "Assembly of the Mouse Village", "List of parts", "Software installation", "What is the Mouse Village", "Welcome to village\u2019s documentation!", "Install MV Raspberry", "Hardware Technical Details", "Operation of the Mouse Village", "Software overview", "Results", "Alarms", "Usage", "Maintenance", "Experimental setup"], "titleterms": {"": 176, "1": 177, "2": 177, "3d": 173, "If": 177, "access": 177, "action": 2, "activ": 3, "alarm": [177, 182], "aluminium": 173, "an": 177, "api": 169, "ar": 177, "arcom": [88, 89], "arduinotyp": 90, "areaact": 4, "assembli": [170, 172], "base_eventnam": 63, "base_messag": 93, "baseeventnam": 64, "basemessag": 94, "behaviour_window": 167, "behaviourwindow": 168, "biweekli": 184, "bot": 177, "bpod": [34, 46, 47, 77, 80], "bpod_bas": 48, "bpod_com_protocol": 50, "bpod_com_protocol_modul": 52, "bpod_error": [137, 138], "bpod_ev": 65, "bpod_input_channel": 70, "bpod_io": 54, "bpod_modul": [82, 83, 85], "bpod_output_channel": 73, "bpodbas": 49, "bpodcomprotocol": 51, "bpodcomprotocolmodul": 53, "bpoderrorexcept": 138, "bpodio": 55, "bpodmodul": [84, 86], "cameraprotocol": 13, "channel": [57, 60], "channelnam": 58, "channeltyp": 59, "check": 177, "class": [0, 28, 32, 169], "cnc": 173, "color": 5, "com": 87, "commun": 177, "compon": 173, "condit": [145, 146], "configur": 177, "connect": 177, "content": 176, "creat": 177, "csv": 161, "cycl": 6, "daili": 184, "datat": 7, "datatyp": 91, "date_pars": 164, "debug": 95, "debugmessag": 96, "detail": 178, "devic": [33, 169], "document": 176, "electron": [171, 173], "end_trial": 97, "endtrial": 98, "enum": 1, "env": 177, "environ": 177, "error": 99, "errormessag": 100, "event": [25, 62], "event_occurr": 101, "event_resum": 103, "eventnam": 66, "eventoccurr": 102, "eventprotocol": 14, "eventresum": 104, "eventsposit": 61, "except": [136, 138], "exist": 177, "experiment": 185, "extrus": 173, "first": 177, "get_bpod": 37, "get_scal": 40, "get_temp_sensor": 43, "global_count": 147, "global_tim": 149, "globalcount": 148, "globaltim": 150, "gui": [44, 169], "hardwar": [56, 67, 68, 177, 178], "i": 175, "i2c": 177, "index": 176, "info": 8, "input_channel": 69, "inputnam": 71, "instal": [174, 177], "instruct": [170, 171], "interrog": 182, "launch": 177, "list": 173, "machin": 173, "mainten": 184, "make": 177, "messag": 92, "messagepars": 106, "monthli": 184, "mous": [172, 175, 179], "multimedia": 177, "mv": [172, 177, 179], "need": 177, "non_blockingsocketrec": [75, 77], "non_blockingstreamread": [78, 80], "nonblockingsocketrec": 76, "nonblockingstreamread": 79, "o": 177, "occasion": 184, "one": 177, "onli": 177, "oper": 179, "option": 177, "output": 26, "output_channel": 72, "outputchannel": 74, "overview": 180, "pars": 165, "parser": 105, "part": 173, "pi": 177, "pin": 177, "print": 173, "protocol": [12, 127, 139], "pybpod": 35, "pybpodapi": [45, 77, 80, 138, 152, 156, 159, 169], "pybpodprotocol": 15, "pyqt5": 177, "raspberri": 177, "raspi": 177, "reader": 162, "realvnc": 177, "receivemessagehead": 129, "recv_msg_head": 128, "remot": 177, "result": 181, "rule": 177, "scale": [38, 39], "scaleprotocol": 16, "screen": [166, 169, 177], "screenact": 9, "search": 176, "send_msg_head": 130, "sendmessagehead": 131, "servo": 177, "session": [140, 141], "session_info": 107, "sessioninfo": 108, "set": [20, 21, 30, 81, 177], "settings_class": 19, "setup": 185, "slow": 177, "smaerror": 152, "softcod": 36, "softcode_occurr": 109, "softcodeoccurr": 110, "softwar": [174, 177, 180], "sound": 177, "state": 10, "state_machin": [143, 152, 156, 159], "state_machine_bas": [151, 152], "state_machine_build": [154, 156], "state_machine_runn": [157, 159], "state_occurr": 111, "state_transit": 113, "statemachin": 144, "statemachinebas": 153, "statemachinebuild": 155, "statemachinebuildererror": 156, "statemachinerunn": 158, "statemachinerunnererror": 159, "stateoccurr": 112, "statetransit": 114, "stderr": 115, "stderr_buff": 132, "stderrbuff": 133, "stderrmessag": 116, "stdout": 117, "stdout_buff": 134, "stdoutbuff": 135, "stdoutmessag": 118, "streamswrapp": 142, "subject": [22, 23], "superenum": 11, "system": [177, 182], "task": [24, 27, 28], "taskerror": 28, "technic": 178, "telegram": 177, "telegrambotprotocol": 17, "temp_sensor": 41, "tempsensor": 42, "tempsensorprotocol": 18, "thi": 177, "thing": 177, "time": 177, "token": 177, "train": [29, 31, 32], "trainingerror": 32, "trial": [119, 120], "trigger": 177, "tube": 173, "uart": 177, "udev": 177, "unexpectedendofstream": [77, 80], "untagged_messag": 121, "untaggedmessag": 122, "updat": 177, "us": 177, "usag": 183, "util": 160, "valu": 123, "valuemessag": 124, "veri": 177, "villag": [28, 32, 77, 80, 138, 152, 156, 159, 172, 175, 176, 177, 179], "warn": 125, "warningmessag": 126, "weekli": 184, "welcom": 176, "what": [175, 177], "writer": 163, "you": 177}})