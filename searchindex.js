Search.setIndex({"alltitles": {"3D Printing Files": [[198, null]], "3D-Printed Parts": [[185, "d-printed-parts"]], "API": [[179, null]], "Accessing Pins via Hardware (for Servos) and Using UART Pin for Communication": [[186, "accessing-pins-via-hardware-for-servos-and-using-uart-pin-for-communication"]], "Actions": [[4, null]], "Active": [[5, null]], "Alarms": [[203, "alarms"]], "Aluminium Extrusions and Tubes": [[185, "aluminium-extrusions-and-tubes"]], "Animal Procedures": [[204, null]], "ArCOM": [[93, null]], "ArduinoTypes": [[94, null]], "AreaActive": [[6, null]], "Assembly Instructions": [[184, null]], "BaseEventName": [[68, null]], "BaseMessage": [[98, null]], "Behavioral Box": [[185, "behavioral-box"]], "BehaviourWindow": [[174, null]], "Biweekly": [[209, "biweekly"]], "Bpod": [[51, null]], "Bpod + Ports": [[185, "bpod-ports"]], "BpodBase": [[53, null]], "BpodCOMProtocol": [[55, null]], "BpodCOMProtocolModules": [[57, null]], "BpodIO": [[59, null]], "BpodModule": [[88, null]], "BpodModules": [[90, null]], "Build-It-Yourself": [[182, null], [183, "build-it-yourself"]], "CNC Machined Parts": [[185, "cnc-machined-parts"]], "Cable organizer": [[198, "cable-organizer"]], "Calibrate and Test Animal Detection": [[208, null]], "Calibrate and Test Corridor Components": [[205, null]], "Camera Mount": [[198, "camera-mount"]], "CameraProtocol": [[15, null]], "Changing Preferences": [[186, "changing-preferences"]], "ChannelName": [[62, null]], "ChannelType": [[63, null]], "Channels": [[64, null]], "Check the token of an existing bot": [[193, "check-the-token-of-an-existing-bot"]], "Classes": [[179, "classes"]], "Code": [[206, "code"]], "Code Repository": [[197, null]], "Collection": [[2, null]], "Color": [[7, null]], "Conditions": [[150, null]], "Configure Remote Access": [[192, null]], "Configure Settings": [[211, null]], "Connectors for tubes and cages": [[198, "connectors-for-tubes-and-cages"]], "Corridor Files": [[198, "corridor-files"]], "Create New Subjects": [[213, null]], "Create Real-Time Plots": [[210, null]], "Create a New Training Protocol": [[206, null]], "Create a Telegram Bot": [[193, null]], "Create an Alias and Run the Training Village": [[186, "create-an-alias-and-run-the-training-village"]], "Creating a Python Environment and Installing pip Libraries": [[186, "creating-a-python-environment-and-installing-pip-libraries"]], "Cycle": [[8, null]], "DATA": [[202, "data"]], "Daily": [[209, "daily"]], "DataTable": [[9, null]], "DataType": [[95, null]], "DebugMessage": [[100, null]], "Detection in the Corridor": [[208, "detection-in-the-corridor"]], "Devices": [[179, "devices"]], "Door System": [[198, "door-system"]], "Electronics": [[185, "electronics"]], "EndTrial": [[102, null]], "ErrorMessage": [[104, null]], "Event": [[27, null]], "EventName": [[70, null]], "EventOccurrence": [[106, null]], "EventProtocol": [[16, null]], "EventResume": [[108, null]], "EventsPositions": [[65, null]], "Example": [[178, null]], "FAQ": [[181, null]], "GUI Overview": [[202, null]], "Getting Started": [[183, null]], "GlobalCounters": [[152, null]], "GlobalTimers": [[154, null]], "Gui": [[179, "gui"]], "Hardware": [[72, null]], "Hardware Connections": [[190, null]], "Homecages": [[185, "homecages"]], "How Does It Work?": [[188, "how-does-it-work"], [195, null]], "How to Build It": [[187, null]], "I2C Communication": [[186, "i2c-communication"]], "Info": [[10, null]], "Initial Configuration": [[194, null]], "InputName": [[75, null]], "Install Training Village": [[186, "install-training-village"]], "Installing Needed Libraries": [[186, "installing-needed-libraries"]], "Interrogate the system": [[203, "interrogate-the-system"]], "Launch Raspberry Pi OS for the First Time": [[186, "launch-raspberry-pi-os-for-the-first-time"]], "List of Parts": [[185, null]], "Log": [[48, null]], "MAIN": [[202, "main"]], "MONITOR": [[202, "monitor"]], "Maintenance": [[209, null]], "Make the bot triggers the alarms": [[193, "make-the-bot-triggers-the-alarms"]], "MessageParser": [[110, null]], "Monthly": [[209, "monthly"]], "NonBlockingSocketReceive": [[80, null]], "NonBlockingStreamReader": [[83, null]], "Occasionally": [[209, "occasionally"]], "Open Source": [[188, "open-source"], [195, "open-source"]], "Other": [[179, "other"]], "Output": [[28, null]], "OutputChannel": [[78, null]], "PyBpod": [[37, null]], "PyBpodProtocol": [[17, null]], "Pybpodapi": [[179, "pybpodapi"]], "RFID": [[185, "rfid"]], "RTPlots": [[171, null]], "Raspberry + Cams": [[185, "raspberry-cams"]], "Reader": [[166, null]], "Receive and respond to Telegram Alarms": [[203, null]], "ReceiveMessageHeader": [[133, null]], "Resources": [[199, null]], "SETTINGS": [[202, "settings"]], "Saved Data": [[207, null]], "Scale": [[41, null]], "ScaleProtocol": [[18, null]], "Schedule Backups": [[189, null]], "Screen": [[185, "screen"]], "Screen Settings": [[186, "screen-settings"]], "ScreenActive": [[11, null]], "Send Heartbeat Signals to a Remote Device": [[191, null]], "SendMessageHeader": [[135, null]], "Session": [[145, null]], "SessionInfo": [[112, null]], "Setting": [[22, null]], "Settings": [[23, null], [32, null]], "Softcode": [[38, null]], "SoftcodeOccurrence": [[114, null]], "Software Installation": [[186, null]], "Sound": [[185, "sound"]], "State": [[12, null]], "StateMachine": [[148, null]], "StateMachineBase": [[157, null]], "StateMachineBuilder": [[159, null]], "StateMachineRunner": [[162, null]], "StateOccurrence": [[116, null]], "StateTransition": [[118, null]], "StderrBuffer": [[137, null]], "StderrMessage": [[120, null]], "StdoutBuffer": [[139, null]], "StdoutMessage": [[122, null]], "StreamsWrapper": [[146, null]], "Subject": [[25, null]], "SuperEnum": [[13, null]], "System ISO Image": [[196, null]], "System State Machine": [[212, null]], "System usage": [[188, "system-usage"], [195, "system-usage"]], "TASKS": [[202, "tasks"]], "Task": [[29, null]], "Tasks": [[206, "tasks"]], "TelegramBotProtocol": [[19, null]], "TempSensor": [[44, null]], "TempSensorProtocol": [[20, null]], "Temperature or Weight Sensor Connection Error": [[200, null], [201, "temperature-or-weight-sensor-connection-error"]], "Test a Training Protocol": [[214, null]], "The Behavioral Box": [[188, "the-behavioral-box"], [195, "the-behavioral-box"]], "The Controller": [[188, "the-controller"], [195, "the-controller"]], "The Corridor": [[188, "the-corridor"], [195, "the-corridor"]], "TimeUtils": [[176, null]], "Training": [[33, null]], "Training Village HAT": [[185, "training-village-hat"]], "Trial": [[124, null]], "Troubleshooting": [[201, null]], "Udev Rules for Consistent USB Device Naming": [[186, "udev-rules-for-consistent-usb-device-naming"]], "UntaggedMessage": [[126, null]], "Updating the System": [[186, "updating-the-system"]], "Use an Existing Training Protocol": [[215, null]], "User Guide": [[216, null]], "ValueMessage": [[128, null]], "WarningMessage": [[130, null]], "Weekly": [[209, "weekly"]], "What Is The Training Village?": [[188, null]], "What You Need": [[186, "what-you-need"]], "Writer": [[167, null]], "arcom": [[92, null]], "base_eventname": [[67, null]], "base_message": [[97, null]], "behaviour_window": [[173, null]], "bpod": [[36, null], [50, null]], "bpod_base": [[52, null]], "bpod_com_protocol": [[54, null]], "bpod_com_protocol_modules": [[56, null]], "bpod_error": [[141, null]], "bpod_events": [[69, null]], "bpod_input_channels": [[74, null]], "bpod_io": [[58, null]], "bpod_module": [[87, null]], "bpod_modules": [[86, null], [89, null]], "bpod_output_channels": [[77, null]], "channels": [[61, null]], "classes": [[0, null]], "collection": [[1, null]], "com": [[91, null]], "conditions": [[149, null]], "csv": [[165, null]], "date_parser": [[168, null]], "debug": [[99, null]], "devices": [[35, null]], "end_trial": [[101, null]], "enums": [[3, null]], "error": [[103, null]], "event_occurrence": [[105, null]], "event_resume": [[107, null]], "events": [[66, null]], "exceptions": [[140, null]], "get_bpod": [[39, null]], "get_scale": [[42, null]], "get_temp_sensor": [[45, null]], "global_counters": [[151, null]], "global_timers": [[153, null]], "gui": [[46, null]], "hardware": [[60, null], [71, null]], "input_channels": [[73, null]], "log": [[47, null]], "messaging": [[96, null]], "non_blockingsocketreceive": [[79, null]], "non_blockingstreamreader": [[82, null]], "output_channels": [[76, null]], "parse": [[169, null]], "parser": [[109, null]], "protocol": [[131, null], [143, null]], "protocols": [[14, null]], "pybpodapi": [[49, null]], "recv_msg_headers": [[132, null]], "rt_plots": [[170, null]], "scale": [[40, null]], "screen": [[172, null]], "send_msg_headers": [[134, null]], "session": [[144, null]], "session_info": [[111, null]], "settings": [[85, null]], "settings_class": [[21, null]], "softcode_occurrence": [[113, null]], "state_machine": [[147, null]], "state_machine_base": [[155, null]], "state_machine_builder": [[158, null]], "state_machine_runner": [[161, null]], "state_occurrence": [[115, null]], "state_transition": [[117, null]], "stderr": [[119, null]], "stderr_buffer": [[136, null]], "stdout": [[121, null]], "stdout_buffer": [[138, null]], "subject": [[24, null]], "task": [[26, null]], "temp_sensor": [[43, null]], "time_utils": [[175, null]], "training": [[31, null]], "trial": [[123, null]], "untagged_message": [[125, null]], "utils": [[164, null]], "value": [[127, null]], "video": [[177, null]], "village.classes.task.TaskError": [[30, null]], "village.classes.training.TrainingError": [[34, null]], "village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream": [[81, null]], "village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream": [[84, null]], "village.pybpodapi.exceptions.bpod_error.BpodErrorException": [[142, null]], "village.pybpodapi.state_machine.state_machine_base.SMAError": [[156, null]], "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError": [[160, null]], "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError": [[163, null]], "warning": [[129, null]]}, "docnames": ["api_generated/village.classes", "api_generated/village.classes.collection", "api_generated/village.classes.collection.Collection", "api_generated/village.classes.enums", "api_generated/village.classes.enums.Actions", "api_generated/village.classes.enums.Active", "api_generated/village.classes.enums.AreaActive", "api_generated/village.classes.enums.Color", "api_generated/village.classes.enums.Cycle", "api_generated/village.classes.enums.DataTable", "api_generated/village.classes.enums.Info", "api_generated/village.classes.enums.ScreenActive", "api_generated/village.classes.enums.State", "api_generated/village.classes.enums.SuperEnum", "api_generated/village.classes.protocols", "api_generated/village.classes.protocols.CameraProtocol", "api_generated/village.classes.protocols.EventProtocol", "api_generated/village.classes.protocols.PyBpodProtocol", "api_generated/village.classes.protocols.ScaleProtocol", "api_generated/village.classes.protocols.TelegramBotProtocol", "api_generated/village.classes.protocols.TempSensorProtocol", "api_generated/village.classes.settings_class", "api_generated/village.classes.settings_class.Setting", "api_generated/village.classes.settings_class.Settings", "api_generated/village.classes.subject", "api_generated/village.classes.subject.Subject", "api_generated/village.classes.task", "api_generated/village.classes.task.Event", "api_generated/village.classes.task.Output", "api_generated/village.classes.task.Task", "api_generated/village.classes.task.TaskError", "api_generated/village.classes.training", "api_generated/village.classes.training.Settings", "api_generated/village.classes.training.Training", "api_generated/village.classes.training.TrainingError", "api_generated/village.devices", "api_generated/village.devices.bpod", "api_generated/village.devices.bpod.PyBpod", "api_generated/village.devices.bpod.Softcode", "api_generated/village.devices.bpod.get_bpod", "api_generated/village.devices.scale", "api_generated/village.devices.scale.Scale", "api_generated/village.devices.scale.get_scale", "api_generated/village.devices.temp_sensor", "api_generated/village.devices.temp_sensor.TempSensor", "api_generated/village.devices.temp_sensor.get_temp_sensor", "api_generated/village.gui", "api_generated/village.log", "api_generated/village.log.Log", "api_generated/village.pybpodapi", "api_generated/village.pybpodapi.bpod", "api_generated/village.pybpodapi.bpod.Bpod", "api_generated/village.pybpodapi.bpod.bpod_base", "api_generated/village.pybpodapi.bpod.bpod_base.BpodBase", "api_generated/village.pybpodapi.bpod.bpod_com_protocol", "api_generated/village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules", "api_generated/village.pybpodapi.bpod.bpod_io", "api_generated/village.pybpodapi.bpod.bpod_io.BpodIO", "api_generated/village.pybpodapi.bpod.hardware", "api_generated/village.pybpodapi.bpod.hardware.channels", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelName", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelType", "api_generated/village.pybpodapi.bpod.hardware.channels.Channels", "api_generated/village.pybpodapi.bpod.hardware.channels.EventsPositions", "api_generated/village.pybpodapi.bpod.hardware.events", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events.EventName", "api_generated/village.pybpodapi.bpod.hardware.hardware", "api_generated/village.pybpodapi.bpod.hardware.hardware.Hardware", "api_generated/village.pybpodapi.bpod.hardware.input_channels", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName", "api_generated/village.pybpodapi.bpod.hardware.output_channels", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream", "api_generated/village.pybpodapi.bpod.settings", "api_generated/village.pybpodapi.bpod_modules", "api_generated/village.pybpodapi.bpod_modules.bpod_module", "api_generated/village.pybpodapi.bpod_modules.bpod_module.BpodModule", "api_generated/village.pybpodapi.bpod_modules.bpod_modules", "api_generated/village.pybpodapi.bpod_modules.bpod_modules.BpodModules", "api_generated/village.pybpodapi.com", "api_generated/village.pybpodapi.com.arcom", "api_generated/village.pybpodapi.com.arcom.ArCOM", "api_generated/village.pybpodapi.com.arcom.ArduinoTypes", "api_generated/village.pybpodapi.com.arcom.DataType", "api_generated/village.pybpodapi.com.messaging", "api_generated/village.pybpodapi.com.messaging.base_message", "api_generated/village.pybpodapi.com.messaging.base_message.BaseMessage", "api_generated/village.pybpodapi.com.messaging.debug", "api_generated/village.pybpodapi.com.messaging.debug.DebugMessage", "api_generated/village.pybpodapi.com.messaging.end_trial", "api_generated/village.pybpodapi.com.messaging.end_trial.EndTrial", "api_generated/village.pybpodapi.com.messaging.error", "api_generated/village.pybpodapi.com.messaging.error.ErrorMessage", "api_generated/village.pybpodapi.com.messaging.event_occurrence", "api_generated/village.pybpodapi.com.messaging.event_occurrence.EventOccurrence", "api_generated/village.pybpodapi.com.messaging.event_resume", "api_generated/village.pybpodapi.com.messaging.event_resume.EventResume", "api_generated/village.pybpodapi.com.messaging.parser", "api_generated/village.pybpodapi.com.messaging.parser.MessageParser", "api_generated/village.pybpodapi.com.messaging.session_info", "api_generated/village.pybpodapi.com.messaging.session_info.SessionInfo", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence", "api_generated/village.pybpodapi.com.messaging.state_occurrence", "api_generated/village.pybpodapi.com.messaging.state_occurrence.StateOccurrence", "api_generated/village.pybpodapi.com.messaging.state_transition", "api_generated/village.pybpodapi.com.messaging.state_transition.StateTransition", "api_generated/village.pybpodapi.com.messaging.stderr", "api_generated/village.pybpodapi.com.messaging.stderr.StderrMessage", "api_generated/village.pybpodapi.com.messaging.stdout", "api_generated/village.pybpodapi.com.messaging.stdout.StdoutMessage", "api_generated/village.pybpodapi.com.messaging.trial", "api_generated/village.pybpodapi.com.messaging.trial.Trial", "api_generated/village.pybpodapi.com.messaging.untagged_message", "api_generated/village.pybpodapi.com.messaging.untagged_message.UntaggedMessage", "api_generated/village.pybpodapi.com.messaging.value", "api_generated/village.pybpodapi.com.messaging.value.ValueMessage", "api_generated/village.pybpodapi.com.messaging.warning", "api_generated/village.pybpodapi.com.messaging.warning.WarningMessage", "api_generated/village.pybpodapi.com.protocol", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader", "api_generated/village.pybpodapi.com.protocol.send_msg_headers", "api_generated/village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader", "api_generated/village.pybpodapi.com.stderr_buffer", "api_generated/village.pybpodapi.com.stderr_buffer.StderrBuffer", "api_generated/village.pybpodapi.com.stdout_buffer", "api_generated/village.pybpodapi.com.stdout_buffer.StdoutBuffer", "api_generated/village.pybpodapi.exceptions", "api_generated/village.pybpodapi.exceptions.bpod_error", "api_generated/village.pybpodapi.exceptions.bpod_error.BpodErrorException", "api_generated/village.pybpodapi.protocol", "api_generated/village.pybpodapi.session", "api_generated/village.pybpodapi.session.Session", "api_generated/village.pybpodapi.session.StreamsWrapper", "api_generated/village.pybpodapi.state_machine", "api_generated/village.pybpodapi.state_machine.StateMachine", "api_generated/village.pybpodapi.state_machine.conditions", "api_generated/village.pybpodapi.state_machine.conditions.Conditions", "api_generated/village.pybpodapi.state_machine.global_counters", "api_generated/village.pybpodapi.state_machine.global_counters.GlobalCounters", "api_generated/village.pybpodapi.state_machine.global_timers", "api_generated/village.pybpodapi.state_machine.global_timers.GlobalTimers", "api_generated/village.pybpodapi.state_machine.state_machine_base", "api_generated/village.pybpodapi.state_machine.state_machine_base.SMAError", "api_generated/village.pybpodapi.state_machine.state_machine_base.StateMachineBase", "api_generated/village.pybpodapi.state_machine.state_machine_builder", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError", "api_generated/village.pybpodapi.state_machine.state_machine_runner", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError", "api_generated/village.pybpodapi.utils", "api_generated/village.pybpodapi.utils.csv", "api_generated/village.pybpodapi.utils.csv.Reader", "api_generated/village.pybpodapi.utils.csv.Writer", "api_generated/village.pybpodapi.utils.date_parser", "api_generated/village.pybpodapi.utils.date_parser.parse", "api_generated/village.rt_plots", "api_generated/village.rt_plots.RTPlots", "api_generated/village.screen", "api_generated/village.screen.behaviour_window", "api_generated/village.screen.behaviour_window.BehaviourWindow", "api_generated/village.time_utils", "api_generated/village.time_utils.TimeUtils", "api_generated/village.video", "api_generated/village.video.Example", "api_index", "faq/faq", "faq_index", "getting_started/started", "getting_started_index", "how_to_build/assembly_instructions", "how_to_build/list_of_parts", "how_to_build/software_installation", "how_to_build_index", "index", "initial_configuration/backup", "initial_configuration/hardware", "initial_configuration/heartbeat", "initial_configuration/remote", "initial_configuration/telegram", "initial_configuration_index", "main/what_is", "resources/ISO", "resources/code", "resources/print_files", "resources_index", "troubleshooting/troubleshooting", "troubleshooting_index", "user_guide/GUI", "user_guide/alarms", "user_guide/animal_procedures", "user_guide/corridor", "user_guide/create", "user_guide/data", "user_guide/detection", "user_guide/maintenance", "user_guide/plots", "user_guide/settings", "user_guide/state_machine", "user_guide/subjects", "user_guide/test", "user_guide/use", "user_guide_index"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api_generated/village.classes.rst", "api_generated/village.classes.collection.rst", "api_generated/village.classes.collection.Collection.rst", "api_generated/village.classes.enums.rst", "api_generated/village.classes.enums.Actions.rst", "api_generated/village.classes.enums.Active.rst", "api_generated/village.classes.enums.AreaActive.rst", "api_generated/village.classes.enums.Color.rst", "api_generated/village.classes.enums.Cycle.rst", "api_generated/village.classes.enums.DataTable.rst", "api_generated/village.classes.enums.Info.rst", "api_generated/village.classes.enums.ScreenActive.rst", "api_generated/village.classes.enums.State.rst", "api_generated/village.classes.enums.SuperEnum.rst", "api_generated/village.classes.protocols.rst", "api_generated/village.classes.protocols.CameraProtocol.rst", "api_generated/village.classes.protocols.EventProtocol.rst", "api_generated/village.classes.protocols.PyBpodProtocol.rst", "api_generated/village.classes.protocols.ScaleProtocol.rst", "api_generated/village.classes.protocols.TelegramBotProtocol.rst", "api_generated/village.classes.protocols.TempSensorProtocol.rst", "api_generated/village.classes.settings_class.rst", "api_generated/village.classes.settings_class.Setting.rst", "api_generated/village.classes.settings_class.Settings.rst", "api_generated/village.classes.subject.rst", "api_generated/village.classes.subject.Subject.rst", "api_generated/village.classes.task.rst", "api_generated/village.classes.task.Event.rst", "api_generated/village.classes.task.Output.rst", "api_generated/village.classes.task.Task.rst", "api_generated/village.classes.task.TaskError.rst", "api_generated/village.classes.training.rst", "api_generated/village.classes.training.Settings.rst", "api_generated/village.classes.training.Training.rst", "api_generated/village.classes.training.TrainingError.rst", "api_generated/village.devices.rst", "api_generated/village.devices.bpod.rst", "api_generated/village.devices.bpod.PyBpod.rst", "api_generated/village.devices.bpod.Softcode.rst", "api_generated/village.devices.bpod.get_bpod.rst", "api_generated/village.devices.scale.rst", "api_generated/village.devices.scale.Scale.rst", "api_generated/village.devices.scale.get_scale.rst", "api_generated/village.devices.temp_sensor.rst", "api_generated/village.devices.temp_sensor.TempSensor.rst", "api_generated/village.devices.temp_sensor.get_temp_sensor.rst", "api_generated/village.gui.rst", "api_generated/village.log.rst", "api_generated/village.log.Log.rst", "api_generated/village.pybpodapi.rst", "api_generated/village.pybpodapi.bpod.rst", "api_generated/village.pybpodapi.bpod.Bpod.rst", "api_generated/village.pybpodapi.bpod.bpod_base.rst", "api_generated/village.pybpodapi.bpod.bpod_base.BpodBase.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules.rst", "api_generated/village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.rst", "api_generated/village.pybpodapi.bpod.bpod_io.rst", "api_generated/village.pybpodapi.bpod.bpod_io.BpodIO.rst", "api_generated/village.pybpodapi.bpod.hardware.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelName.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.ChannelType.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.Channels.rst", "api_generated/village.pybpodapi.bpod.hardware.channels.EventsPositions.rst", "api_generated/village.pybpodapi.bpod.hardware.events.rst", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname.rst", "api_generated/village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.rst", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events.rst", "api_generated/village.pybpodapi.bpod.hardware.events.bpod_events.EventName.rst", "api_generated/village.pybpodapi.bpod.hardware.hardware.rst", "api_generated/village.pybpodapi.bpod.hardware.hardware.Hardware.rst", "api_generated/village.pybpodapi.bpod.hardware.input_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.rst", "api_generated/village.pybpodapi.bpod.hardware.output_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.rst", "api_generated/village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.rst", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.rst", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive.rst", "api_generated/village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream.rst", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.rst", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader.rst", "api_generated/village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream.rst", "api_generated/village.pybpodapi.bpod.settings.rst", "api_generated/village.pybpodapi.bpod_modules.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_module.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_module.BpodModule.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_modules.rst", "api_generated/village.pybpodapi.bpod_modules.bpod_modules.BpodModules.rst", "api_generated/village.pybpodapi.com.rst", "api_generated/village.pybpodapi.com.arcom.rst", "api_generated/village.pybpodapi.com.arcom.ArCOM.rst", "api_generated/village.pybpodapi.com.arcom.ArduinoTypes.rst", "api_generated/village.pybpodapi.com.arcom.DataType.rst", "api_generated/village.pybpodapi.com.messaging.rst", "api_generated/village.pybpodapi.com.messaging.base_message.rst", "api_generated/village.pybpodapi.com.messaging.base_message.BaseMessage.rst", "api_generated/village.pybpodapi.com.messaging.debug.rst", "api_generated/village.pybpodapi.com.messaging.debug.DebugMessage.rst", "api_generated/village.pybpodapi.com.messaging.end_trial.rst", "api_generated/village.pybpodapi.com.messaging.end_trial.EndTrial.rst", "api_generated/village.pybpodapi.com.messaging.error.rst", "api_generated/village.pybpodapi.com.messaging.error.ErrorMessage.rst", "api_generated/village.pybpodapi.com.messaging.event_occurrence.rst", "api_generated/village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.rst", "api_generated/village.pybpodapi.com.messaging.event_resume.rst", "api_generated/village.pybpodapi.com.messaging.event_resume.EventResume.rst", "api_generated/village.pybpodapi.com.messaging.parser.rst", "api_generated/village.pybpodapi.com.messaging.parser.MessageParser.rst", "api_generated/village.pybpodapi.com.messaging.session_info.rst", "api_generated/village.pybpodapi.com.messaging.session_info.SessionInfo.rst", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence.rst", "api_generated/village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.rst", "api_generated/village.pybpodapi.com.messaging.state_occurrence.rst", "api_generated/village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.rst", "api_generated/village.pybpodapi.com.messaging.state_transition.rst", "api_generated/village.pybpodapi.com.messaging.state_transition.StateTransition.rst", "api_generated/village.pybpodapi.com.messaging.stderr.rst", "api_generated/village.pybpodapi.com.messaging.stderr.StderrMessage.rst", "api_generated/village.pybpodapi.com.messaging.stdout.rst", "api_generated/village.pybpodapi.com.messaging.stdout.StdoutMessage.rst", "api_generated/village.pybpodapi.com.messaging.trial.rst", "api_generated/village.pybpodapi.com.messaging.trial.Trial.rst", "api_generated/village.pybpodapi.com.messaging.untagged_message.rst", "api_generated/village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.rst", "api_generated/village.pybpodapi.com.messaging.value.rst", "api_generated/village.pybpodapi.com.messaging.value.ValueMessage.rst", "api_generated/village.pybpodapi.com.messaging.warning.rst", "api_generated/village.pybpodapi.com.messaging.warning.WarningMessage.rst", "api_generated/village.pybpodapi.com.protocol.rst", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers.rst", "api_generated/village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.rst", "api_generated/village.pybpodapi.com.protocol.send_msg_headers.rst", "api_generated/village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.rst", "api_generated/village.pybpodapi.com.stderr_buffer.rst", "api_generated/village.pybpodapi.com.stderr_buffer.StderrBuffer.rst", "api_generated/village.pybpodapi.com.stdout_buffer.rst", "api_generated/village.pybpodapi.com.stdout_buffer.StdoutBuffer.rst", "api_generated/village.pybpodapi.exceptions.rst", "api_generated/village.pybpodapi.exceptions.bpod_error.rst", "api_generated/village.pybpodapi.exceptions.bpod_error.BpodErrorException.rst", "api_generated/village.pybpodapi.protocol.rst", "api_generated/village.pybpodapi.session.rst", "api_generated/village.pybpodapi.session.Session.rst", "api_generated/village.pybpodapi.session.StreamsWrapper.rst", "api_generated/village.pybpodapi.state_machine.rst", "api_generated/village.pybpodapi.state_machine.StateMachine.rst", "api_generated/village.pybpodapi.state_machine.conditions.rst", "api_generated/village.pybpodapi.state_machine.conditions.Conditions.rst", "api_generated/village.pybpodapi.state_machine.global_counters.rst", "api_generated/village.pybpodapi.state_machine.global_counters.GlobalCounters.rst", "api_generated/village.pybpodapi.state_machine.global_timers.rst", "api_generated/village.pybpodapi.state_machine.global_timers.GlobalTimers.rst", "api_generated/village.pybpodapi.state_machine.state_machine_base.rst", "api_generated/village.pybpodapi.state_machine.state_machine_base.SMAError.rst", "api_generated/village.pybpodapi.state_machine.state_machine_base.StateMachineBase.rst", "api_generated/village.pybpodapi.state_machine.state_machine_builder.rst", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.rst", "api_generated/village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError.rst", "api_generated/village.pybpodapi.state_machine.state_machine_runner.rst", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.rst", "api_generated/village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError.rst", "api_generated/village.pybpodapi.utils.rst", "api_generated/village.pybpodapi.utils.csv.rst", "api_generated/village.pybpodapi.utils.csv.Reader.rst", "api_generated/village.pybpodapi.utils.csv.Writer.rst", "api_generated/village.pybpodapi.utils.date_parser.rst", "api_generated/village.pybpodapi.utils.date_parser.parse.rst", "api_generated/village.rt_plots.rst", "api_generated/village.rt_plots.RTPlots.rst", "api_generated/village.screen.rst", "api_generated/village.screen.behaviour_window.rst", "api_generated/village.screen.behaviour_window.BehaviourWindow.rst", "api_generated/village.time_utils.rst", "api_generated/village.time_utils.TimeUtils.rst", "api_generated/village.video.rst", "api_generated/village.video.Example.rst", "api_index.rst", "faq/faq.md", "faq_index.rst", "getting_started/started.md", "getting_started_index.rst", "how_to_build/assembly_instructions.md", "how_to_build/list_of_parts.md", "how_to_build/software_installation.md", "how_to_build_index.rst", "index.rst", "initial_configuration/backup.md", "initial_configuration/hardware.md", "initial_configuration/heartbeat.md", "initial_configuration/remote.md", "initial_configuration/telegram.md", "initial_configuration_index.rst", "main/what_is.md", "resources/ISO.md", "resources/code.md", "resources/print_files.md", "resources_index.rst", "troubleshooting/troubleshooting.md", "troubleshooting_index.rst", "user_guide/GUI.md", "user_guide/alarms.md", "user_guide/animal_procedures.md", "user_guide/corridor.md", "user_guide/create.md", "user_guide/data.md", "user_guide/detection.md", "user_guide/maintenance.md", "user_guide/plots.md", "user_guide/settings.md", "user_guide/state_machine.md", "user_guide/subjects.md", "user_guide/test.md", "user_guide/use.md", "user_guide_index.rst"], "indexentries": {"__init__() (actions method)": [[4, "village.classes.enums.Actions.__init__", false]], "__init__() (active method)": [[5, "village.classes.enums.Active.__init__", false]], "__init__() (arcom method)": [[93, "village.pybpodapi.com.arcom.ArCOM.__init__", false]], "__init__() (arduinotypes method)": [[94, "village.pybpodapi.com.arcom.ArduinoTypes.__init__", false]], "__init__() (areaactive method)": [[6, "village.classes.enums.AreaActive.__init__", false]], "__init__() (baseeventname method)": [[68, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.__init__", false]], "__init__() (basemessage method)": [[98, "village.pybpodapi.com.messaging.base_message.BaseMessage.__init__", false]], "__init__() (behaviourwindow method)": [[174, "village.screen.behaviour_window.BehaviourWindow.__init__", false]], "__init__() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.__init__", false]], "__init__() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.__init__", false]], "__init__() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.__init__", false]], "__init__() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.__init__", false]], "__init__() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.__init__", false]], "__init__() (bpodmodule method)": [[88, "village.pybpodapi.bpod_modules.bpod_module.BpodModule.__init__", false]], "__init__() (bpodmodules method)": [[90, "village.pybpodapi.bpod_modules.bpod_modules.BpodModules.__init__", false]], "__init__() (cameraprotocol method)": [[15, "village.classes.protocols.CameraProtocol.__init__", false]], "__init__() (channelname method)": [[62, "village.pybpodapi.bpod.hardware.channels.ChannelName.__init__", false]], "__init__() (channels method)": [[64, "village.pybpodapi.bpod.hardware.channels.Channels.__init__", false]], "__init__() (channeltype method)": [[63, "village.pybpodapi.bpod.hardware.channels.ChannelType.__init__", false]], "__init__() (collection method)": [[2, "village.classes.collection.Collection.__init__", false]], "__init__() (color method)": [[7, "village.classes.enums.Color.__init__", false]], "__init__() (conditions method)": [[150, "village.pybpodapi.state_machine.conditions.Conditions.__init__", false]], "__init__() (cycle method)": [[8, "village.classes.enums.Cycle.__init__", false]], "__init__() (datatable method)": [[9, "village.classes.enums.DataTable.__init__", false]], "__init__() (datatype method)": [[95, "village.pybpodapi.com.arcom.DataType.__init__", false]], "__init__() (debugmessage method)": [[100, "village.pybpodapi.com.messaging.debug.DebugMessage.__init__", false]], "__init__() (endtrial method)": [[102, "village.pybpodapi.com.messaging.end_trial.EndTrial.__init__", false]], "__init__() (errormessage method)": [[104, "village.pybpodapi.com.messaging.error.ErrorMessage.__init__", false]], "__init__() (event method)": [[27, "village.classes.task.Event.__init__", false]], "__init__() (eventname method)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.__init__", false]], "__init__() (eventoccurrence method)": [[106, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.__init__", false]], "__init__() (eventprotocol method)": [[16, "village.classes.protocols.EventProtocol.__init__", false]], "__init__() (eventresume method)": [[108, "village.pybpodapi.com.messaging.event_resume.EventResume.__init__", false]], "__init__() (eventspositions method)": [[65, "village.pybpodapi.bpod.hardware.channels.EventsPositions.__init__", false]], "__init__() (example method)": [[178, "village.video.Example.__init__", false]], "__init__() (globalcounters method)": [[152, "village.pybpodapi.state_machine.global_counters.GlobalCounters.__init__", false]], "__init__() (globaltimers method)": [[154, "village.pybpodapi.state_machine.global_timers.GlobalTimers.__init__", false]], "__init__() (hardware method)": [[72, "village.pybpodapi.bpod.hardware.hardware.Hardware.__init__", false]], "__init__() (info method)": [[10, "village.classes.enums.Info.__init__", false]], "__init__() (inputname method)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.__init__", false]], "__init__() (log method)": [[48, "village.log.Log.__init__", false]], "__init__() (messageparser method)": [[110, "village.pybpodapi.com.messaging.parser.MessageParser.__init__", false]], "__init__() (nonblockingsocketreceive method)": [[80, "village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive.__init__", false]], "__init__() (nonblockingstreamreader method)": [[83, "village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader.__init__", false]], "__init__() (output method)": [[28, "village.classes.task.Output.__init__", false]], "__init__() (outputchannel method)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.__init__", false]], "__init__() (pybpod method)": [[37, "village.devices.bpod.PyBpod.__init__", false]], "__init__() (pybpodprotocol method)": [[17, "village.classes.protocols.PyBpodProtocol.__init__", false]], "__init__() (reader method)": [[166, "village.pybpodapi.utils.csv.Reader.__init__", false]], "__init__() (receivemessageheader method)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.__init__", false]], "__init__() (rtplots method)": [[171, "village.rt_plots.RTPlots.__init__", false]], "__init__() (scale method)": [[41, "village.devices.scale.Scale.__init__", false]], "__init__() (scaleprotocol method)": [[18, "village.classes.protocols.ScaleProtocol.__init__", false]], "__init__() (screenactive method)": [[11, "village.classes.enums.ScreenActive.__init__", false]], "__init__() (sendmessageheader method)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.__init__", false]], "__init__() (session method)": [[145, "village.pybpodapi.session.Session.__init__", false]], "__init__() (sessioninfo method)": [[112, "village.pybpodapi.com.messaging.session_info.SessionInfo.__init__", false]], "__init__() (setting method)": [[22, "village.classes.settings_class.Setting.__init__", false]], "__init__() (settings method)": [[23, "village.classes.settings_class.Settings.__init__", false], [32, "village.classes.training.Settings.__init__", false]], "__init__() (softcode method)": [[38, "village.devices.bpod.Softcode.__init__", false]], "__init__() (softcodeoccurrence method)": [[114, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.__init__", false]], "__init__() (state method)": [[12, "village.classes.enums.State.__init__", false]], "__init__() (statemachine method)": [[148, "village.pybpodapi.state_machine.StateMachine.__init__", false]], "__init__() (statemachinebase method)": [[157, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.__init__", false]], "__init__() (statemachinebuilder method)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.__init__", false]], "__init__() (statemachinerunner method)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.__init__", false]], "__init__() (stateoccurrence method)": [[116, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.__init__", false]], "__init__() (statetransition method)": [[118, "village.pybpodapi.com.messaging.state_transition.StateTransition.__init__", false]], "__init__() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.__init__", false]], "__init__() (stderrmessage method)": [[120, "village.pybpodapi.com.messaging.stderr.StderrMessage.__init__", false]], "__init__() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.__init__", false]], "__init__() (stdoutmessage method)": [[122, "village.pybpodapi.com.messaging.stdout.StdoutMessage.__init__", false]], "__init__() (streamswrapper method)": [[146, "village.pybpodapi.session.StreamsWrapper.__init__", false]], "__init__() (subject method)": [[25, "village.classes.subject.Subject.__init__", false]], "__init__() (superenum method)": [[13, "village.classes.enums.SuperEnum.__init__", false]], "__init__() (task method)": [[29, "village.classes.task.Task.__init__", false]], "__init__() (telegrambotprotocol method)": [[19, "village.classes.protocols.TelegramBotProtocol.__init__", false]], "__init__() (tempsensor method)": [[44, "village.devices.temp_sensor.TempSensor.__init__", false]], "__init__() (tempsensorprotocol method)": [[20, "village.classes.protocols.TempSensorProtocol.__init__", false]], "__init__() (timeutils method)": [[176, "village.time_utils.TimeUtils.__init__", false]], "__init__() (training method)": [[33, "village.classes.training.Training.__init__", false]], "__init__() (trial method)": [[124, "village.pybpodapi.com.messaging.trial.Trial.__init__", false]], "__init__() (untaggedmessage method)": [[126, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.__init__", false]], "__init__() (valuemessage method)": [[128, "village.pybpodapi.com.messaging.value.ValueMessage.__init__", false]], "__init__() (warningmessage method)": [[130, "village.pybpodapi.com.messaging.warning.WarningMessage.__init__", false]], "__init__() (writer method)": [[167, "village.pybpodapi.utils.csv.Writer.__init__", false]], "actions (class in village.classes.enums)": [[4, "village.classes.enums.Actions", false]], "active (class in village.classes.enums)": [[5, "village.classes.enums.Active", false]], "add_state() (statemachine method)": [[148, "village.pybpodapi.state_machine.StateMachine.add_state", false]], "add_state() (statemachinebase method)": [[157, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.add_state", false]], "add_state() (statemachinebuilder method)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.add_state", false]], "add_state() (statemachinerunner method)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.add_state", false]], "arcom (class in village.pybpodapi.com.arcom)": [[93, "village.pybpodapi.com.arcom.ArCOM", false]], "arduinotypes (class in village.pybpodapi.com.arcom)": [[94, "village.pybpodapi.com.arcom.ArduinoTypes", false]], "areaactive (class in village.classes.enums)": [[6, "village.classes.enums.AreaActive", false]], "baseeventname (class in village.pybpodapi.bpod.hardware.events.base_eventname)": [[68, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName", false]], "basemessage (class in village.pybpodapi.com.messaging.base_message)": [[98, "village.pybpodapi.com.messaging.base_message.BaseMessage", false]], "behaviourwindow (class in village.screen.behaviour_window)": [[174, "village.screen.behaviour_window.BehaviourWindow", false]], "bnc (bpod.channelnames attribute)": [[51, "village.pybpodapi.bpod.Bpod.ChannelNames.BNC", false]], "bnc (bpodbase.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.BNC", false]], "bnc (bpodcomprotocol.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.BNC", false]], "bnc (bpodcomprotocolmodules.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.BNC", false]], "bnc (bpodio.channelnames attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.BNC", false]], "bnc (channelname attribute)": [[62, "village.pybpodapi.bpod.hardware.channels.ChannelName.BNC", false]], "bnc1 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.BNC1", false]], "bnc1high (bpod.events attribute)": [[51, "village.pybpodapi.bpod.Bpod.Events.BNC1High", false]], "bnc1high (bpod.outputchannels attribute)": [[51, "village.pybpodapi.bpod.Bpod.OutputChannels.BNC1High", false]], "bnc1high (bpodbase.events attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.BNC1High", false]], "bnc1high (bpodbase.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.BNC1High", false]], "bnc1high (bpodcomprotocol.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.BNC1High", false]], "bnc1high (bpodcomprotocol.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.BNC1High", false]], "bnc1high (bpodcomprotocolmodules.events attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.BNC1High", false]], "bnc1high (bpodcomprotocolmodules.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.BNC1High", false]], "bnc1high (bpodio.events attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.BNC1High", false]], "bnc1high (bpodio.outputchannels attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.BNC1High", false]], "bnc1high (event attribute)": [[27, "village.classes.task.Event.BNC1High", false]], "bnc1high (eventname attribute)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.BNC1High", false]], "bnc1high (output attribute)": [[28, "village.classes.task.Output.BNC1High", false]], "bnc1high (outputchannel attribute)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.BNC1High", false]], "bnc2 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.BNC2", false]], "bpod (class in village.pybpodapi.bpod)": [[51, "village.pybpodapi.bpod.Bpod", false]], "bpod.channelnames (class in village.pybpodapi.bpod)": [[51, "village.pybpodapi.bpod.Bpod.ChannelNames", false]], "bpod.channeltypes (class in village.pybpodapi.bpod)": [[51, "village.pybpodapi.bpod.Bpod.ChannelTypes", false]], "bpod.events (class in village.pybpodapi.bpod)": [[51, "village.pybpodapi.bpod.Bpod.Events", false]], "bpod.outputchannels (class in village.pybpodapi.bpod)": [[51, "village.pybpodapi.bpod.Bpod.OutputChannels", false]], "bpodbase (class in village.pybpodapi.bpod.bpod_base)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase", false]], "bpodbase.channelnames (class in village.pybpodapi.bpod.bpod_base)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames", false]], "bpodbase.channeltypes (class in village.pybpodapi.bpod.bpod_base)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes", false]], "bpodbase.events (class in village.pybpodapi.bpod.bpod_base)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events", false]], "bpodbase.outputchannels (class in village.pybpodapi.bpod.bpod_base)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels", false]], "bpodcomprotocol (class in village.pybpodapi.bpod.bpod_com_protocol)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol", false]], "bpodcomprotocol.channelnames (class in village.pybpodapi.bpod.bpod_com_protocol)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames", false]], "bpodcomprotocol.channeltypes (class in village.pybpodapi.bpod.bpod_com_protocol)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes", false]], "bpodcomprotocol.events (class in village.pybpodapi.bpod.bpod_com_protocol)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events", false]], "bpodcomprotocol.outputchannels (class in village.pybpodapi.bpod.bpod_com_protocol)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels", false]], "bpodcomprotocolmodules (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules", false]], "bpodcomprotocolmodules.channelnames (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames", false]], "bpodcomprotocolmodules.channeltypes (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes", false]], "bpodcomprotocolmodules.events (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events", false]], "bpodcomprotocolmodules.outputchannels (class in village.pybpodapi.bpod.bpod_com_protocol_modules)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels", false]], "bpoderrorexception": [[142, "village.pybpodapi.exceptions.bpod_error.BpodErrorException", false]], "bpodio (class in village.pybpodapi.bpod.bpod_io)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO", false]], "bpodio.channelnames (class in village.pybpodapi.bpod.bpod_io)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames", false]], "bpodio.channeltypes (class in village.pybpodapi.bpod.bpod_io)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes", false]], "bpodio.events (class in village.pybpodapi.bpod.bpod_io)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events", false]], "bpodio.outputchannels (class in village.pybpodapi.bpod.bpod_io)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels", false]], "bpodmodule (class in village.pybpodapi.bpod_modules.bpod_module)": [[88, "village.pybpodapi.bpod_modules.bpod_module.BpodModule", false]], "bpodmodules (class in village.pybpodapi.bpod_modules.bpod_modules)": [[90, "village.pybpodapi.bpod_modules.bpod_modules.BpodModules", false]], "build_message() (statemachine method)": [[148, "village.pybpodapi.state_machine.StateMachine.build_message", false]], "build_message() (statemachinebuilder method)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.build_message", false]], "build_message() (statemachinerunner method)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.build_message", false]], "build_message_32_bits() (statemachine method)": [[148, "village.pybpodapi.state_machine.StateMachine.build_message_32_bits", false]], "build_message_32_bits() (statemachinebuilder method)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.build_message_32_bits", false]], "build_message_32_bits() (statemachinerunner method)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.build_message_32_bits", false]], "bytes_available() (arcom method)": [[93, "village.pybpodapi.com.arcom.ArCOM.bytes_available", false]], "cameraprotocol (class in village.classes.protocols)": [[15, "village.classes.protocols.CameraProtocol", false]], "channelname (class in village.pybpodapi.bpod.hardware.channels)": [[62, "village.pybpodapi.bpod.hardware.channels.ChannelName", false]], "channels (class in village.pybpodapi.bpod.hardware.channels)": [[64, "village.pybpodapi.bpod.hardware.channels.Channels", false]], "channeltype (class in village.pybpodapi.bpod.hardware.channels)": [[63, "village.pybpodapi.bpod.hardware.channels.ChannelType", false]], "check_type() (basemessage class method)": [[98, "village.pybpodapi.com.messaging.base_message.BaseMessage.check_type", false]], "check_type() (debugmessage class method)": [[100, "village.pybpodapi.com.messaging.debug.DebugMessage.check_type", false]], "check_type() (endtrial class method)": [[102, "village.pybpodapi.com.messaging.end_trial.EndTrial.check_type", false]], "check_type() (errormessage class method)": [[104, "village.pybpodapi.com.messaging.error.ErrorMessage.check_type", false]], "check_type() (eventoccurrence class method)": [[106, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.check_type", false]], "check_type() (eventresume class method)": [[108, "village.pybpodapi.com.messaging.event_resume.EventResume.check_type", false]], "check_type() (sessioninfo class method)": [[112, "village.pybpodapi.com.messaging.session_info.SessionInfo.check_type", false]], "check_type() (softcodeoccurrence class method)": [[114, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.check_type", false]], "check_type() (stateoccurrence class method)": [[116, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.check_type", false]], "check_type() (statetransition class method)": [[118, "village.pybpodapi.com.messaging.state_transition.StateTransition.check_type", false]], "check_type() (stderrmessage class method)": [[120, "village.pybpodapi.com.messaging.stderr.StderrMessage.check_type", false]], "check_type() (stdoutmessage class method)": [[122, "village.pybpodapi.com.messaging.stdout.StdoutMessage.check_type", false]], "check_type() (trial class method)": [[124, "village.pybpodapi.com.messaging.trial.Trial.check_type", false]], "check_type() (untaggedmessage class method)": [[126, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.check_type", false]], "check_type() (valuemessage class method)": [[128, "village.pybpodapi.com.messaging.value.ValueMessage.check_type", false]], "check_type() (warningmessage class method)": [[130, "village.pybpodapi.com.messaging.warning.WarningMessage.check_type", false]], "close() (arcom method)": [[93, "village.pybpodapi.com.arcom.ArCOM.close", false]], "close() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.close", false]], "close() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.close", false]], "close() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.close", false]], "close() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.close", false]], "close() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.close", false]], "close() (softcode method)": [[38, "village.devices.bpod.Softcode.close", false]], "close() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.close", false]], "close() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.close", false]], "collection (class in village.classes.collection)": [[2, "village.classes.collection.Collection", false]], "color (class in village.classes.enums)": [[7, "village.classes.enums.Color", false]], "condition1 (bpod.events attribute)": [[51, "village.pybpodapi.bpod.Bpod.Events.Condition1", false]], "condition1 (bpodbase.events attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Condition1", false]], "condition1 (bpodcomprotocol.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Condition1", false]], "condition1 (bpodcomprotocolmodules.events attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Condition1", false]], "condition1 (bpodio.events attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Condition1", false]], "condition1 (event attribute)": [[27, "village.classes.task.Event.Condition1", false]], "condition1 (eventname attribute)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Condition1", false]], "conditions (class in village.pybpodapi.state_machine.conditions)": [[150, "village.pybpodapi.state_machine.conditions.Conditions", false]], "current_trial (session property)": [[145, "village.pybpodapi.session.Session.current_trial", false]], "cycle (class in village.classes.enums)": [[8, "village.classes.enums.Cycle", false]], "data_available() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.data_available", false]], "data_available() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.data_available", false]], "data_available() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.data_available", false]], "data_available() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.data_available", false]], "datatable (class in village.classes.enums)": [[9, "village.classes.enums.DataTable", false]], "datatype (class in village.pybpodapi.com.arcom)": [[95, "village.pybpodapi.com.arcom.DataType", false]], "debugmessage (class in village.pybpodapi.com.messaging.debug)": [[100, "village.pybpodapi.com.messaging.debug.DebugMessage", false]], "detach() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.detach", false]], "detach() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.detach", false]], "disconnect (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.DISCONNECT", false]], "echo_softcode (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.ECHO_SOFTCODE", false]], "enable_ports (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.ENABLE_PORTS", false]], "enable_ports_ok (receivemessageheader attribute)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.ENABLE_PORTS_OK", false]], "encoding (stderrbuffer attribute)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.encoding", false]], "encoding (stdoutbuffer attribute)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.encoding", false]], "endtrial (class in village.pybpodapi.com.messaging.end_trial)": [[102, "village.pybpodapi.com.messaging.end_trial.EndTrial", false]], "errormessage (class in village.pybpodapi.com.messaging.error)": [[104, "village.pybpodapi.com.messaging.error.ErrorMessage", false]], "errors (stderrbuffer attribute)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.errors", false]], "errors (stdoutbuffer attribute)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.errors", false]], "event (class in village.classes.task)": [[27, "village.classes.task.Event", false]], "eventname (class in village.pybpodapi.bpod.hardware.events.bpod_events)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName", false]], "eventoccurrence (class in village.pybpodapi.com.messaging.event_occurrence)": [[106, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence", false]], "eventprotocol (class in village.classes.protocols)": [[16, "village.classes.protocols.EventProtocol", false]], "eventresume (class in village.pybpodapi.com.messaging.event_resume)": [[108, "village.pybpodapi.com.messaging.event_resume.EventResume", false]], "eventspositions (class in village.pybpodapi.bpod.hardware.channels)": [[65, "village.pybpodapi.bpod.hardware.channels.EventsPositions", false]], "example (class in village.video)": [[178, "village.video.Example", false]], "exit_and_return (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.EXIT_AND_RETURN", false]], "fileno() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.fileno", false]], "fileno() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.fileno", false]], "find_module_by_name() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.find_module_by_name", false]], "find_module_by_name() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.find_module_by_name", false]], "find_module_by_name() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.find_module_by_name", false]], "find_module_by_name() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.find_module_by_name", false]], "find_module_by_name() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.find_module_by_name", false]], "firmware_version (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.FIRMWARE_VERSION", false]], "flush() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.flush", false]], "flush() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.flush", false]], "fromlist() (basemessage class method)": [[98, "village.pybpodapi.com.messaging.base_message.BaseMessage.fromlist", false]], "fromlist() (debugmessage class method)": [[100, "village.pybpodapi.com.messaging.debug.DebugMessage.fromlist", false]], "fromlist() (endtrial class method)": [[102, "village.pybpodapi.com.messaging.end_trial.EndTrial.fromlist", false]], "fromlist() (errormessage class method)": [[104, "village.pybpodapi.com.messaging.error.ErrorMessage.fromlist", false]], "fromlist() (eventoccurrence class method)": [[106, "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence.fromlist", false]], "fromlist() (eventresume class method)": [[108, "village.pybpodapi.com.messaging.event_resume.EventResume.fromlist", false]], "fromlist() (messageparser method)": [[110, "village.pybpodapi.com.messaging.parser.MessageParser.fromlist", false]], "fromlist() (sessioninfo class method)": [[112, "village.pybpodapi.com.messaging.session_info.SessionInfo.fromlist", false]], "fromlist() (softcodeoccurrence class method)": [[114, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence.fromlist", false]], "fromlist() (stateoccurrence class method)": [[116, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence.fromlist", false]], "fromlist() (statetransition class method)": [[118, "village.pybpodapi.com.messaging.state_transition.StateTransition.fromlist", false]], "fromlist() (stderrmessage class method)": [[120, "village.pybpodapi.com.messaging.stderr.StderrMessage.fromlist", false]], "fromlist() (stdoutmessage class method)": [[122, "village.pybpodapi.com.messaging.stdout.StdoutMessage.fromlist", false]], "fromlist() (trial class method)": [[124, "village.pybpodapi.com.messaging.trial.Trial.fromlist", false]], "fromlist() (untaggedmessage class method)": [[126, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage.fromlist", false]], "fromlist() (valuemessage class method)": [[128, "village.pybpodapi.com.messaging.value.ValueMessage.fromlist", false]], "fromlist() (warningmessage class method)": [[130, "village.pybpodapi.com.messaging.warning.WarningMessage.fromlist", false]], "get() (settings method)": [[23, "village.classes.settings_class.Settings.get", false]], "get_all_timestamps_by_event() (trial method)": [[124, "village.pybpodapi.com.messaging.trial.Trial.get_all_timestamps_by_event", false]], "get_bpod() (in module village.devices.bpod)": [[39, "village.devices.bpod.get_bpod", false]], "get_description() (settings method)": [[23, "village.classes.settings_class.Settings.get_description", false]], "get_event_name() (channels method)": [[64, "village.pybpodapi.bpod.hardware.channels.Channels.get_event_name", false]], "get_events_names() (trial method)": [[124, "village.pybpodapi.com.messaging.trial.Trial.get_events_names", false]], "get_index() (settings method)": [[23, "village.classes.settings_class.Settings.get_index", false]], "get_indices() (settings method)": [[23, "village.classes.settings_class.Settings.get_indices", false]], "get_modules (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.GET_MODULES", false]], "get_scale() (in module village.devices.scale)": [[42, "village.devices.scale.get_scale", false]], "get_temp_sensor() (in module village.devices.temp_sensor)": [[45, "village.devices.temp_sensor.get_temp_sensor", false]], "get_text() (settings method)": [[23, "village.classes.settings_class.Settings.get_text", false]], "get_timestamp_transmission (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.GET_TIMESTAMP_TRANSMISSION", false]], "get_timestamps_by_event_name() (trial method)": [[124, "village.pybpodapi.com.messaging.trial.Trial.get_timestamps_by_event_name", false]], "get_type() (settings method)": [[23, "village.classes.settings_class.Settings.get_type", false]], "get_values() (settings method)": [[23, "village.classes.settings_class.Settings.get_values", false]], "getvalue() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.getvalue", false]], "getvalue() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.getvalue", false]], "globalcounter1end (bpod.events attribute)": [[51, "village.pybpodapi.bpod.Bpod.Events.GlobalCounter1End", false]], "globalcounter1end (bpodbase.events attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.GlobalCounter1End", false]], "globalcounter1end (bpodcomprotocol.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.GlobalCounter1End", false]], "globalcounter1end (bpodcomprotocolmodules.events attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.GlobalCounter1End", false]], "globalcounter1end (bpodio.events attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.GlobalCounter1End", false]], "globalcounter1end (event attribute)": [[27, "village.classes.task.Event.GlobalCounter1End", false]], "globalcounter1end (eventname attribute)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.GlobalCounter1End", false]], "globalcounterreset (bpod.outputchannels attribute)": [[51, "village.pybpodapi.bpod.Bpod.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodbase.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodcomprotocol.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodcomprotocolmodules.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (bpodio.outputchannels attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.GlobalCounterReset", false]], "globalcounterreset (output attribute)": [[28, "village.classes.task.Output.GlobalCounterReset", false]], "globalcounterreset (outputchannel attribute)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.GlobalCounterReset", false]], "globalcounters (class in village.pybpodapi.state_machine.global_counters)": [[152, "village.pybpodapi.state_machine.global_counters.GlobalCounters", false]], "globaltimer1cancel (bpod.outputchannels attribute)": [[51, "village.pybpodapi.bpod.Bpod.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodbase.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodcomprotocol.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodcomprotocolmodules.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (bpodio.outputchannels attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.GlobalTimer1Cancel", false]], "globaltimer1cancel (output attribute)": [[28, "village.classes.task.Output.GlobalTimer1Cancel", false]], "globaltimer1cancel (outputchannel attribute)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.GlobalTimer1Cancel", false]], "globaltimer1end (bpod.events attribute)": [[51, "village.pybpodapi.bpod.Bpod.Events.GlobalTimer1End", false]], "globaltimer1end (bpodbase.events attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.GlobalTimer1End", false]], "globaltimer1end (bpodcomprotocol.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.GlobalTimer1End", false]], "globaltimer1end (bpodcomprotocolmodules.events attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.GlobalTimer1End", false]], "globaltimer1end (bpodio.events attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.GlobalTimer1End", false]], "globaltimer1end (event attribute)": [[27, "village.classes.task.Event.GlobalTimer1End", false]], "globaltimer1end (eventname attribute)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.GlobalTimer1End", false]], "globaltimer1start (bpod.events attribute)": [[51, "village.pybpodapi.bpod.Bpod.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodbase.events attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodcomprotocol.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodcomprotocolmodules.events attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.GlobalTimer1Start", false]], "globaltimer1start (bpodio.events attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.GlobalTimer1Start", false]], "globaltimer1start (event attribute)": [[27, "village.classes.task.Event.GlobalTimer1Start", false]], "globaltimer1start (eventname attribute)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.GlobalTimer1Start", false]], "globaltimer1trig (bpod.outputchannels attribute)": [[51, "village.pybpodapi.bpod.Bpod.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodbase.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodcomprotocol.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodcomprotocolmodules.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (bpodio.outputchannels attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.GlobalTimer1Trig", false]], "globaltimer1trig (output attribute)": [[28, "village.classes.task.Output.GlobalTimer1Trig", false]], "globaltimer1trig (outputchannel attribute)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.GlobalTimer1Trig", false]], "globaltimers (class in village.pybpodapi.state_machine.global_timers)": [[154, "village.pybpodapi.state_machine.global_timers.GlobalTimers", false]], "handshake (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.HANDSHAKE", false]], "handshake_ok (receivemessageheader attribute)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.HANDSHAKE_OK", false]], "hardware (class in village.pybpodapi.bpod.hardware.hardware)": [[72, "village.pybpodapi.bpod.hardware.hardware.Hardware", false]], "hardware_description (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.HARDWARE_DESCRIPTION", false]], "info (class in village.classes.enums)": [[10, "village.classes.enums.Info", false]], "input (bpod.channeltypes attribute)": [[51, "village.pybpodapi.bpod.Bpod.ChannelTypes.INPUT", false]], "input (bpodbase.channeltypes attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes.INPUT", false]], "input (bpodcomprotocol.channeltypes attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes.INPUT", false]], "input (bpodcomprotocolmodules.channeltypes attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes.INPUT", false]], "input (bpodio.channeltypes attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes.INPUT", false]], "input (channeltype attribute)": [[63, "village.pybpodapi.bpod.hardware.channels.ChannelType.INPUT", false]], "inputname (class in village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName", false]], "is_condition() (baseeventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_condition", false]], "is_condition() (bpod.events static method)": [[51, "village.pybpodapi.bpod.Bpod.Events.is_condition", false]], "is_condition() (bpodbase.events static method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_condition", false]], "is_condition() (bpodcomprotocol.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_condition", false]], "is_condition() (bpodcomprotocolmodules.events static method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_condition", false]], "is_condition() (bpodio.events static method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_condition", false]], "is_condition() (event static method)": [[27, "village.classes.task.Event.is_condition", false]], "is_condition() (eventname static method)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_condition", false]], "is_global_counter_end() (baseeventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_counter_end", false]], "is_global_counter_end() (bpod.events static method)": [[51, "village.pybpodapi.bpod.Bpod.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodbase.events static method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodcomprotocol.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodcomprotocolmodules.events static method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_counter_end", false]], "is_global_counter_end() (bpodio.events static method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_counter_end", false]], "is_global_counter_end() (event static method)": [[27, "village.classes.task.Event.is_global_counter_end", false]], "is_global_counter_end() (eventname static method)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_counter_end", false]], "is_global_timer_cancel() (baseeventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpod.events static method)": [[51, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodbase.events static method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodcomprotocol.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodcomprotocolmodules.events static method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (bpodio.events static method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_cancel", false]], "is_global_timer_cancel() (event static method)": [[27, "village.classes.task.Event.is_global_timer_cancel", false]], "is_global_timer_cancel() (eventname static method)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_cancel", false]], "is_global_timer_end() (baseeventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_end", false]], "is_global_timer_end() (bpod.events static method)": [[51, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodbase.events static method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodcomprotocol.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodcomprotocolmodules.events static method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_end", false]], "is_global_timer_end() (bpodio.events static method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_end", false]], "is_global_timer_end() (event static method)": [[27, "village.classes.task.Event.is_global_timer_end", false]], "is_global_timer_end() (eventname static method)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_end", false]], "is_global_timer_start() (baseeventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_start", false]], "is_global_timer_start() (bpod.events static method)": [[51, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodbase.events static method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodcomprotocol.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodcomprotocolmodules.events static method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_start", false]], "is_global_timer_start() (bpodio.events static method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_start", false]], "is_global_timer_start() (event static method)": [[27, "village.classes.task.Event.is_global_timer_start", false]], "is_global_timer_start() (eventname static method)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_start", false]], "is_global_timer_trigger() (baseeventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpod.events static method)": [[51, "village.pybpodapi.bpod.Bpod.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodbase.events static method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodcomprotocol.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodcomprotocolmodules.events static method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (bpodio.events static method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_global_timer_trigger", false]], "is_global_timer_trigger() (event static method)": [[27, "village.classes.task.Event.is_global_timer_trigger", false]], "is_global_timer_trigger() (eventname static method)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_global_timer_trigger", false]], "is_state_timer() (baseeventname static method)": [[68, "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName.is_state_timer", false]], "is_state_timer() (bpod.events static method)": [[51, "village.pybpodapi.bpod.Bpod.Events.is_state_timer", false]], "is_state_timer() (bpodbase.events static method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.is_state_timer", false]], "is_state_timer() (bpodcomprotocol.events static method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.is_state_timer", false]], "is_state_timer() (bpodcomprotocolmodules.events static method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.is_state_timer", false]], "is_state_timer() (bpodio.events static method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.is_state_timer", false]], "is_state_timer() (event static method)": [[27, "village.classes.task.Event.is_state_timer", false]], "is_state_timer() (eventname static method)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.is_state_timer", false]], "isatty() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.isatty", false]], "isatty() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.isatty", false]], "kill() (softcode method)": [[38, "village.devices.bpod.Softcode.kill", false]], "load_message() (bpodmodule method)": [[88, "village.pybpodapi.bpod_modules.bpod_module.BpodModule.load_message", false]], "load_serial_message (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.LOAD_SERIAL_MESSAGE", false]], "load_serial_message() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.load_serial_message", false]], "load_serial_message() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.load_serial_message", false]], "load_serial_message() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.load_serial_message", false]], "load_serial_message() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.load_serial_message", false]], "load_serial_message() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.load_serial_message", false]], "load_serial_message_ok (receivemessageheader attribute)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.LOAD_SERIAL_MESSAGE_OK", false]], "log (class in village.log)": [[48, "village.log.Log", false]], "loop_handler() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.loop_handler", false]], "loop_handler() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.loop_handler", false]], "loop_handler() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.loop_handler", false]], "loop_handler() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.loop_handler", false]], "loop_handler() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.loop_handler", false]], "manual_override() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.manual_override", false]], "manual_override() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.manual_override", false]], "manual_override() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.manual_override", false]], "manual_override() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.manual_override", false]], "manual_override_exec_event (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.MANUAL_OVERRIDE_EXEC_EVENT", false]], "messageparser (class in village.pybpodapi.com.messaging.parser)": [[110, "village.pybpodapi.com.messaging.parser.MessageParser", false]], "module": [[0, "module-village.classes", false], [1, "module-village.classes.collection", false], [3, "module-village.classes.enums", false], [14, "module-village.classes.protocols", false], [21, "module-village.classes.settings_class", false], [24, "module-village.classes.subject", false], [26, "module-village.classes.task", false], [31, "module-village.classes.training", false], [35, "module-village.devices", false], [36, "module-village.devices.bpod", false], [40, "module-village.devices.scale", false], [43, "module-village.devices.temp_sensor", false], [46, "module-village.gui", false], [47, "module-village.log", false], [49, "module-village.pybpodapi", false], [50, "module-village.pybpodapi.bpod", false], [52, "module-village.pybpodapi.bpod.bpod_base", false], [54, "module-village.pybpodapi.bpod.bpod_com_protocol", false], [56, "module-village.pybpodapi.bpod.bpod_com_protocol_modules", false], [58, "module-village.pybpodapi.bpod.bpod_io", false], [60, "module-village.pybpodapi.bpod.hardware", false], [61, "module-village.pybpodapi.bpod.hardware.channels", false], [66, "module-village.pybpodapi.bpod.hardware.events", false], [67, "module-village.pybpodapi.bpod.hardware.events.base_eventname", false], [69, "module-village.pybpodapi.bpod.hardware.events.bpod_events", false], [71, "module-village.pybpodapi.bpod.hardware.hardware", false], [73, "module-village.pybpodapi.bpod.hardware.input_channels", false], [74, "module-village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels", false], [76, "module-village.pybpodapi.bpod.hardware.output_channels", false], [77, "module-village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels", false], [79, "module-village.pybpodapi.bpod.non_blockingsocketreceive", false], [82, "module-village.pybpodapi.bpod.non_blockingstreamreader", false], [85, "module-village.pybpodapi.bpod.settings", false], [86, "module-village.pybpodapi.bpod_modules", false], [87, "module-village.pybpodapi.bpod_modules.bpod_module", false], [89, "module-village.pybpodapi.bpod_modules.bpod_modules", false], [91, "module-village.pybpodapi.com", false], [92, "module-village.pybpodapi.com.arcom", false], [96, "module-village.pybpodapi.com.messaging", false], [97, "module-village.pybpodapi.com.messaging.base_message", false], [99, "module-village.pybpodapi.com.messaging.debug", false], [101, "module-village.pybpodapi.com.messaging.end_trial", false], [103, "module-village.pybpodapi.com.messaging.error", false], [105, "module-village.pybpodapi.com.messaging.event_occurrence", false], [107, "module-village.pybpodapi.com.messaging.event_resume", false], [109, "module-village.pybpodapi.com.messaging.parser", false], [111, "module-village.pybpodapi.com.messaging.session_info", false], [113, "module-village.pybpodapi.com.messaging.softcode_occurrence", false], [115, "module-village.pybpodapi.com.messaging.state_occurrence", false], [117, "module-village.pybpodapi.com.messaging.state_transition", false], [119, "module-village.pybpodapi.com.messaging.stderr", false], [121, "module-village.pybpodapi.com.messaging.stdout", false], [123, "module-village.pybpodapi.com.messaging.trial", false], [125, "module-village.pybpodapi.com.messaging.untagged_message", false], [127, "module-village.pybpodapi.com.messaging.value", false], [129, "module-village.pybpodapi.com.messaging.warning", false], [131, "module-village.pybpodapi.com.protocol", false], [132, "module-village.pybpodapi.com.protocol.recv_msg_headers", false], [134, "module-village.pybpodapi.com.protocol.send_msg_headers", false], [136, "module-village.pybpodapi.com.stderr_buffer", false], [138, "module-village.pybpodapi.com.stdout_buffer", false], [140, "module-village.pybpodapi.exceptions", false], [141, "module-village.pybpodapi.exceptions.bpod_error", false], [143, "module-village.pybpodapi.protocol", false], [144, "module-village.pybpodapi.session", false], [147, "module-village.pybpodapi.state_machine", false], [149, "module-village.pybpodapi.state_machine.conditions", false], [151, "module-village.pybpodapi.state_machine.global_counters", false], [153, "module-village.pybpodapi.state_machine.global_timers", false], [155, "module-village.pybpodapi.state_machine.state_machine_base", false], [158, "module-village.pybpodapi.state_machine.state_machine_builder", false], [161, "module-village.pybpodapi.state_machine.state_machine_runner", false], [164, "module-village.pybpodapi.utils", false], [165, "module-village.pybpodapi.utils.csv", false], [168, "module-village.pybpodapi.utils.date_parser", false], [170, "module-village.rt_plots", false], [172, "module-village.screen", false], [173, "module-village.screen.behaviour_window", false], [175, "module-village.time_utils", false], [177, "module-village.video", false]], "module_event_names (receivemessageheader attribute)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.MODULE_EVENT_NAMES", false]], "module_requested_event (receivemessageheader attribute)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.MODULE_REQUESTED_EVENT", false]], "new_state_matrix (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.NEW_STATE_MATRIX", false]], "newlines (stderrbuffer attribute)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.newlines", false]], "newlines (stdoutbuffer attribute)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.newlines", false]], "nonblockingsocketreceive (class in village.pybpodapi.bpod.non_blockingsocketreceive)": [[80, "village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive", false]], "nonblockingstreamreader (class in village.pybpodapi.bpod.non_blockingstreamreader)": [[83, "village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader", false]], "open() (arcom method)": [[93, "village.pybpodapi.com.arcom.ArCOM.open", false]], "open() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.open", false]], "open() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.open", false]], "open() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.open", false]], "open() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.open", false]], "open() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.open", false]], "output (bpod.channeltypes attribute)": [[51, "village.pybpodapi.bpod.Bpod.ChannelTypes.OUTPUT", false]], "output (bpodbase.channeltypes attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes.OUTPUT", false]], "output (bpodcomprotocol.channeltypes attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes.OUTPUT", false]], "output (bpodcomprotocolmodules.channeltypes attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes.OUTPUT", false]], "output (bpodio.channeltypes attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes.OUTPUT", false]], "output (channeltype attribute)": [[63, "village.pybpodapi.bpod.hardware.channels.ChannelType.OUTPUT", false]], "output (class in village.classes.task)": [[28, "village.classes.task.Output", false]], "outputchannel (class in village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel", false]], "override_digital_hw_state (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.OVERRIDE_DIGITAL_HW_STATE", false]], "pa1_port1in (bpod.events attribute)": [[51, "village.pybpodapi.bpod.Bpod.Events.PA1_Port1In", false]], "pa1_port1in (bpodbase.events attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.PA1_Port1In", false]], "pa1_port1in (bpodcomprotocol.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.PA1_Port1In", false]], "pa1_port1in (bpodcomprotocolmodules.events attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.PA1_Port1In", false]], "pa1_port1in (bpodio.events attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.PA1_Port1In", false]], "pa1_port1in (event attribute)": [[27, "village.classes.task.Event.PA1_Port1In", false]], "pa1_port1in (eventname attribute)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.PA1_Port1In", false]], "parse() (in module village.pybpodapi.utils.date_parser)": [[169, "village.pybpodapi.utils.date_parser.parse", false]], "port1 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port1", false]], "port1in (bpod.events attribute)": [[51, "village.pybpodapi.bpod.Bpod.Events.Port1In", false]], "port1in (bpodbase.events attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Port1In", false]], "port1in (bpodcomprotocol.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Port1In", false]], "port1in (bpodcomprotocolmodules.events attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Port1In", false]], "port1in (bpodio.events attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Port1In", false]], "port1in (event attribute)": [[27, "village.classes.task.Event.Port1In", false]], "port1in (eventname attribute)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Port1In", false]], "port2 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port2", false]], "port3 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port3", false]], "port4 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port4", false]], "port5 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port5", false]], "port6 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port6", false]], "port7 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port7", false]], "port8 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Port8", false]], "pwm (bpod.channelnames attribute)": [[51, "village.pybpodapi.bpod.Bpod.ChannelNames.PWM", false]], "pwm (bpodbase.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.PWM", false]], "pwm (bpodcomprotocol.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.PWM", false]], "pwm (bpodcomprotocolmodules.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.PWM", false]], "pwm (bpodio.channelnames attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.PWM", false]], "pwm (channelname attribute)": [[62, "village.pybpodapi.bpod.hardware.channels.ChannelName.PWM", false]], "pybpod (class in village.devices.bpod)": [[37, "village.devices.bpod.PyBpod", false]], "pybpodprotocol (class in village.classes.protocols)": [[17, "village.classes.protocols.PyBpodProtocol", false]], "read() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.read", false]], "read() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.read", false]], "readable() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.readable", false]], "readable() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.readable", false]], "reader (class in village.pybpodapi.utils.csv)": [[166, "village.pybpodapi.utils.csv.Reader", false]], "readline() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.readline", false]], "readline() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.readline", false]], "readlines() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.readlines", false]], "readlines() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.readlines", false]], "receivemessageheader (class in village.pybpodapi.com.protocol.recv_msg_headers)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader", false]], "reset_clock (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.RESET_CLOCK", false]], "reset_serial_messages (receivemessageheader attribute)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.RESET_SERIAL_MESSAGES", false]], "reset_serial_messages (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.RESET_SERIAL_MESSAGES", false]], "reset_serial_messages() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.reset_serial_messages", false]], "reset_serial_messages() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.reset_serial_messages", false]], "reset_serial_messages() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.reset_serial_messages", false]], "reset_serial_messages() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.reset_serial_messages", false]], "reset_serial_messages() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.reset_serial_messages", false]], "rtplots (class in village.rt_plots)": [[171, "village.rt_plots.RTPlots", false]], "run_state_machine (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.RUN_STATE_MACHINE", false]], "run_state_machine() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.run_state_machine", false]], "run_state_machine() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.run_state_machine", false]], "run_state_machine() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.run_state_machine", false]], "run_state_machine() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.run_state_machine", false]], "run_state_machine() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.run_state_machine", false]], "scale (class in village.devices.scale)": [[41, "village.devices.scale.Scale", false]], "scaleprotocol (class in village.classes.protocols)": [[18, "village.classes.protocols.ScaleProtocol", false]], "screenactive (class in village.classes.enums)": [[11, "village.classes.enums.ScreenActive", false]], "seek() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.seek", false]], "seek() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.seek", false]], "seekable() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.seekable", false]], "seekable() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.seekable", false]], "send() (softcode method)": [[38, "village.devices.bpod.Softcode.send", false]], "send_state_machine() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.send_state_machine", false]], "send_state_machine() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.send_state_machine", false]], "send_state_machine() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.send_state_machine", false]], "send_state_machine() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.send_state_machine", false]], "send_state_machine() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.send_state_machine", false]], "send_to_hw_serial (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.SEND_TO_HW_SERIAL", false]], "sendmessageheader (class in village.pybpodapi.com.protocol.send_msg_headers)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader", false]], "serial (bpod.channelnames attribute)": [[51, "village.pybpodapi.bpod.Bpod.ChannelNames.SERIAL", false]], "serial (bpodbase.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.SERIAL", false]], "serial (bpodcomprotocol.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.SERIAL", false]], "serial (bpodcomprotocolmodules.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.SERIAL", false]], "serial (bpodio.channelnames attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.SERIAL", false]], "serial (channelname attribute)": [[62, "village.pybpodapi.bpod.hardware.channels.ChannelName.SERIAL", false]], "serial1 (bpod.outputchannels attribute)": [[51, "village.pybpodapi.bpod.Bpod.OutputChannels.Serial1", false]], "serial1 (bpodbase.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.Serial1", false]], "serial1 (bpodcomprotocol.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.Serial1", false]], "serial1 (bpodcomprotocolmodules.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.Serial1", false]], "serial1 (bpodio.outputchannels attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.Serial1", false]], "serial1 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Serial1", false]], "serial1 (output attribute)": [[28, "village.classes.task.Output.Serial1", false]], "serial1 (outputchannel attribute)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.Serial1", false]], "serial2 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Serial2", false]], "serial3 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Serial3", false]], "session (class in village.pybpodapi.session)": [[145, "village.pybpodapi.session.Session", false]], "sessioninfo (class in village.pybpodapi.com.messaging.session_info)": [[112, "village.pybpodapi.com.messaging.session_info.SessionInfo", false]], "set_condition() (statemachine method)": [[148, "village.pybpodapi.state_machine.StateMachine.set_condition", false]], "set_condition() (statemachinebase method)": [[157, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_condition", false]], "set_condition() (statemachinebuilder method)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_condition", false]], "set_condition() (statemachinerunner method)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_condition", false]], "set_global_counter() (statemachine method)": [[148, "village.pybpodapi.state_machine.StateMachine.set_global_counter", false]], "set_global_counter() (statemachinebase method)": [[157, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_global_counter", false]], "set_global_counter() (statemachinebuilder method)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_global_counter", false]], "set_global_counter() (statemachinerunner method)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_global_counter", false]], "set_global_timer() (statemachine method)": [[148, "village.pybpodapi.state_machine.StateMachine.set_global_timer", false]], "set_global_timer() (statemachinebase method)": [[157, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_global_timer", false]], "set_global_timer() (statemachinebuilder method)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_global_timer", false]], "set_global_timer() (statemachinerunner method)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_global_timer", false]], "set_global_timer_legacy() (statemachine method)": [[148, "village.pybpodapi.state_machine.StateMachine.set_global_timer_legacy", false]], "set_global_timer_legacy() (statemachinebase method)": [[157, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase.set_global_timer_legacy", false]], "set_global_timer_legacy() (statemachinebuilder method)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.set_global_timer_legacy", false]], "set_global_timer_legacy() (statemachinerunner method)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.set_global_timer_legacy", false]], "set_module_relay (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.SET_MODULE_RELAY", false]], "setting (class in village.classes.settings_class)": [[22, "village.classes.settings_class.Setting", false]], "settings (class in village.classes.settings_class)": [[23, "village.classes.settings_class.Settings", false]], "settings (class in village.classes.training)": [[32, "village.classes.training.Settings", false]], "setup() (hardware method)": [[72, "village.pybpodapi.bpod.hardware.hardware.Hardware.setup", false]], "setup_input_channels() (channels method)": [[64, "village.pybpodapi.bpod.hardware.channels.Channels.setup_input_channels", false]], "setup_output_channels() (channels method)": [[64, "village.pybpodapi.bpod.hardware.channels.Channels.setup_output_channels", false]], "smaerror": [[156, "village.pybpodapi.state_machine.state_machine_base.SMAError", false]], "softcode (class in village.devices.bpod)": [[38, "village.devices.bpod.Softcode", false]], "softcode1 (bpod.outputchannels attribute)": [[51, "village.pybpodapi.bpod.Bpod.OutputChannels.SoftCode1", false]], "softcode1 (bpodbase.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.SoftCode1", false]], "softcode1 (bpodcomprotocol.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.SoftCode1", false]], "softcode1 (bpodcomprotocolmodules.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.SoftCode1", false]], "softcode1 (bpodio.outputchannels attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.SoftCode1", false]], "softcode1 (output attribute)": [[28, "village.classes.task.Output.SoftCode1", false]], "softcode1 (outputchannel attribute)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.SoftCode1", false]], "softcode_handler_function() (bpod method)": [[51, "village.pybpodapi.bpod.Bpod.softcode_handler_function", false]], "softcode_handler_function() (bpodbase method)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.softcode_handler_function", false]], "softcode_handler_function() (bpodcomprotocol method)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.softcode_handler_function", false]], "softcode_handler_function() (bpodcomprotocolmodules method)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.softcode_handler_function", false]], "softcode_handler_function() (bpodio method)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.softcode_handler_function", false]], "softcodeoccurrence (class in village.pybpodapi.com.messaging.softcode_occurrence)": [[114, "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence", false]], "state (class in village.classes.enums)": [[12, "village.classes.enums.State", false]], "state_machine_installation_status (receivemessageheader attribute)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.STATE_MACHINE_INSTALLATION_STATUS", false]], "statemachine (class in village.pybpodapi.state_machine)": [[148, "village.pybpodapi.state_machine.StateMachine", false]], "statemachinebase (class in village.pybpodapi.state_machine.state_machine_base)": [[157, "village.pybpodapi.state_machine.state_machine_base.StateMachineBase", false]], "statemachinebuilder (class in village.pybpodapi.state_machine.state_machine_builder)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder", false]], "statemachinebuildererror": [[160, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError", false]], "statemachinerunner (class in village.pybpodapi.state_machine.state_machine_runner)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner", false]], "statemachinerunnererror": [[163, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError", false]], "stateoccurrence (class in village.pybpodapi.com.messaging.state_occurrence)": [[116, "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence", false]], "statetransition (class in village.pybpodapi.com.messaging.state_transition)": [[118, "village.pybpodapi.com.messaging.state_transition.StateTransition", false]], "stderrbuffer (class in village.pybpodapi.com.stderr_buffer)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer", false]], "stderrmessage (class in village.pybpodapi.com.messaging.stderr)": [[120, "village.pybpodapi.com.messaging.stderr.StderrMessage", false]], "stdoutbuffer (class in village.pybpodapi.com.stdout_buffer)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer", false]], "stdoutmessage (class in village.pybpodapi.com.messaging.stdout)": [[122, "village.pybpodapi.com.messaging.stdout.StdoutMessage", false]], "streamswrapper (class in village.pybpodapi.session)": [[146, "village.pybpodapi.session.StreamsWrapper", false]], "subject (class in village.classes.subject)": [[25, "village.classes.subject.Subject", false]], "superenum (class in village.classes.enums)": [[13, "village.classes.enums.SuperEnum", false]], "sync_channel_mode (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.SYNC_CHANNEL_MODE", false]], "sync_channel_mode_ok (receivemessageheader attribute)": [[133, "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader.SYNC_CHANNEL_MODE_OK", false]], "task (class in village.classes.task)": [[29, "village.classes.task.Task", false]], "taskerror": [[30, "village.classes.task.TaskError", false]], "telegrambotprotocol (class in village.classes.protocols)": [[19, "village.classes.protocols.TelegramBotProtocol", false]], "tell() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.tell", false]], "tell() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.tell", false]], "tempsensor (class in village.devices.temp_sensor)": [[44, "village.devices.temp_sensor.TempSensor", false]], "tempsensorprotocol (class in village.classes.protocols)": [[20, "village.classes.protocols.TempSensorProtocol", false]], "timeutils (class in village.time_utils)": [[176, "village.time_utils.TimeUtils", false]], "training (class in village.classes.training)": [[33, "village.classes.training.Training", false]], "trainingerror": [[34, "village.classes.training.TrainingError", false]], "trial (class in village.pybpodapi.com.messaging.trial)": [[124, "village.pybpodapi.com.messaging.trial.Trial", false]], "trigger_softcode (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.TRIGGER_SOFTCODE", false]], "truncate() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.truncate", false]], "truncate() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.truncate", false]], "tup (bpod.events attribute)": [[51, "village.pybpodapi.bpod.Bpod.Events.Tup", false]], "tup (bpodbase.events attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Tup", false]], "tup (bpodcomprotocol.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Tup", false]], "tup (bpodcomprotocolmodules.events attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Tup", false]], "tup (bpodio.events attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Tup", false]], "tup (event attribute)": [[27, "village.classes.task.Event.Tup", false]], "tup (eventname attribute)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Tup", false]], "unexpectedendofstream": [[81, "village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream", false], [84, "village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream", false]], "untaggedmessage (class in village.pybpodapi.com.messaging.untagged_message)": [[126, "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage", false]], "update_state_numbers() (statemachine method)": [[148, "village.pybpodapi.state_machine.StateMachine.update_state_numbers", false]], "update_state_numbers() (statemachinebuilder method)": [[159, "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder.update_state_numbers", false]], "update_state_numbers() (statemachinerunner method)": [[162, "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner.update_state_numbers", false]], "usb1 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.USB1", false]], "valuemessage (class in village.pybpodapi.com.messaging.value)": [[128, "village.pybpodapi.com.messaging.value.ValueMessage", false]], "valve (bpod.channelnames attribute)": [[51, "village.pybpodapi.bpod.Bpod.ChannelNames.VALVE", false]], "valve (bpod.outputchannels attribute)": [[51, "village.pybpodapi.bpod.Bpod.OutputChannels.Valve", false]], "valve (bpodbase.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.VALVE", false]], "valve (bpodbase.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.Valve", false]], "valve (bpodcomprotocol.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.VALVE", false]], "valve (bpodcomprotocol.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.Valve", false]], "valve (bpodcomprotocolmodules.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.VALVE", false]], "valve (bpodcomprotocolmodules.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.Valve", false]], "valve (bpodio.channelnames attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.VALVE", false]], "valve (bpodio.outputchannels attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.Valve", false]], "valve (channelname attribute)": [[62, "village.pybpodapi.bpod.hardware.channels.ChannelName.VALVE", false]], "valve (output attribute)": [[28, "village.classes.task.Output.Valve", false]], "valve (outputchannel attribute)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.Valve", false]], "village.classes": [[0, "module-village.classes", false]], "village.classes.collection": [[1, "module-village.classes.collection", false]], "village.classes.enums": [[3, "module-village.classes.enums", false]], "village.classes.protocols": [[14, "module-village.classes.protocols", false]], "village.classes.settings_class": [[21, "module-village.classes.settings_class", false]], "village.classes.subject": [[24, "module-village.classes.subject", false]], "village.classes.task": [[26, "module-village.classes.task", false]], "village.classes.training": [[31, "module-village.classes.training", false]], "village.devices": [[35, "module-village.devices", false]], "village.devices.bpod": [[36, "module-village.devices.bpod", false]], "village.devices.scale": [[40, "module-village.devices.scale", false]], "village.devices.temp_sensor": [[43, "module-village.devices.temp_sensor", false]], "village.gui": [[46, "module-village.gui", false]], "village.log": [[47, "module-village.log", false]], "village.pybpodapi": [[49, "module-village.pybpodapi", false]], "village.pybpodapi.bpod": [[50, "module-village.pybpodapi.bpod", false]], "village.pybpodapi.bpod.bpod_base": [[52, "module-village.pybpodapi.bpod.bpod_base", false]], "village.pybpodapi.bpod.bpod_com_protocol": [[54, "module-village.pybpodapi.bpod.bpod_com_protocol", false]], "village.pybpodapi.bpod.bpod_com_protocol_modules": [[56, "module-village.pybpodapi.bpod.bpod_com_protocol_modules", false]], "village.pybpodapi.bpod.bpod_io": [[58, "module-village.pybpodapi.bpod.bpod_io", false]], "village.pybpodapi.bpod.hardware": [[60, "module-village.pybpodapi.bpod.hardware", false]], "village.pybpodapi.bpod.hardware.channels": [[61, "module-village.pybpodapi.bpod.hardware.channels", false]], "village.pybpodapi.bpod.hardware.events": [[66, "module-village.pybpodapi.bpod.hardware.events", false]], "village.pybpodapi.bpod.hardware.events.base_eventname": [[67, "module-village.pybpodapi.bpod.hardware.events.base_eventname", false]], "village.pybpodapi.bpod.hardware.events.bpod_events": [[69, "module-village.pybpodapi.bpod.hardware.events.bpod_events", false]], "village.pybpodapi.bpod.hardware.hardware": [[71, "module-village.pybpodapi.bpod.hardware.hardware", false]], "village.pybpodapi.bpod.hardware.input_channels": [[73, "module-village.pybpodapi.bpod.hardware.input_channels", false]], "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels": [[74, "module-village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels", false]], "village.pybpodapi.bpod.hardware.output_channels": [[76, "module-village.pybpodapi.bpod.hardware.output_channels", false]], "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels": [[77, "module-village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels", false]], "village.pybpodapi.bpod.non_blockingsocketreceive": [[79, "module-village.pybpodapi.bpod.non_blockingsocketreceive", false]], "village.pybpodapi.bpod.non_blockingstreamreader": [[82, "module-village.pybpodapi.bpod.non_blockingstreamreader", false]], "village.pybpodapi.bpod.settings": [[85, "module-village.pybpodapi.bpod.settings", false]], "village.pybpodapi.bpod_modules": [[86, "module-village.pybpodapi.bpod_modules", false]], "village.pybpodapi.bpod_modules.bpod_module": [[87, "module-village.pybpodapi.bpod_modules.bpod_module", false]], "village.pybpodapi.bpod_modules.bpod_modules": [[89, "module-village.pybpodapi.bpod_modules.bpod_modules", false]], "village.pybpodapi.com": [[91, "module-village.pybpodapi.com", false]], "village.pybpodapi.com.arcom": [[92, "module-village.pybpodapi.com.arcom", false]], "village.pybpodapi.com.messaging": [[96, "module-village.pybpodapi.com.messaging", false]], "village.pybpodapi.com.messaging.base_message": [[97, "module-village.pybpodapi.com.messaging.base_message", false]], "village.pybpodapi.com.messaging.debug": [[99, "module-village.pybpodapi.com.messaging.debug", false]], "village.pybpodapi.com.messaging.end_trial": [[101, "module-village.pybpodapi.com.messaging.end_trial", false]], "village.pybpodapi.com.messaging.error": [[103, "module-village.pybpodapi.com.messaging.error", false]], "village.pybpodapi.com.messaging.event_occurrence": [[105, "module-village.pybpodapi.com.messaging.event_occurrence", false]], "village.pybpodapi.com.messaging.event_resume": [[107, "module-village.pybpodapi.com.messaging.event_resume", false]], "village.pybpodapi.com.messaging.parser": [[109, "module-village.pybpodapi.com.messaging.parser", false]], "village.pybpodapi.com.messaging.session_info": [[111, "module-village.pybpodapi.com.messaging.session_info", false]], "village.pybpodapi.com.messaging.softcode_occurrence": [[113, "module-village.pybpodapi.com.messaging.softcode_occurrence", false]], "village.pybpodapi.com.messaging.state_occurrence": [[115, "module-village.pybpodapi.com.messaging.state_occurrence", false]], "village.pybpodapi.com.messaging.state_transition": [[117, "module-village.pybpodapi.com.messaging.state_transition", false]], "village.pybpodapi.com.messaging.stderr": [[119, "module-village.pybpodapi.com.messaging.stderr", false]], "village.pybpodapi.com.messaging.stdout": [[121, "module-village.pybpodapi.com.messaging.stdout", false]], "village.pybpodapi.com.messaging.trial": [[123, "module-village.pybpodapi.com.messaging.trial", false]], "village.pybpodapi.com.messaging.untagged_message": [[125, "module-village.pybpodapi.com.messaging.untagged_message", false]], "village.pybpodapi.com.messaging.value": [[127, "module-village.pybpodapi.com.messaging.value", false]], "village.pybpodapi.com.messaging.warning": [[129, "module-village.pybpodapi.com.messaging.warning", false]], "village.pybpodapi.com.protocol": [[131, "module-village.pybpodapi.com.protocol", false]], "village.pybpodapi.com.protocol.recv_msg_headers": [[132, "module-village.pybpodapi.com.protocol.recv_msg_headers", false]], "village.pybpodapi.com.protocol.send_msg_headers": [[134, "module-village.pybpodapi.com.protocol.send_msg_headers", false]], "village.pybpodapi.com.stderr_buffer": [[136, "module-village.pybpodapi.com.stderr_buffer", false]], "village.pybpodapi.com.stdout_buffer": [[138, "module-village.pybpodapi.com.stdout_buffer", false]], "village.pybpodapi.exceptions": [[140, "module-village.pybpodapi.exceptions", false]], "village.pybpodapi.exceptions.bpod_error": [[141, "module-village.pybpodapi.exceptions.bpod_error", false]], "village.pybpodapi.protocol": [[143, "module-village.pybpodapi.protocol", false]], "village.pybpodapi.session": [[144, "module-village.pybpodapi.session", false]], "village.pybpodapi.state_machine": [[147, "module-village.pybpodapi.state_machine", false]], "village.pybpodapi.state_machine.conditions": [[149, "module-village.pybpodapi.state_machine.conditions", false]], "village.pybpodapi.state_machine.global_counters": [[151, "module-village.pybpodapi.state_machine.global_counters", false]], "village.pybpodapi.state_machine.global_timers": [[153, "module-village.pybpodapi.state_machine.global_timers", false]], "village.pybpodapi.state_machine.state_machine_base": [[155, "module-village.pybpodapi.state_machine.state_machine_base", false]], "village.pybpodapi.state_machine.state_machine_builder": [[158, "module-village.pybpodapi.state_machine.state_machine_builder", false]], "village.pybpodapi.state_machine.state_machine_runner": [[161, "module-village.pybpodapi.state_machine.state_machine_runner", false]], "village.pybpodapi.utils": [[164, "module-village.pybpodapi.utils", false]], "village.pybpodapi.utils.csv": [[165, "module-village.pybpodapi.utils.csv", false]], "village.pybpodapi.utils.date_parser": [[168, "module-village.pybpodapi.utils.date_parser", false]], "village.rt_plots": [[170, "module-village.rt_plots", false]], "village.screen": [[172, "module-village.screen", false]], "village.screen.behaviour_window": [[173, "module-village.screen.behaviour_window", false]], "village.time_utils": [[175, "module-village.time_utils", false]], "village.video": [[177, "module-village.video", false]], "warningmessage (class in village.pybpodapi.com.messaging.warning)": [[130, "village.pybpodapi.com.messaging.warning.WarningMessage", false]], "wire (bpod.channelnames attribute)": [[51, "village.pybpodapi.bpod.Bpod.ChannelNames.WIRE", false]], "wire (bpodbase.channelnames attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames.WIRE", false]], "wire (bpodcomprotocol.channelnames attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames.WIRE", false]], "wire (bpodcomprotocolmodules.channelnames attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames.WIRE", false]], "wire (bpodio.channelnames attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames.WIRE", false]], "wire (channelname attribute)": [[62, "village.pybpodapi.bpod.hardware.channels.ChannelName.WIRE", false]], "wire1 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Wire1", false]], "wire1high (bpod.events attribute)": [[51, "village.pybpodapi.bpod.Bpod.Events.Wire1High", false]], "wire1high (bpod.outputchannels attribute)": [[51, "village.pybpodapi.bpod.Bpod.OutputChannels.Wire1High", false]], "wire1high (bpodbase.events attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.Events.Wire1High", false]], "wire1high (bpodbase.outputchannels attribute)": [[53, "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels.Wire1High", false]], "wire1high (bpodcomprotocol.events attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events.Wire1High", false]], "wire1high (bpodcomprotocol.outputchannels attribute)": [[55, "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels.Wire1High", false]], "wire1high (bpodcomprotocolmodules.events attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events.Wire1High", false]], "wire1high (bpodcomprotocolmodules.outputchannels attribute)": [[57, "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels.Wire1High", false]], "wire1high (bpodio.events attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.Events.Wire1High", false]], "wire1high (bpodio.outputchannels attribute)": [[59, "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels.Wire1High", false]], "wire1high (event attribute)": [[27, "village.classes.task.Event.Wire1High", false]], "wire1high (eventname attribute)": [[70, "village.pybpodapi.bpod.hardware.events.bpod_events.EventName.Wire1High", false]], "wire1high (output attribute)": [[28, "village.classes.task.Output.Wire1High", false]], "wire1high (outputchannel attribute)": [[78, "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel.Wire1High", false]], "wire2 (inputname attribute)": [[75, "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName.Wire2", false]], "writable() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.writable", false]], "writable() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.writable", false]], "write() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.write", false]], "write() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.write", false]], "write_to_module (sendmessageheader attribute)": [[135, "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader.WRITE_TO_MODULE", false]], "writelines() (stderrbuffer method)": [[137, "village.pybpodapi.com.stderr_buffer.StderrBuffer.writelines", false]], "writelines() (stdoutbuffer method)": [[139, "village.pybpodapi.com.stdout_buffer.StdoutBuffer.writelines", false]], "writer (class in village.pybpodapi.utils.csv)": [[167, "village.pybpodapi.utils.csv.Writer", false]]}, "objects": {"village": [[0, 0, 0, "-", "classes"], [35, 0, 0, "-", "devices"], [46, 0, 0, "-", "gui"], [47, 0, 0, "-", "log"], [49, 0, 0, "-", "pybpodapi"], [170, 0, 0, "-", "rt_plots"], [172, 0, 0, "-", "screen"], [175, 0, 0, "-", "time_utils"], [177, 0, 0, "-", "video"]], "village.classes": [[1, 0, 0, "-", "collection"], [3, 0, 0, "-", "enums"], [14, 0, 0, "-", "protocols"], [21, 0, 0, "-", "settings_class"], [24, 0, 0, "-", "subject"], [26, 0, 0, "-", "task"], [31, 0, 0, "-", "training"]], "village.classes.collection": [[2, 1, 1, "", "Collection"]], "village.classes.collection.Collection": [[2, 2, 1, "", "__init__"]], "village.classes.enums": [[4, 1, 1, "", "Actions"], [5, 1, 1, "", "Active"], [6, 1, 1, "", "AreaActive"], [7, 1, 1, "", "Color"], [8, 1, 1, "", "Cycle"], [9, 1, 1, "", "DataTable"], [10, 1, 1, "", "Info"], [11, 1, 1, "", "ScreenActive"], [12, 1, 1, "", "State"], [13, 1, 1, "", "SuperEnum"]], "village.classes.enums.Actions": [[4, 2, 1, "", "__init__"]], "village.classes.enums.Active": [[5, 2, 1, "", "__init__"]], "village.classes.enums.AreaActive": [[6, 2, 1, "", "__init__"]], "village.classes.enums.Color": [[7, 2, 1, "", "__init__"]], "village.classes.enums.Cycle": [[8, 2, 1, "", "__init__"]], "village.classes.enums.DataTable": [[9, 2, 1, "", "__init__"]], "village.classes.enums.Info": [[10, 2, 1, "", "__init__"]], "village.classes.enums.ScreenActive": [[11, 2, 1, "", "__init__"]], "village.classes.enums.State": [[12, 2, 1, "", "__init__"]], "village.classes.enums.SuperEnum": [[13, 2, 1, "", "__init__"]], "village.classes.protocols": [[15, 1, 1, "", "CameraProtocol"], [16, 1, 1, "", "EventProtocol"], [17, 1, 1, "", "PyBpodProtocol"], [18, 1, 1, "", "ScaleProtocol"], [19, 1, 1, "", "TelegramBotProtocol"], [20, 1, 1, "", "TempSensorProtocol"]], "village.classes.protocols.CameraProtocol": [[15, 2, 1, "", "__init__"]], "village.classes.protocols.EventProtocol": [[16, 2, 1, "", "__init__"]], "village.classes.protocols.PyBpodProtocol": [[17, 2, 1, "", "__init__"]], "village.classes.protocols.ScaleProtocol": [[18, 2, 1, "", "__init__"]], "village.classes.protocols.TelegramBotProtocol": [[19, 2, 1, "", "__init__"]], "village.classes.protocols.TempSensorProtocol": [[20, 2, 1, "", "__init__"]], "village.classes.settings_class": [[22, 1, 1, "", "Setting"], [23, 1, 1, "", "Settings"]], "village.classes.settings_class.Setting": [[22, 2, 1, "", "__init__"]], "village.classes.settings_class.Settings": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "get"], [23, 2, 1, "", "get_description"], [23, 2, 1, "", "get_index"], [23, 2, 1, "", "get_indices"], [23, 2, 1, "", "get_text"], [23, 2, 1, "", "get_type"], [23, 2, 1, "", "get_values"]], "village.classes.subject": [[25, 1, 1, "", "Subject"]], "village.classes.subject.Subject": [[25, 2, 1, "", "__init__"]], "village.classes.task": [[27, 1, 1, "", "Event"], [28, 1, 1, "", "Output"], [29, 1, 1, "", "Task"], [30, 4, 1, "", "TaskError"]], "village.classes.task.Event": [[27, 3, 1, "", "BNC1High"], [27, 3, 1, "", "Condition1"], [27, 3, 1, "", "GlobalCounter1End"], [27, 3, 1, "", "GlobalTimer1End"], [27, 3, 1, "", "GlobalTimer1Start"], [27, 3, 1, "", "PA1_Port1In"], [27, 3, 1, "", "Port1In"], [27, 3, 1, "", "Tup"], [27, 3, 1, "", "Wire1High"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "is_condition"], [27, 2, 1, "", "is_global_counter_end"], [27, 2, 1, "", "is_global_timer_cancel"], [27, 2, 1, "", "is_global_timer_end"], [27, 2, 1, "", "is_global_timer_start"], [27, 2, 1, "", "is_global_timer_trigger"], [27, 2, 1, "", "is_state_timer"]], "village.classes.task.Output": [[28, 3, 1, "", "BNC1High"], [28, 3, 1, "", "GlobalCounterReset"], [28, 3, 1, "", "GlobalTimer1Cancel"], [28, 3, 1, "", "GlobalTimer1Trig"], [28, 3, 1, "", "Serial1"], [28, 3, 1, "", "SoftCode1"], [28, 3, 1, "", "Valve"], [28, 3, 1, "", "Wire1High"], [28, 2, 1, "", "__init__"]], "village.classes.task.Task": [[29, 2, 1, "", "__init__"]], "village.classes.training": [[32, 1, 1, "", "Settings"], [33, 1, 1, "", "Training"], [34, 4, 1, "", "TrainingError"]], "village.classes.training.Settings": [[32, 2, 1, "", "__init__"]], "village.classes.training.Training": [[33, 2, 1, "", "__init__"]], "village.devices": [[36, 0, 0, "-", "bpod"], [40, 0, 0, "-", "scale"], [43, 0, 0, "-", "temp_sensor"]], "village.devices.bpod": [[37, 1, 1, "", "PyBpod"], [38, 1, 1, "", "Softcode"], [39, 5, 1, "", "get_bpod"]], "village.devices.bpod.PyBpod": [[37, 2, 1, "", "__init__"]], "village.devices.bpod.Softcode": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "close"], [38, 2, 1, "", "kill"], [38, 2, 1, "", "send"]], "village.devices.scale": [[41, 1, 1, "", "Scale"], [42, 5, 1, "", "get_scale"]], "village.devices.scale.Scale": [[41, 2, 1, "", "__init__"]], "village.devices.temp_sensor": [[44, 1, 1, "", "TempSensor"], [45, 5, 1, "", "get_temp_sensor"]], "village.devices.temp_sensor.TempSensor": [[44, 2, 1, "", "__init__"]], "village.log": [[48, 1, 1, "", "Log"]], "village.log.Log": [[48, 2, 1, "", "__init__"]], "village.pybpodapi": [[50, 0, 0, "-", "bpod"], [86, 0, 0, "-", "bpod_modules"], [91, 0, 0, "-", "com"], [140, 0, 0, "-", "exceptions"], [143, 0, 0, "-", "protocol"], [144, 0, 0, "-", "session"], [147, 0, 0, "-", "state_machine"], [164, 0, 0, "-", "utils"]], "village.pybpodapi.bpod": [[51, 1, 1, "", "Bpod"], [52, 0, 0, "-", "bpod_base"], [54, 0, 0, "-", "bpod_com_protocol"], [56, 0, 0, "-", "bpod_com_protocol_modules"], [58, 0, 0, "-", "bpod_io"], [60, 0, 0, "-", "hardware"], [79, 0, 0, "-", "non_blockingsocketreceive"], [82, 0, 0, "-", "non_blockingstreamreader"], [85, 0, 0, "-", "settings"]], "village.pybpodapi.bpod.Bpod": [[51, 1, 1, "", "ChannelNames"], [51, 1, 1, "", "ChannelTypes"], [51, 1, 1, "", "Events"], [51, 1, 1, "", "OutputChannels"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "close"], [51, 2, 1, "", "data_available"], [51, 2, 1, "", "find_module_by_name"], [51, 2, 1, "", "load_serial_message"], [51, 2, 1, "", "loop_handler"], [51, 2, 1, "", "manual_override"], [51, 2, 1, "", "open"], [51, 2, 1, "", "reset_serial_messages"], [51, 2, 1, "", "run_state_machine"], [51, 2, 1, "", "send_state_machine"], [51, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.Bpod.ChannelNames": [[51, 3, 1, "", "BNC"], [51, 3, 1, "", "PWM"], [51, 3, 1, "", "SERIAL"], [51, 3, 1, "", "VALVE"], [51, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.Bpod.ChannelTypes": [[51, 3, 1, "", "INPUT"], [51, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.Bpod.Events": [[51, 3, 1, "", "BNC1High"], [51, 3, 1, "", "Condition1"], [51, 3, 1, "", "GlobalCounter1End"], [51, 3, 1, "", "GlobalTimer1End"], [51, 3, 1, "", "GlobalTimer1Start"], [51, 3, 1, "", "PA1_Port1In"], [51, 3, 1, "", "Port1In"], [51, 3, 1, "", "Tup"], [51, 3, 1, "", "Wire1High"], [51, 2, 1, "", "is_condition"], [51, 2, 1, "", "is_global_counter_end"], [51, 2, 1, "", "is_global_timer_cancel"], [51, 2, 1, "", "is_global_timer_end"], [51, 2, 1, "", "is_global_timer_start"], [51, 2, 1, "", "is_global_timer_trigger"], [51, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.Bpod.OutputChannels": [[51, 3, 1, "", "BNC1High"], [51, 3, 1, "", "GlobalCounterReset"], [51, 3, 1, "", "GlobalTimer1Cancel"], [51, 3, 1, "", "GlobalTimer1Trig"], [51, 3, 1, "", "Serial1"], [51, 3, 1, "", "SoftCode1"], [51, 3, 1, "", "Valve"], [51, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_base": [[53, 1, 1, "", "BpodBase"]], "village.pybpodapi.bpod.bpod_base.BpodBase": [[53, 1, 1, "", "ChannelNames"], [53, 1, 1, "", "ChannelTypes"], [53, 1, 1, "", "Events"], [53, 1, 1, "", "OutputChannels"], [53, 2, 1, "", "__init__"], [53, 2, 1, "", "close"], [53, 2, 1, "", "find_module_by_name"], [53, 2, 1, "", "load_serial_message"], [53, 2, 1, "", "loop_handler"], [53, 2, 1, "", "open"], [53, 2, 1, "", "reset_serial_messages"], [53, 2, 1, "", "run_state_machine"], [53, 2, 1, "", "send_state_machine"], [53, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelNames": [[53, 3, 1, "", "BNC"], [53, 3, 1, "", "PWM"], [53, 3, 1, "", "SERIAL"], [53, 3, 1, "", "VALVE"], [53, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_base.BpodBase.ChannelTypes": [[53, 3, 1, "", "INPUT"], [53, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_base.BpodBase.Events": [[53, 3, 1, "", "BNC1High"], [53, 3, 1, "", "Condition1"], [53, 3, 1, "", "GlobalCounter1End"], [53, 3, 1, "", "GlobalTimer1End"], [53, 3, 1, "", "GlobalTimer1Start"], [53, 3, 1, "", "PA1_Port1In"], [53, 3, 1, "", "Port1In"], [53, 3, 1, "", "Tup"], [53, 3, 1, "", "Wire1High"], [53, 2, 1, "", "is_condition"], [53, 2, 1, "", "is_global_counter_end"], [53, 2, 1, "", "is_global_timer_cancel"], [53, 2, 1, "", "is_global_timer_end"], [53, 2, 1, "", "is_global_timer_start"], [53, 2, 1, "", "is_global_timer_trigger"], [53, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_base.BpodBase.OutputChannels": [[53, 3, 1, "", "BNC1High"], [53, 3, 1, "", "GlobalCounterReset"], [53, 3, 1, "", "GlobalTimer1Cancel"], [53, 3, 1, "", "GlobalTimer1Trig"], [53, 3, 1, "", "Serial1"], [53, 3, 1, "", "SoftCode1"], [53, 3, 1, "", "Valve"], [53, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_com_protocol": [[55, 1, 1, "", "BpodCOMProtocol"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol": [[55, 1, 1, "", "ChannelNames"], [55, 1, 1, "", "ChannelTypes"], [55, 1, 1, "", "Events"], [55, 1, 1, "", "OutputChannels"], [55, 2, 1, "", "__init__"], [55, 2, 1, "", "close"], [55, 2, 1, "", "data_available"], [55, 2, 1, "", "find_module_by_name"], [55, 2, 1, "", "load_serial_message"], [55, 2, 1, "", "loop_handler"], [55, 2, 1, "", "manual_override"], [55, 2, 1, "", "open"], [55, 2, 1, "", "reset_serial_messages"], [55, 2, 1, "", "run_state_machine"], [55, 2, 1, "", "send_state_machine"], [55, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelNames": [[55, 3, 1, "", "BNC"], [55, 3, 1, "", "PWM"], [55, 3, 1, "", "SERIAL"], [55, 3, 1, "", "VALVE"], [55, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.ChannelTypes": [[55, 3, 1, "", "INPUT"], [55, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.Events": [[55, 3, 1, "", "BNC1High"], [55, 3, 1, "", "Condition1"], [55, 3, 1, "", "GlobalCounter1End"], [55, 3, 1, "", "GlobalTimer1End"], [55, 3, 1, "", "GlobalTimer1Start"], [55, 3, 1, "", "PA1_Port1In"], [55, 3, 1, "", "Port1In"], [55, 3, 1, "", "Tup"], [55, 3, 1, "", "Wire1High"], [55, 2, 1, "", "is_condition"], [55, 2, 1, "", "is_global_counter_end"], [55, 2, 1, "", "is_global_timer_cancel"], [55, 2, 1, "", "is_global_timer_end"], [55, 2, 1, "", "is_global_timer_start"], [55, 2, 1, "", "is_global_timer_trigger"], [55, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_com_protocol.BpodCOMProtocol.OutputChannels": [[55, 3, 1, "", "BNC1High"], [55, 3, 1, "", "GlobalCounterReset"], [55, 3, 1, "", "GlobalTimer1Cancel"], [55, 3, 1, "", "GlobalTimer1Trig"], [55, 3, 1, "", "Serial1"], [55, 3, 1, "", "SoftCode1"], [55, 3, 1, "", "Valve"], [55, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_com_protocol_modules": [[57, 1, 1, "", "BpodCOMProtocolModules"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules": [[57, 1, 1, "", "ChannelNames"], [57, 1, 1, "", "ChannelTypes"], [57, 1, 1, "", "Events"], [57, 1, 1, "", "OutputChannels"], [57, 2, 1, "", "__init__"], [57, 2, 1, "", "close"], [57, 2, 1, "", "data_available"], [57, 2, 1, "", "find_module_by_name"], [57, 2, 1, "", "load_serial_message"], [57, 2, 1, "", "loop_handler"], [57, 2, 1, "", "manual_override"], [57, 2, 1, "", "open"], [57, 2, 1, "", "reset_serial_messages"], [57, 2, 1, "", "run_state_machine"], [57, 2, 1, "", "send_state_machine"], [57, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelNames": [[57, 3, 1, "", "BNC"], [57, 3, 1, "", "PWM"], [57, 3, 1, "", "SERIAL"], [57, 3, 1, "", "VALVE"], [57, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.ChannelTypes": [[57, 3, 1, "", "INPUT"], [57, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.Events": [[57, 3, 1, "", "BNC1High"], [57, 3, 1, "", "Condition1"], [57, 3, 1, "", "GlobalCounter1End"], [57, 3, 1, "", "GlobalTimer1End"], [57, 3, 1, "", "GlobalTimer1Start"], [57, 3, 1, "", "PA1_Port1In"], [57, 3, 1, "", "Port1In"], [57, 3, 1, "", "Tup"], [57, 3, 1, "", "Wire1High"], [57, 2, 1, "", "is_condition"], [57, 2, 1, "", "is_global_counter_end"], [57, 2, 1, "", "is_global_timer_cancel"], [57, 2, 1, "", "is_global_timer_end"], [57, 2, 1, "", "is_global_timer_start"], [57, 2, 1, "", "is_global_timer_trigger"], [57, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_com_protocol_modules.BpodCOMProtocolModules.OutputChannels": [[57, 3, 1, "", "BNC1High"], [57, 3, 1, "", "GlobalCounterReset"], [57, 3, 1, "", "GlobalTimer1Cancel"], [57, 3, 1, "", "GlobalTimer1Trig"], [57, 3, 1, "", "Serial1"], [57, 3, 1, "", "SoftCode1"], [57, 3, 1, "", "Valve"], [57, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.bpod_io": [[59, 1, 1, "", "BpodIO"]], "village.pybpodapi.bpod.bpod_io.BpodIO": [[59, 1, 1, "", "ChannelNames"], [59, 1, 1, "", "ChannelTypes"], [59, 1, 1, "", "Events"], [59, 1, 1, "", "OutputChannels"], [59, 2, 1, "", "__init__"], [59, 2, 1, "", "close"], [59, 2, 1, "", "data_available"], [59, 2, 1, "", "find_module_by_name"], [59, 2, 1, "", "load_serial_message"], [59, 2, 1, "", "loop_handler"], [59, 2, 1, "", "manual_override"], [59, 2, 1, "", "open"], [59, 2, 1, "", "reset_serial_messages"], [59, 2, 1, "", "run_state_machine"], [59, 2, 1, "", "send_state_machine"], [59, 2, 1, "", "softcode_handler_function"]], "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelNames": [[59, 3, 1, "", "BNC"], [59, 3, 1, "", "PWM"], [59, 3, 1, "", "SERIAL"], [59, 3, 1, "", "VALVE"], [59, 3, 1, "", "WIRE"]], "village.pybpodapi.bpod.bpod_io.BpodIO.ChannelTypes": [[59, 3, 1, "", "INPUT"], [59, 3, 1, "", "OUTPUT"]], "village.pybpodapi.bpod.bpod_io.BpodIO.Events": [[59, 3, 1, "", "BNC1High"], [59, 3, 1, "", "Condition1"], [59, 3, 1, "", "GlobalCounter1End"], [59, 3, 1, "", "GlobalTimer1End"], [59, 3, 1, "", "GlobalTimer1Start"], [59, 3, 1, "", "PA1_Port1In"], [59, 3, 1, "", "Port1In"], [59, 3, 1, "", "Tup"], [59, 3, 1, "", "Wire1High"], [59, 2, 1, "", "is_condition"], [59, 2, 1, "", "is_global_counter_end"], [59, 2, 1, "", "is_global_timer_cancel"], [59, 2, 1, "", "is_global_timer_end"], [59, 2, 1, "", "is_global_timer_start"], [59, 2, 1, "", "is_global_timer_trigger"], [59, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.bpod_io.BpodIO.OutputChannels": [[59, 3, 1, "", "BNC1High"], [59, 3, 1, "", "GlobalCounterReset"], [59, 3, 1, "", "GlobalTimer1Cancel"], [59, 3, 1, "", "GlobalTimer1Trig"], [59, 3, 1, "", "Serial1"], [59, 3, 1, "", "SoftCode1"], [59, 3, 1, "", "Valve"], [59, 3, 1, "", "Wire1High"]], "village.pybpodapi.bpod.hardware": [[61, 0, 0, "-", "channels"], [66, 0, 0, "-", "events"], [71, 0, 0, "-", "hardware"], [73, 0, 0, "-", "input_channels"], [76, 0, 0, "-", "output_channels"]], "village.pybpodapi.bpod.hardware.channels": [[62, 1, 1, "", "ChannelName"], [63, 1, 1, "", "ChannelType"], [64, 1, 1, "", "Channels"], [65, 1, 1, "", "EventsPositions"]], "village.pybpodapi.bpod.hardware.channels.ChannelName": [[62, 3, 1, "", "BNC"], [62, 3, 1, "", "PWM"], [62, 3, 1, "", "SERIAL"], [62, 3, 1, "", "VALVE"], [62, 3, 1, "", "WIRE"], [62, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.channels.ChannelType": [[63, 3, 1, "", "INPUT"], [63, 3, 1, "", "OUTPUT"], [63, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.channels.Channels": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "get_event_name"], [64, 2, 1, "", "setup_input_channels"], [64, 2, 1, "", "setup_output_channels"]], "village.pybpodapi.bpod.hardware.channels.EventsPositions": [[65, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.events": [[67, 0, 0, "-", "base_eventname"], [69, 0, 0, "-", "bpod_events"]], "village.pybpodapi.bpod.hardware.events.base_eventname": [[68, 1, 1, "", "BaseEventName"]], "village.pybpodapi.bpod.hardware.events.base_eventname.BaseEventName": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "is_condition"], [68, 2, 1, "", "is_global_counter_end"], [68, 2, 1, "", "is_global_timer_cancel"], [68, 2, 1, "", "is_global_timer_end"], [68, 2, 1, "", "is_global_timer_start"], [68, 2, 1, "", "is_global_timer_trigger"], [68, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.hardware.events.bpod_events": [[70, 1, 1, "", "EventName"]], "village.pybpodapi.bpod.hardware.events.bpod_events.EventName": [[70, 3, 1, "", "BNC1High"], [70, 3, 1, "", "Condition1"], [70, 3, 1, "", "GlobalCounter1End"], [70, 3, 1, "", "GlobalTimer1End"], [70, 3, 1, "", "GlobalTimer1Start"], [70, 3, 1, "", "PA1_Port1In"], [70, 3, 1, "", "Port1In"], [70, 3, 1, "", "Tup"], [70, 3, 1, "", "Wire1High"], [70, 2, 1, "", "__init__"], [70, 2, 1, "", "is_condition"], [70, 2, 1, "", "is_global_counter_end"], [70, 2, 1, "", "is_global_timer_cancel"], [70, 2, 1, "", "is_global_timer_end"], [70, 2, 1, "", "is_global_timer_start"], [70, 2, 1, "", "is_global_timer_trigger"], [70, 2, 1, "", "is_state_timer"]], "village.pybpodapi.bpod.hardware.hardware": [[72, 1, 1, "", "Hardware"]], "village.pybpodapi.bpod.hardware.hardware.Hardware": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "setup"]], "village.pybpodapi.bpod.hardware.input_channels": [[74, 0, 0, "-", "bpod_input_channels"]], "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels": [[75, 1, 1, "", "InputName"]], "village.pybpodapi.bpod.hardware.input_channels.bpod_input_channels.InputName": [[75, 3, 1, "", "BNC1"], [75, 3, 1, "", "BNC2"], [75, 3, 1, "", "Port1"], [75, 3, 1, "", "Port2"], [75, 3, 1, "", "Port3"], [75, 3, 1, "", "Port4"], [75, 3, 1, "", "Port5"], [75, 3, 1, "", "Port6"], [75, 3, 1, "", "Port7"], [75, 3, 1, "", "Port8"], [75, 3, 1, "", "Serial1"], [75, 3, 1, "", "Serial2"], [75, 3, 1, "", "Serial3"], [75, 3, 1, "", "USB1"], [75, 3, 1, "", "Wire1"], [75, 3, 1, "", "Wire2"], [75, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.hardware.output_channels": [[77, 0, 0, "-", "bpod_output_channels"]], "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels": [[78, 1, 1, "", "OutputChannel"]], "village.pybpodapi.bpod.hardware.output_channels.bpod_output_channels.OutputChannel": [[78, 3, 1, "", "BNC1High"], [78, 3, 1, "", "GlobalCounterReset"], [78, 3, 1, "", "GlobalTimer1Cancel"], [78, 3, 1, "", "GlobalTimer1Trig"], [78, 3, 1, "", "Serial1"], [78, 3, 1, "", "SoftCode1"], [78, 3, 1, "", "Valve"], [78, 3, 1, "", "Wire1High"], [78, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.non_blockingsocketreceive": [[80, 1, 1, "", "NonBlockingSocketReceive"], [81, 4, 1, "", "UnexpectedEndOfStream"]], "village.pybpodapi.bpod.non_blockingsocketreceive.NonBlockingSocketReceive": [[80, 2, 1, "", "__init__"]], "village.pybpodapi.bpod.non_blockingstreamreader": [[83, 1, 1, "", "NonBlockingStreamReader"], [84, 4, 1, "", "UnexpectedEndOfStream"]], "village.pybpodapi.bpod.non_blockingstreamreader.NonBlockingStreamReader": [[83, 2, 1, "", "__init__"]], "village.pybpodapi.bpod_modules": [[87, 0, 0, "-", "bpod_module"], [89, 0, 0, "-", "bpod_modules"]], "village.pybpodapi.bpod_modules.bpod_module": [[88, 1, 1, "", "BpodModule"]], "village.pybpodapi.bpod_modules.bpod_module.BpodModule": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "load_message"]], "village.pybpodapi.bpod_modules.bpod_modules": [[90, 1, 1, "", "BpodModules"]], "village.pybpodapi.bpod_modules.bpod_modules.BpodModules": [[90, 2, 1, "", "__init__"]], "village.pybpodapi.com": [[92, 0, 0, "-", "arcom"], [96, 0, 0, "-", "messaging"], [131, 0, 0, "-", "protocol"], [136, 0, 0, "-", "stderr_buffer"], [138, 0, 0, "-", "stdout_buffer"]], "village.pybpodapi.com.arcom": [[93, 1, 1, "", "ArCOM"], [94, 1, 1, "", "ArduinoTypes"], [95, 1, 1, "", "DataType"]], "village.pybpodapi.com.arcom.ArCOM": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "bytes_available"], [93, 2, 1, "", "close"], [93, 2, 1, "", "open"]], "village.pybpodapi.com.arcom.ArduinoTypes": [[94, 2, 1, "", "__init__"]], "village.pybpodapi.com.arcom.DataType": [[95, 2, 1, "", "__init__"]], "village.pybpodapi.com.messaging": [[97, 0, 0, "-", "base_message"], [99, 0, 0, "-", "debug"], [101, 0, 0, "-", "end_trial"], [103, 0, 0, "-", "error"], [105, 0, 0, "-", "event_occurrence"], [107, 0, 0, "-", "event_resume"], [109, 0, 0, "-", "parser"], [111, 0, 0, "-", "session_info"], [113, 0, 0, "-", "softcode_occurrence"], [115, 0, 0, "-", "state_occurrence"], [117, 0, 0, "-", "state_transition"], [119, 0, 0, "-", "stderr"], [121, 0, 0, "-", "stdout"], [123, 0, 0, "-", "trial"], [125, 0, 0, "-", "untagged_message"], [127, 0, 0, "-", "value"], [129, 0, 0, "-", "warning"]], "village.pybpodapi.com.messaging.base_message": [[98, 1, 1, "", "BaseMessage"]], "village.pybpodapi.com.messaging.base_message.BaseMessage": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "check_type"], [98, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.debug": [[100, 1, 1, "", "DebugMessage"]], "village.pybpodapi.com.messaging.debug.DebugMessage": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "check_type"], [100, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.end_trial": [[102, 1, 1, "", "EndTrial"]], "village.pybpodapi.com.messaging.end_trial.EndTrial": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "check_type"], [102, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.error": [[104, 1, 1, "", "ErrorMessage"]], "village.pybpodapi.com.messaging.error.ErrorMessage": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "check_type"], [104, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.event_occurrence": [[106, 1, 1, "", "EventOccurrence"]], "village.pybpodapi.com.messaging.event_occurrence.EventOccurrence": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "check_type"], [106, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.event_resume": [[108, 1, 1, "", "EventResume"]], "village.pybpodapi.com.messaging.event_resume.EventResume": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "check_type"], [108, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.parser": [[110, 1, 1, "", "MessageParser"]], "village.pybpodapi.com.messaging.parser.MessageParser": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.session_info": [[112, 1, 1, "", "SessionInfo"]], "village.pybpodapi.com.messaging.session_info.SessionInfo": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "check_type"], [112, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.softcode_occurrence": [[114, 1, 1, "", "SoftcodeOccurrence"]], "village.pybpodapi.com.messaging.softcode_occurrence.SoftcodeOccurrence": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "check_type"], [114, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.state_occurrence": [[116, 1, 1, "", "StateOccurrence"]], "village.pybpodapi.com.messaging.state_occurrence.StateOccurrence": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "check_type"], [116, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.state_transition": [[118, 1, 1, "", "StateTransition"]], "village.pybpodapi.com.messaging.state_transition.StateTransition": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "check_type"], [118, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.stderr": [[120, 1, 1, "", "StderrMessage"]], "village.pybpodapi.com.messaging.stderr.StderrMessage": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "check_type"], [120, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.stdout": [[122, 1, 1, "", "StdoutMessage"]], "village.pybpodapi.com.messaging.stdout.StdoutMessage": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "check_type"], [122, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.trial": [[124, 1, 1, "", "Trial"]], "village.pybpodapi.com.messaging.trial.Trial": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "check_type"], [124, 2, 1, "", "fromlist"], [124, 2, 1, "", "get_all_timestamps_by_event"], [124, 2, 1, "", "get_events_names"], [124, 2, 1, "", "get_timestamps_by_event_name"]], "village.pybpodapi.com.messaging.untagged_message": [[126, 1, 1, "", "UntaggedMessage"]], "village.pybpodapi.com.messaging.untagged_message.UntaggedMessage": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "check_type"], [126, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.value": [[128, 1, 1, "", "ValueMessage"]], "village.pybpodapi.com.messaging.value.ValueMessage": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "check_type"], [128, 2, 1, "", "fromlist"]], "village.pybpodapi.com.messaging.warning": [[130, 1, 1, "", "WarningMessage"]], "village.pybpodapi.com.messaging.warning.WarningMessage": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "check_type"], [130, 2, 1, "", "fromlist"]], "village.pybpodapi.com.protocol": [[132, 0, 0, "-", "recv_msg_headers"], [134, 0, 0, "-", "send_msg_headers"]], "village.pybpodapi.com.protocol.recv_msg_headers": [[133, 1, 1, "", "ReceiveMessageHeader"]], "village.pybpodapi.com.protocol.recv_msg_headers.ReceiveMessageHeader": [[133, 3, 1, "", "ENABLE_PORTS_OK"], [133, 3, 1, "", "HANDSHAKE_OK"], [133, 3, 1, "", "LOAD_SERIAL_MESSAGE_OK"], [133, 3, 1, "", "MODULE_EVENT_NAMES"], [133, 3, 1, "", "MODULE_REQUESTED_EVENT"], [133, 3, 1, "", "RESET_SERIAL_MESSAGES"], [133, 3, 1, "", "STATE_MACHINE_INSTALLATION_STATUS"], [133, 3, 1, "", "SYNC_CHANNEL_MODE_OK"], [133, 2, 1, "", "__init__"]], "village.pybpodapi.com.protocol.send_msg_headers": [[135, 1, 1, "", "SendMessageHeader"]], "village.pybpodapi.com.protocol.send_msg_headers.SendMessageHeader": [[135, 3, 1, "", "DISCONNECT"], [135, 3, 1, "", "ECHO_SOFTCODE"], [135, 3, 1, "", "ENABLE_PORTS"], [135, 3, 1, "", "EXIT_AND_RETURN"], [135, 3, 1, "", "FIRMWARE_VERSION"], [135, 3, 1, "", "GET_MODULES"], [135, 3, 1, "", "GET_TIMESTAMP_TRANSMISSION"], [135, 3, 1, "", "HANDSHAKE"], [135, 3, 1, "", "HARDWARE_DESCRIPTION"], [135, 3, 1, "", "LOAD_SERIAL_MESSAGE"], [135, 3, 1, "", "MANUAL_OVERRIDE_EXEC_EVENT"], [135, 3, 1, "", "NEW_STATE_MATRIX"], [135, 3, 1, "", "OVERRIDE_DIGITAL_HW_STATE"], [135, 3, 1, "", "RESET_CLOCK"], [135, 3, 1, "", "RESET_SERIAL_MESSAGES"], [135, 3, 1, "", "RUN_STATE_MACHINE"], [135, 3, 1, "", "SEND_TO_HW_SERIAL"], [135, 3, 1, "", "SET_MODULE_RELAY"], [135, 3, 1, "", "SYNC_CHANNEL_MODE"], [135, 3, 1, "", "TRIGGER_SOFTCODE"], [135, 3, 1, "", "WRITE_TO_MODULE"], [135, 2, 1, "", "__init__"]], "village.pybpodapi.com.stderr_buffer": [[137, 1, 1, "", "StderrBuffer"]], "village.pybpodapi.com.stderr_buffer.StderrBuffer": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "close"], [137, 2, 1, "", "detach"], [137, 3, 1, "", "encoding"], [137, 3, 1, "", "errors"], [137, 2, 1, "", "fileno"], [137, 2, 1, "", "flush"], [137, 2, 1, "", "getvalue"], [137, 2, 1, "", "isatty"], [137, 3, 1, "", "newlines"], [137, 2, 1, "", "read"], [137, 2, 1, "", "readable"], [137, 2, 1, "", "readline"], [137, 2, 1, "", "readlines"], [137, 2, 1, "", "seek"], [137, 2, 1, "", "seekable"], [137, 2, 1, "", "tell"], [137, 2, 1, "", "truncate"], [137, 2, 1, "", "writable"], [137, 2, 1, "", "write"], [137, 2, 1, "", "writelines"]], "village.pybpodapi.com.stdout_buffer": [[139, 1, 1, "", "StdoutBuffer"]], "village.pybpodapi.com.stdout_buffer.StdoutBuffer": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "close"], [139, 2, 1, "", "detach"], [139, 3, 1, "", "encoding"], [139, 3, 1, "", "errors"], [139, 2, 1, "", "fileno"], [139, 2, 1, "", "flush"], [139, 2, 1, "", "getvalue"], [139, 2, 1, "", "isatty"], [139, 3, 1, "", "newlines"], [139, 2, 1, "", "read"], [139, 2, 1, "", "readable"], [139, 2, 1, "", "readline"], [139, 2, 1, "", "readlines"], [139, 2, 1, "", "seek"], [139, 2, 1, "", "seekable"], [139, 2, 1, "", "tell"], [139, 2, 1, "", "truncate"], [139, 2, 1, "", "writable"], [139, 2, 1, "", "write"], [139, 2, 1, "", "writelines"]], "village.pybpodapi.exceptions": [[141, 0, 0, "-", "bpod_error"]], "village.pybpodapi.exceptions.bpod_error": [[142, 4, 1, "", "BpodErrorException"]], "village.pybpodapi.session": [[145, 1, 1, "", "Session"], [146, 1, 1, "", "StreamsWrapper"]], "village.pybpodapi.session.Session": [[145, 2, 1, "", "__init__"], [145, 6, 1, "", "current_trial"]], "village.pybpodapi.session.StreamsWrapper": [[146, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine": [[148, 1, 1, "", "StateMachine"], [149, 0, 0, "-", "conditions"], [151, 0, 0, "-", "global_counters"], [153, 0, 0, "-", "global_timers"], [155, 0, 0, "-", "state_machine_base"], [158, 0, 0, "-", "state_machine_builder"], [161, 0, 0, "-", "state_machine_runner"]], "village.pybpodapi.state_machine.StateMachine": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "add_state"], [148, 2, 1, "", "build_message"], [148, 2, 1, "", "build_message_32_bits"], [148, 2, 1, "", "set_condition"], [148, 2, 1, "", "set_global_counter"], [148, 2, 1, "", "set_global_timer"], [148, 2, 1, "", "set_global_timer_legacy"], [148, 2, 1, "", "update_state_numbers"]], "village.pybpodapi.state_machine.conditions": [[150, 1, 1, "", "Conditions"]], "village.pybpodapi.state_machine.conditions.Conditions": [[150, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine.global_counters": [[152, 1, 1, "", "GlobalCounters"]], "village.pybpodapi.state_machine.global_counters.GlobalCounters": [[152, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine.global_timers": [[154, 1, 1, "", "GlobalTimers"]], "village.pybpodapi.state_machine.global_timers.GlobalTimers": [[154, 2, 1, "", "__init__"]], "village.pybpodapi.state_machine.state_machine_base": [[156, 4, 1, "", "SMAError"], [157, 1, 1, "", "StateMachineBase"]], "village.pybpodapi.state_machine.state_machine_base.StateMachineBase": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "add_state"], [157, 2, 1, "", "set_condition"], [157, 2, 1, "", "set_global_counter"], [157, 2, 1, "", "set_global_timer"], [157, 2, 1, "", "set_global_timer_legacy"]], "village.pybpodapi.state_machine.state_machine_builder": [[159, 1, 1, "", "StateMachineBuilder"], [160, 4, 1, "", "StateMachineBuilderError"]], "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilder": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "add_state"], [159, 2, 1, "", "build_message"], [159, 2, 1, "", "build_message_32_bits"], [159, 2, 1, "", "set_condition"], [159, 2, 1, "", "set_global_counter"], [159, 2, 1, "", "set_global_timer"], [159, 2, 1, "", "set_global_timer_legacy"], [159, 2, 1, "", "update_state_numbers"]], "village.pybpodapi.state_machine.state_machine_runner": [[162, 1, 1, "", "StateMachineRunner"], [163, 4, 1, "", "StateMachineRunnerError"]], "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunner": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "add_state"], [162, 2, 1, "", "build_message"], [162, 2, 1, "", "build_message_32_bits"], [162, 2, 1, "", "set_condition"], [162, 2, 1, "", "set_global_counter"], [162, 2, 1, "", "set_global_timer"], [162, 2, 1, "", "set_global_timer_legacy"], [162, 2, 1, "", "update_state_numbers"]], "village.pybpodapi.utils": [[165, 0, 0, "-", "csv"], [168, 0, 0, "-", "date_parser"]], "village.pybpodapi.utils.csv": [[166, 1, 1, "", "Reader"], [167, 1, 1, "", "Writer"]], "village.pybpodapi.utils.csv.Reader": [[166, 2, 1, "", "__init__"]], "village.pybpodapi.utils.csv.Writer": [[167, 2, 1, "", "__init__"]], "village.pybpodapi.utils.date_parser": [[169, 5, 1, "", "parse"]], "village.rt_plots": [[171, 1, 1, "", "RTPlots"]], "village.rt_plots.RTPlots": [[171, 2, 1, "", "__init__"]], "village.screen": [[173, 0, 0, "-", "behaviour_window"]], "village.screen.behaviour_window": [[174, 1, 1, "", "BehaviourWindow"]], "village.screen.behaviour_window.BehaviourWindow": [[174, 2, 1, "", "__init__"]], "village.time_utils": [[176, 1, 1, "", "TimeUtils"]], "village.time_utils.TimeUtils": [[176, 2, 1, "", "__init__"]], "village.video": [[178, 1, 1, "", "Example"]], "village.video.Example": [[178, 2, 1, "", "__init__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:property"}, "terms": {"": [80, 135, 148, 157, 159, 162, 180, 181, 186, 188, 190, 192, 195, 202, 203, 206, 208], "0": [51, 53, 55, 57, 59, 88, 137, 139, 148, 157, 159, 162, 185, 186, 203], "0x4": [51, 53, 55, 57, 59, 135], "0x45": [200, 201], "0x64": [200, 201], "1": [4, 5, 6, 7, 8, 9, 10, 11, 13, 28, 51, 53, 55, 57, 59, 63, 75, 78, 93, 133, 135, 137, 139, 148, 157, 159, 162, 185, 186, 188, 195, 198, 200, 201, 203, 206, 208], "10": [180, 181, 185, 198], "100": 185, "1000": 203, "100u": [148, 157, 159, 162], "11": 185, "110": 185, "115200": 93, "12": [180, 181, 185, 186], "120": [180, 181], "125": 185, "125khz": 185, "1280": 186, "1280x720": 192, "128gb": 186, "12v": 185, "13": 186, "14": [188, 195], "142": 185, "145": [180, 181], "1495": 185, "15": [198, 208], "15g": 198, "16": [180, 181, 188, 195], "160": 185, "17": 185, "1800": 208, "19": 185, "1kg": 198, "2": [51, 53, 55, 57, 59, 63, 75, 137, 139, 180, 181, 185, 186, 188, 195, 198, 203, 206, 208], "20": [185, 188, 195], "200": 185, "2000": [180, 181], "20cm": 185, "20la": 185, "20x20": 185, "220": [180, 181], "228": 185, "24": [180, 181, 185, 188, 195], "24\u00bac": 203, "25": [148, 157, 159, 162], "250": 157, "2500": 208, "255": [51, 53, 55, 57, 59, 148, 157, 159, 162], "256gb": 185, "2600": 208, "2800": 208, "29": 185, "2a": 185, "2afc_protocol": [51, 53, 55, 57, 59], "2chan": 186, "2m": 185, "2mm": 185, "3": [28, 51, 53, 55, 57, 59, 75, 78, 135, 180, 181, 186, 188, 195, 203, 208, 209], "30": [180, 181, 185], "3000": [180, 181], "300g": 198, "30x30": 185, "32": [148, 159, 162, 185], "35": 133, "3600": [148, 157, 159, 162, 208], "37": 185, "3d": [180, 181, 182, 183, 184, 188, 195, 199], "3gwy4": 185, "3mf": 198, "3mm": 185, "4": [51, 53, 55, 57, 59, 75, 135, 180, 181, 185, 186, 188, 195, 203], "40": [180, 181, 188, 195, 198, 208], "429496": 124, "4300": 185, "4mm": 185, "5": [75, 133, 148, 157, 159, 162, 185, 186, 198, 202, 203], "50": [185, 203, 208], "500": [180, 181, 185, 203, 208], "50cm": 185, "50g": 198, "54": 185, "5m": 185, "5mm": 185, "5v": 185, "6": [75, 135, 185, 203], "600": 203, "69": 133, "6mm": 185, "7": [75, 180, 181, 185, 188, 195], "70": [188, 195], "700g": 198, "720": 186, "7295": 124, "79": 185, "8": [75, 185, 188, 195], "80": 185, "8gb": [185, 186], "9": 185, "90": [180, 181], "90g": 198, "95": 185, "98": 185, "99": [185, 186], "A": [22, 148, 157, 159, 162, 180, 181, 202, 206], "AND": [188, 195], "As": [180, 181], "At": 208, "Be": 203, "But": [180, 181], "By": [180, 181, 188, 195, 208], "For": [180, 181, 182, 183, 185, 186, 192, 198, 202, 203, 206, 208], "If": [137, 139, 148, 157, 159, 162, 180, 181, 182, 183, 185, 186, 200, 201, 202, 203, 206, 208], "In": [180, 181, 186, 188, 192, 195, 202, 205, 206, 208], "It": [98, 180, 181, 203, 206], "No": [180, 181], "Not": 203, "ON": 202, "On": [180, 181, 188, 195, 202], "Or": [180, 181], "That": [180, 181], "The": [22, 23, 51, 53, 55, 57, 59, 133, 135, 137, 139, 148, 157, 159, 162, 180, 181, 185, 186, 192, 198, 200, 201, 202, 205, 206, 208, 209], "Then": [180, 181, 186], "There": [185, 192], "These": [62, 63, 70, 75, 78, 180, 181, 185, 188, 195, 206, 208], "To": [186, 188, 195, 206, 208], "With": [188, 195], "__init__": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 32, 33, 37, 38, 41, 44, 48, 51, 53, 55, 57, 59, 62, 63, 64, 65, 68, 70, 72, 75, 78, 80, 83, 88, 90, 93, 94, 95, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 133, 135, 137, 139, 145, 146, 148, 150, 152, 154, 157, 159, 162, 166, 167, 171, 174, 176, 178, 206], "_arcom": [55, 57], "_bpodbase__process_opcod": [51, 53, 55, 57, 59], "_bpodbase__update_timestamp": [51, 53, 55, 57, 59], "_condition1": [27, 51, 53, 55, 57, 59, 70], "_globalcounter1_end": [27, 51, 53, 55, 57, 59, 70], "_globalcounterreset": [28, 51, 53, 55, 57, 59, 78], "_globaltimer1_end": [27, 51, 53, 55, 57, 59, 70], "_globaltimer1_start": [27, 51, 53, 55, 57, 59, 70], "_globaltimercancel": [28, 51, 53, 55, 57, 59, 78], "_globaltimertrig": [28, 51, 53, 55, 57, 59, 78], "_tup": [27, 51, 53, 55, 57, 59, 70, 124, 148, 157, 159, 162], "a49": 203, "abl": [180, 181, 193], "abnorm": 203, "about": [145, 180, 181, 188, 195, 198], "abov": [180, 181, 202, 203, 208], "absolut": [137, 139], "abstract": 53, "academi": [193, 203], "access": [180, 181, 182, 183, 188, 190, 194, 195, 202, 203], "accident": [180, 181], "accord": [62, 63, 70, 75, 78], "accordingli": [51, 53, 55, 57, 59, 202], "account": [192, 208], "accur": [202, 208], "accuraci": [198, 208], "acid": [180, 181, 209], "acquir": 206, "acquisit": [180, 181], "across": [180, 181], "acryl": [185, 188, 195], "action": [55, 57, 148, 157, 159, 162, 202, 203, 205, 206], "activ": [180, 181, 182, 183, 186, 193, 202, 208], "actual": [148, 159, 162], "ad": [137, 139, 157, 180, 181], "adapt": [188, 195], "add": [51, 53, 55, 57, 59, 148, 157, 159, 162, 180, 181, 186, 192], "add_stat": [148, 157, 159, 162], "addict": [180, 181], "addit": [186, 202, 206, 208], "addition": [188, 195], "address": [41, 42, 44, 45, 192, 200, 201], "adequ": 206, "adjust": [180, 181, 188, 195, 203, 206, 208], "admin": 193, "administ": [180, 181], "administr": [180, 181, 193], "advanc": [180, 181, 186, 206], "advantag": [180, 181], "advis": [180, 181], "affect": [157, 159, 203, 208], "after": [137, 139, 180, 181, 182, 183, 186, 203, 206, 208], "after_tri": 206, "again": 203, "aim": [180, 181], "alarm": [180, 181, 202, 209, 216], "alarm_set": 23, "alert": [188, 195], "algorithm": 208, "align": [203, 208], "all": [137, 139, 148, 157, 159, 162, 180, 181, 182, 183, 185, 186, 188, 193, 195, 198, 202, 203, 206, 208, 209], "allow": [180, 181, 186, 188, 192, 193, 195, 202, 203, 205, 208], "along": [182, 183, 186, 202], "alreadi": [53, 137, 139], "also": [180, 181, 188, 190, 192, 195, 198, 203, 206, 208], "altern": [184, 192], "although": [188, 195, 202], "alwai": [137, 139, 180, 181, 202, 203], "am": [180, 181], "amazon": [180, 181], "amount": [180, 181, 203], "an": [22, 72, 88, 93, 106, 108, 114, 130, 137, 139, 148, 157, 159, 162, 180, 181, 182, 183, 188, 192, 195, 197, 198, 202, 203, 206, 208, 216], "analog": [51, 53, 55, 57, 59, 62], "angl": 205, "ani": [23, 137, 139, 148, 157, 159, 162, 180, 181, 182, 183, 186, 188, 192, 195, 202, 206, 208], "anim": [180, 181, 182, 183, 188, 195, 202, 203, 206, 216], "annoi": 203, "anoth": [180, 181, 188, 195, 202, 208], "antenna": [203, 208], "anyon": [157, 159], "api": [53, 110], "appear": [186, 202], "applic": [137, 139], "approach": [180, 181, 206], "approxim": [180, 181], "apt": [186, 200, 201], "ar": [23, 51, 53, 55, 57, 59, 124, 137, 139, 148, 157, 159, 162, 180, 181, 182, 183, 185, 186, 188, 192, 195, 200, 201, 202, 203, 206, 208], "arcom": [55, 57], "arduino": [93, 203], "area": [203, 208], "arg": [4, 5, 6, 7, 8, 9, 10, 11, 13], "argument": [137, 139], "around": [180, 181, 188, 195, 208], "arrang": 198, "artifact": 208, "ask": 186, "asleep": [180, 181], "assembl": [182, 183, 185], "assembli": [182, 183, 185, 187], "assess": [180, 181, 203, 209], "assign": [148, 157, 159, 162, 186, 202], "associ": [88, 106, 108, 114, 148, 157, 159, 162, 186], "assum": [180, 181], "attach": [188, 195], "attempt": [137, 139, 202, 208], "attend": [180, 181], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 27, 28, 37, 41, 44, 51, 53, 55, 57, 59, 62, 63, 70, 72, 75, 78, 90, 94, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 133, 135, 137, 139, 145, 148, 162], "auditori": [188, 195], "auto": [186, 202], "autom": [188, 195, 208], "automat": [148, 157, 159, 162, 180, 181, 182, 183, 188, 192, 195, 202, 206], "automatis": [180, 181, 188, 195], "avail": [62, 75, 78, 185, 188, 195, 202], "averag": [188, 195], "avers": [180, 181], "aw": [180, 181], "awai": [180, 181], "b": [180, 181], "back": [180, 181, 203], "background": 202, "backup": [182, 183, 194], "bad": 203, "bahsrc": 186, "balanc": [188, 195], "bambu": 198, "bambulab": 198, "ban": [180, 181], "basal": 203, "basal_weight": 202, "base": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 32, 33, 37, 38, 41, 44, 48, 51, 53, 55, 57, 59, 62, 63, 64, 65, 68, 70, 72, 75, 78, 80, 83, 88, 90, 93, 94, 95, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 133, 135, 137, 139, 145, 146, 148, 150, 152, 154, 157, 159, 162, 166, 167, 171, 174, 176, 178, 180, 181, 185, 188, 195, 202, 206, 208], "base_messag": [120, 122], "baseeventnam": 70, "baselin": 202, "basemessag": [100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130], "bashrc": 186, "basic": [185, 186], "batch": [180, 181], "batteri": [180, 181], "baudrat": [51, 53, 55, 57, 59, 93], "bcontrol": [188, 195], "beam": 203, "becaus": [180, 181, 188, 195, 203], "becom": 203, "been": [98, 137, 139, 157, 180, 181, 188, 195, 203, 208], "befor": [148, 157, 159, 162, 192, 208], "begin": 208, "behavior": [180, 181, 186, 190, 202, 203, 206, 208, 209], "being": [157, 162, 203], "below": [184, 185, 203, 208, 209], "benefit": [180, 181], "best": [180, 181, 188, 195], "better": [180, 181, 188, 195], "between": [51, 53, 55, 57, 59, 93, 148, 157, 159, 162, 180, 181, 202, 203, 208], "beyond": 208, "bias": [180, 181], "bigger": [51, 53, 55, 57, 59], "bin": 186, "binari": [148, 157, 159, 162], "bit": [148, 159, 162], "black": 208, "blank": 186, "blind": [180, 181], "block": [137, 139, 180, 181], "blocker": 185, "blue": [203, 208], "bnc": [27, 28, 51, 53, 55, 57, 59, 62, 70, 78], "bnc1": [28, 51, 53, 55, 57, 59, 75, 78], "bnc1high": [27, 28, 51, 53, 55, 57, 59, 70, 78], "bnc2": 75, "board": [51, 53, 55, 57, 59, 98, 100, 106, 108, 114, 185], "board_messag": [102, 104, 112, 126, 128], "board_timestamp": [106, 108, 114], "boardmessag": [102, 104, 112, 120, 122, 126, 128], "bonsai": [188, 195], "bool": [27, 51, 53, 55, 57, 59, 68, 70, 157, 162], "boot": [186, 192], "bore": [180, 181, 188, 195], "bot": [180, 181, 186, 194], "botfath": 193, "both": [182, 183, 186, 202, 206, 208], "bottl": [185, 203, 209], "bottom": [185, 190, 198, 202], "boundari": [4, 5, 6, 7, 8, 9, 10, 11, 13], "box": [51, 53, 55, 57, 59, 75, 148, 157, 159, 162, 180, 181, 186, 198, 202, 203, 206, 208, 209], "bpod": [53, 55, 57, 59, 62, 63, 64, 70, 72, 75, 78, 88, 90, 106, 108, 114, 122, 133, 135, 145, 148, 157, 159, 162, 180, 181, 186, 188, 190, 195, 203], "bpod_bas": [51, 53, 55, 57, 59], "bpod_set": 23, "bpod_workspac": [51, 53, 55, 57, 59], "bpodbas": [51, 55, 57, 59], "bpodcomprotocol": 57, "bpodcomprotocolmodul": 59, "bpodio": 51, "brain": [188, 195], "braincircuitsbehaviorlab": 186, "briefli": [180, 181], "bright": 208, "browser": [184, 186], "buffer": [137, 139], "bui": 185, "build": [51, 53, 55, 57, 59, 135, 148, 159, 162, 184, 185, 188, 195, 198], "build_messag": [148, 159, 162], "build_message_32_bit": [148, 159, 162], "builder": 159, "built": 208, "button": [202, 203, 205], "buzzer": [180, 181, 203], "byte": [51, 53, 55, 57, 59, 133, 135, 137, 139], "bytes_avail": 93, "c": [135, 180, 181], "cabl": [185, 186, 192, 203], "cad": 185, "cage": [180, 181, 185, 188, 195, 203, 209], "calibr": [202, 203, 209, 216], "call": [180, 181, 206], "cam": 203, "camelcas": 206, "camera": [180, 181, 182, 183, 185, 186, 188, 190, 195, 202, 203, 208], "camera_set": 23, "can": [22, 51, 53, 55, 57, 59, 137, 139, 148, 157, 159, 162, 180, 181, 182, 183, 184, 185, 186, 188, 195, 202, 203, 206, 208, 209], "cannot": [180, 181, 182, 183, 185], "cannula": [180, 181], "cap": [180, 181], "capac": [188, 195], "capsul": [182, 183, 185], "captur": [148, 157, 159, 162, 202], "card": [182, 183, 186], "carri": [180, 181, 188, 195], "case": [180, 181, 186, 208], "catch": [180, 181], "categori": 23, "caus": [148, 157, 159, 162, 180, 181, 188, 195], "cd": [186, 203], "center": 202, "central": [185, 188, 195, 198], "certain": [188, 195, 206], "challeng": 186, "chamber": [180, 181, 185, 188, 195], "chang": [106, 108, 114, 137, 139, 148, 157, 159, 162, 200, 201, 203, 205, 206, 209], "channel": [51, 53, 55, 57, 59, 62, 63, 75, 78, 135, 148, 157, 159, 162], "channel_nam": [51, 55, 57, 59], "channel_numb": [51, 55, 57, 59], "channel_typ": [51, 55, 57, 59], "channel_valu": [148, 157, 159, 162], "channelnam": [51, 53, 55, 57, 59], "channeltyp": [51, 53, 55, 57, 59], "charact": [133, 135, 137, 139, 148, 157, 159, 162], "chat": 193, "check": [180, 181, 182, 183, 186, 188, 195, 200, 201, 202, 203, 205, 208, 209], "check_typ": [98, 100, 102, 104, 106, 108, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130], "choic": [188, 195], "choos": [186, 206], "chromium": 186, "circuit": [188, 195], "circumst": [180, 181], "citric": [180, 181, 209], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 206], "classmethod": [98, 100, 102, 104, 106, 108, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130], "clean": [203, 209], "click": [186, 202], "clock": 135, "clone": [186, 206], "close": [38, 51, 53, 55, 57, 59, 93, 137, 139, 180, 181, 203, 205, 206], "closest": 190, "cloud": [180, 181], "cm": 185, "cmdline": 186, "code": [38, 51, 53, 55, 57, 59, 70, 133, 135, 157, 180, 181, 186, 188, 192, 195, 199, 200, 201], "cognit": [180, 181, 188, 195], "collabor": 197, "collect": [188, 195], "color": 208, "column": 2, "columns_head": 167, "com": [40, 55, 57, 102, 104, 112, 120, 122, 126, 128, 185, 186, 188, 195], "combin": [180, 181, 206, 208], "come": [180, 181, 188, 195, 203, 208], "comfort": 186, "command": [51, 53, 55, 57, 59, 133, 182, 183, 186, 193], "comment": 185, "commerci": 192, "common": [180, 181, 203], "commun": [53, 55, 57, 203], "compar": [180, 181, 188, 195], "compat": [157, 159, 180, 181], "competit": [180, 181], "complet": [148, 157, 159, 162, 182, 183, 188, 195, 202, 206], "complex": [188, 195], "compon": [182, 183, 184, 185, 188, 195, 203, 216], "compos": [188, 195], "comprehens": 184, "compress": 135, "comput": [188, 192, 195], "condit": [27, 51, 53, 55, 57, 59, 70, 148, 157, 159, 162, 180, 181, 188, 195, 202, 208], "condition1": [27, 51, 53, 55, 57, 59, 70], "condition_channel": [148, 157, 159, 162], "condition_numb": [148, 157, 159, 162], "config": 186, "configur": [51, 53, 55, 57, 59, 135, 182, 183, 186, 188, 195, 200, 201, 202, 208, 216], "confirm": [186, 208], "connect": [38, 51, 53, 55, 57, 59, 62, 72, 88, 93, 135, 180, 181, 182, 183, 185, 186, 188, 192, 194, 195, 203], "connector": [185, 188, 195], "consequ": [180, 181], "consid": [203, 208], "consist": [188, 195, 206], "constant": [180, 181], "constantli": [180, 181], "construct": 208, "consum": [51, 53, 55, 57, 59], "consumpt": [188, 195], "contact": [180, 181, 188, 195], "contain": [22, 148, 157, 159, 162, 182, 183, 186, 206, 208], "content": [98, 100, 102, 104, 120, 122, 126, 130, 137, 139], "continu": [180, 181, 188, 195, 202, 208], "contrast": [180, 181], "control": [137, 139, 180, 181, 190, 202], "convent": 206, "convers": 193, "convert": 208, "copi": [182, 183, 186, 193], "correct": [200, 201, 203], "correctli": [200, 201, 203, 205], "correspond": [116, 118, 124, 200, 201, 202, 206, 208], "corridor": [180, 181, 185, 190, 202, 203, 209, 216], "corridor_set": 23, "cost": [180, 181, 185, 188, 195], "could": [180, 181, 206], "count": [148, 157, 159, 162, 208], "counter": [148, 157, 159, 162], "counter_numb": [148, 157, 159, 162], "countri": 186, "cover": [185, 208], "cpu": 186, "cqrobot": [185, 200, 201], "creat": [51, 53, 55, 57, 59, 124, 192, 194, 202, 208, 216], "create_tri": 206, "credenti": 192, "criteria": [180, 181], "cross": 203, "crouch": 208, "csv": 202, "cue": [180, 181], "current": [38, 51, 53, 55, 57, 59, 72, 137, 139, 145, 162, 180, 181, 188, 192, 195, 202], "current_st": 162, "current_tri": 145, "custom": [186, 188, 195], "cut": [185, 188, 195], "cycl": 202, "d": [180, 181, 186, 197], "dac": 186, "dai": [180, 181, 188, 195, 198, 202, 203, 208], "daili": [180, 181], "damag": [180, 181], "dark": 208, "darker": 208, "data": [51, 53, 55, 57, 59, 93, 135, 148, 157, 159, 162, 180, 181, 186, 188, 195, 206, 216], "data_avail": [51, 55, 57, 59], "dataset": [188, 195], "date": 169, "dateutil": 186, "daytim": [188, 195], "dc": 185, "de": [180, 181], "debug": [182, 183], "decid": [180, 181], "decis": [180, 181], "decod": [137, 139], "decreas": [180, 181, 188, 195], "def": 206, "default": [22, 137, 139, 202], "defin": [55, 57, 63, 133, 135, 180, 181, 202, 208], "dehydr": [180, 181], "delai": [188, 195], "delet": 203, "deliv": [188, 195, 202, 203], "deliveri": 209, "demand": [188, 195], "demo_project": 206, "depend": [180, 181, 185, 186, 188, 195, 208], "depriv": [180, 181], "descript": [12, 22, 23, 51, 53, 55, 57, 59, 72, 148, 157, 159, 162, 202, 203], "descriptor": [137, 139], "design": [180, 181, 186, 188, 190, 195, 208], "desktop": [51, 53, 55, 57, 59], "detach": [137, 139], "detail": [180, 181, 185, 186, 192, 202], "detect": [180, 181, 200, 201, 202, 203, 216], "determin": [137, 139, 188, 195, 208], "dev": [51, 53, 55, 57, 59, 186, 203], "develop": [188, 195], "devic": [55, 57, 72, 133, 135, 182, 183, 185, 188, 192, 194, 195, 200, 201, 203], "dfrobot": [40, 200, 201], "dfrobot_hx711_i2c": 40, "diamet": 185, "dict": [124, 148, 157, 159, 162], "dictionari": [124, 148, 157, 159, 162], "differ": [23, 180, 181, 188, 192, 195, 200, 201, 202, 203, 206, 208], "difficulti": [188, 195, 206], "digit": 135, "direct": [188, 195], "directli": [51, 53, 55, 57, 59, 184], "directori": 186, "directory_set": 23, "disabl": [186, 202], "disconnect": [135, 185, 190, 203], "dispens": 185, "displai": [182, 183, 186, 192, 202, 203], "distribut": [180, 181, 186], "dive": 206, "dmesg": 186, "do": [180, 181, 192, 203], "doe": [137, 139, 180, 181, 184, 202], "doesn": 203, "domin": [180, 181], "don": [198, 206], "done": 209, "door": [180, 181, 185, 188, 195, 202, 203, 205, 208], "down": [193, 203], "download": [182, 183, 184, 185, 186, 197], "drop": 209, "drug": [180, 181], "drunk": 203, "dtoverlai": 186, "due": [188, 192, 195, 203, 208], "durabl": 185, "durat": [148, 157, 159, 162, 180, 181, 188, 195, 208], "dure": [180, 181, 185, 192, 203, 208], "dust": 203, "duti": 209, "dynam": 186, "e": [51, 53, 55, 57, 59, 62, 135, 180, 181, 186, 188, 195, 203], "each": [137, 139, 157, 180, 181, 185, 188, 195, 202, 205, 206, 208], "easi": [180, 181, 198], "easier": 203, "easiest": 192, "easili": [182, 183], "echo": 135, "echo_softcod": 135, "eco": [188, 195], "ecohab": 203, "edit": [186, 193, 202], "effect": [137, 139, 180, 181, 182, 183, 188, 195], "effici": [188, 195], "either": [182, 183, 184, 202, 206], "electrod": [180, 181], "electron": [184, 188, 195, 203], "electrophysiolog": [180, 181], "electrophysiologi": [180, 181], "element": [188, 195], "els": [180, 181], "email": 203, "emitt": 185, "empti": [137, 139, 186, 208], "enabl": [51, 53, 55, 57, 59, 135, 180, 181, 186, 202], "enable_port": [133, 135], "enable_ports_ok": 133, "enable_uart": 186, "encod": [137, 139], "encount": [192, 206], "end": [116, 118, 135, 137, 139, 180, 181, 202, 203, 208], "end_tim": 112, "end_timestamp": 116, "enforc": 208, "engag": [180, 181], "english": 186, "enhanc": [157, 159], "enough": [208, 209], "enrich": 209, "ensur": [157, 185, 186, 188, 195, 202, 203], "enter": [148, 157, 159, 162, 180, 181, 182, 183, 188, 195, 202, 208], "entir": [137, 139, 185, 188, 195], "entranc": [180, 181, 188, 195], "entri": [110, 188, 195, 202], "enum": [13, 22, 23], "env": [182, 183, 186], "environ": [182, 183], "eof": [137, 139], "equal": [137, 139], "equip": [188, 195], "equival": [51, 53, 55, 57, 59, 135], "error": [130, 137, 139, 203, 206, 208], "escap": [180, 181, 185, 203], "especi": 186, "essenti": [182, 183, 208], "establish": [182, 183], "estim": [185, 198], "etc": [51, 55, 57, 59, 100, 180, 181, 182, 183, 186, 202], "ethernet": [186, 190, 192], "even": [157, 180, 181, 186, 206], "event": [51, 53, 55, 57, 59, 64, 70, 106, 108, 114, 124, 133, 135, 148, 157, 159, 162, 180, 181, 202, 203], "event_id": [106, 108, 114], "event_idx": 64, "event_nam": [27, 51, 53, 55, 57, 59, 68, 70, 106, 108, 114, 124], "eventnam": [27, 51, 53, 55, 57, 59], "eventoccurr": 124, "eventprotocol": 2, "events_nam": 88, "events_occurr": 124, "everi": [51, 53, 55, 57, 59, 180, 181, 206, 209], "everyth": [182, 183, 203], "ex": [148, 157, 159, 162], "exact": 186, "exampl": [51, 53, 55, 57, 59, 124, 148, 157, 159, 162, 206, 208], "exce": [137, 139, 148, 157, 159, 162, 208], "excel": [188, 195], "except": [26, 30, 31, 34, 79, 81, 82, 84, 141, 155, 156, 158, 160, 161, 163, 188, 195], "execut": [51, 53, 55, 57, 59, 135, 148, 157, 159, 162, 180, 181, 202], "exhaust": [188, 195], "exist": [137, 139, 148, 157, 159, 162, 216], "exit": [135, 148, 157, 159, 162, 180, 181, 185, 202, 203], "exit_and_return": 135, "expect": 203, "experi": [53, 100, 180, 181, 188, 195, 202], "experiment": [180, 181, 188, 195], "explain": [180, 181, 202], "explan": [186, 202], "explor": [180, 181, 203, 206], "exploratori": [180, 181], "export": [51, 53, 55, 57, 59], "extend": [159, 162], "extens": [27, 51, 53, 55, 57, 59, 70, 180, 181, 185], "extern": [180, 181, 185, 192], "extra_set": [23, 200, 201], "extrem": [180, 181], "ez": 185, "f": [135, 180, 181], "facil": [180, 181], "facilit": 208, "fact": [180, 181], "facto": [180, 181], "factori": 22, "factory_valu": 22, "fail": [180, 181, 203], "failur": [180, 181, 203], "fall": [180, 181], "fals": [88, 137, 139, 203], "fan": 186, "far": [137, 139], "faster": 186, "feed": 202, "feel": 185, "few": [180, 181, 203], "fewer": [188, 195, 203], "fi": 186, "fig1": [180, 181], "filament": [198, 208], "file": [51, 53, 55, 57, 59, 110, 137, 139, 182, 183, 185, 186, 188, 195, 199, 202, 206], "filenam": 206, "fileno": [137, 139], "filestream": [166, 167], "final": [51, 53, 55, 57, 59, 180, 181, 206], "final_task": 206, "find": [51, 55, 57, 59, 188, 195, 203], "find_module_by_nam": [51, 53, 55, 57, 59], "finish": [180, 181, 206], "finit": 157, "firmwar": [51, 53, 55, 57, 59, 62, 63, 70, 75, 78, 135, 186], "firmware_vers": [88, 135], "first": [133, 135, 148, 157, 159, 162, 180, 181, 192, 206, 208], "fit": 185, "fix": [180, 181, 203, 209], "flex": 185, "flexibl": [180, 181], "flip": [51, 53, 55, 57, 59], "float": [22, 106, 108, 114, 124, 148, 157, 159, 162], "floor": 203, "fluctuat": [180, 181], "flush": [137, 139], "focus": 202, "folder": [51, 53, 55, 57, 59, 186, 206], "follow": [148, 157, 159, 162, 182, 183, 185, 186, 192, 193, 198, 200, 201, 202, 203, 206], "follow_the_light": 206, "food": [180, 181, 185, 188, 195, 209], "forag": [180, 181, 188, 195], "forc": [180, 181], "force_hotplug": 186, "forcibli": 192, "format": 202, "found": 202, "foundat": 185, "four": [180, 181], "frame": [185, 203], "free": [180, 181, 185, 192], "freeli": [180, 181, 188, 195], "freez": 203, "frequenc": 203, "frequent": 203, "fri": [180, 181], "from": [51, 53, 55, 57, 59, 72, 80, 83, 98, 102, 104, 106, 108, 112, 114, 120, 126, 128, 133, 137, 139, 148, 157, 159, 162, 180, 181, 182, 183, 185, 188, 192, 193, 195, 202, 203, 206, 208], "fromlist": [98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130], "full": [180, 181, 184, 186, 188, 195, 198], "fulli": 208, "func": 186, "func2": 186, "function": [36, 40, 43, 51, 53, 55, 57, 59, 168, 202, 203, 205, 206, 209], "further": [137, 139, 205], "fvc4": 186, "g": [51, 53, 55, 57, 59, 62, 135, 180, 181, 188, 195, 203], "gather": [188, 195], "gener": [64, 180, 181, 186, 188, 195, 198, 206], "gentli": 205, "get": [23, 124, 135, 145, 180, 181, 186, 200, 201, 203, 205, 206], "get_all_timestamps_by_ev": 124, "get_descript": 23, "get_event_nam": 64, "get_events_nam": 124, "get_index": 23, "get_indic": 23, "get_modul": 135, "get_text": 23, "get_timestamp_transmiss": 135, "get_timestamps_by_event_nam": 124, "get_typ": 23, "get_valu": 23, "getvalu": [137, 139], "ghost": 203, "git": 186, "github": [40, 186, 188, 193, 195, 197], "give": [180, 181], "given": [148, 157, 159, 162, 180, 181], "glad": 197, "glass": 185, "global": [148, 157, 159, 162, 186], "global_count": 157, "global_tim": 157, "globalcount": 157, "globalcounter1end": [27, 51, 53, 55, 57, 59, 70], "globalcounter_end": [27, 51, 53, 55, 57, 59, 70], "globalcounterreset": [28, 51, 53, 55, 57, 59, 78], "globaltim": 157, "globaltimer1cancel": [28, 51, 53, 55, 57, 59, 78], "globaltimer1end": [27, 51, 53, 55, 57, 59, 70], "globaltimer1start": [27, 51, 53, 55, 57, 59, 70], "globaltimer1trig": [28, 51, 53, 55, 57, 59, 78], "globaltimer_end": [27, 51, 53, 55, 57, 59, 70], "globaltimer_start": [27, 51, 53, 55, 57, 59, 70], "globaltimercancel": [28, 51, 53, 55, 57, 59, 78], "globaltimertrig": [28, 51, 53, 55, 57, 59, 78], "gmail": [188, 195], "go": [180, 181, 186, 192, 193, 203], "good": [180, 181], "govern": 206, "gpl": [188, 195], "green": 208, "group": [23, 188, 193, 195, 202], "gui": [174, 182, 183, 203, 216], "guid": [182, 183], "guidanc": 185, "guillotin": [180, 181], "h": 135, "ha": [137, 139, 180, 181, 186, 188, 195, 203, 208], "hab": [188, 195], "habitu": 206, "had": [180, 181], "hand": [180, 181], "handl": [51, 53, 55, 57, 59, 148, 157, 159, 162, 180, 181, 185, 188, 195], "handler": [51, 53, 55, 57, 59], "handshak": [51, 53, 55, 57, 59, 133, 135], "handshake_ok": 133, "happen": [180, 181, 203], "hard": [180, 181], "harder": [180, 181], "hardwar": [51, 53, 55, 57, 59, 64, 135, 148, 157, 159, 162, 188, 194, 195], "hardware_descript": 135, "hardwareinfocontain": 72, "harm": 203, "hat": [188, 195], "have": [98, 137, 139, 157, 180, 181, 182, 183, 186, 188, 195, 198, 203, 206, 208], "hdmi": [185, 186], "header": [133, 135], "health": [180, 181, 203], "heartbeat": [194, 203], "heavier": 185, "help": [182, 183, 184, 192, 203, 206, 208], "henc": [180, 181], "here": [157, 159, 182, 183, 185, 186, 202], "high": [188, 195, 203], "higher": [180, 181], "hint": [137, 139], "histori": 110, "hit": [137, 139], "hold": [157, 162, 208], "holidai": [180, 181], "home": [182, 183, 185, 186, 198], "homecag": [180, 181], "host_timestamp": [98, 100, 102, 104, 106, 108, 114, 116, 118, 120, 122, 126, 128, 130], "hour": [180, 181, 188, 195, 198, 203], "hous": [180, 181, 188, 195], "hover": 202, "how": [180, 181, 182, 183, 185, 202, 203, 206, 208], "howev": [180, 181, 186, 192], "http": [40, 186], "human": [180, 181, 188, 195], "humid": [202, 205], "hundr": [180, 181], "hw_info_contain": 72, "hw_output": 64, "hx711": [185, 200, 201], "hygien": 209, "i": [22, 23, 51, 53, 55, 57, 59, 63, 93, 133, 135, 137, 139, 157, 159, 162, 180, 181, 182, 183, 185, 186, 190, 192, 195, 197, 200, 201, 202, 203, 206, 208, 209], "i2c": [200, 201], "i2cdetect": [200, 201], "id": [51, 53, 55, 57, 59, 88, 100, 185, 193], "ideal": 208, "identifi": 186, "idx": 38, "ignor": 203, "illumin": [185, 208], "illustr": 208, "imag": [182, 183, 186, 199, 202, 208], "immedi": [137, 139, 180, 181], "impact": [180, 181, 188, 195, 208], "implant": [180, 181, 182, 183], "implement": [137, 139, 180, 181, 206], "impli": [180, 181], "improv": [180, 181, 188, 195, 203], "inact": 202, "inch": 185, "includ": [145, 180, 181, 182, 183, 186, 188, 195, 202, 209], "increas": [180, 181, 188, 195, 206], "index": [23, 106, 108, 114], "indic": [137, 139, 180, 181, 188, 195, 203, 206, 208], "individu": [180, 181, 188, 195, 208], "ineffici": 157, "info": 202, "infonam": 112, "inform": [72, 100, 145, 202, 209], "infovalu": 112, "infrar": 208, "inherit": 206, "init": 206, "initi": [51, 53, 55, 57, 59, 135, 188, 195, 206], "inject": [180, 181], "inlin": 184, "inner": 203, "input": [51, 53, 55, 57, 59, 63, 64, 70, 75, 135, 148, 157, 159, 162], "input_matrix": 157, "insert": [182, 183, 186], "insid": [180, 181, 185, 186, 188, 195, 203, 209], "inspir": 40, "instal": [182, 183, 187, 188, 192, 195, 200, 201], "instanc": [148, 157, 159, 162], "instead": 186, "instruct": [180, 181, 182, 183, 185, 186, 187, 192, 193, 202], "int": [22, 23, 51, 53, 55, 57, 59, 88, 106, 108, 114, 148, 157, 159, 162], "intak": [180, 181], "integ": [148, 157, 159, 162], "integr": [180, 181, 188, 195], "intent": [180, 181], "interact": [53, 137, 139, 188, 195], "interest": [180, 181], "interfac": [93, 185, 186], "interfer": 203, "intern": [148, 157, 159, 162, 185], "internet": [180, 181, 182, 183, 186, 192, 203], "intersess": 203, "interven": [180, 181], "intervent": [180, 181, 188, 195], "introduc": [180, 181], "invit": [180, 181], "involv": [180, 181, 188, 195, 206], "io": [137, 139], "ip": 192, "ir": [185, 203], "is_condit": [27, 51, 53, 55, 57, 59, 68, 70], "is_global_counter_end": [27, 51, 53, 55, 57, 59, 68, 70], "is_global_timer_cancel": [27, 51, 53, 55, 57, 59, 68, 70], "is_global_timer_end": [27, 51, 53, 55, 57, 59, 68, 70], "is_global_timer_start": [27, 51, 53, 55, 57, 59, 68, 70], "is_global_timer_trigg": [27, 51, 53, 55, 57, 59, 68, 70], "is_run": [157, 162], "is_state_tim": [27, 51, 53, 55, 57, 59, 68, 70], "isatti": [137, 139], "iso": [186, 199], "issu": [182, 183, 192, 197, 203], "item": [186, 202], "its": [22, 180, 181, 186, 188, 190, 195, 202, 203, 208], "itself": [203, 208], "ivar": 157, "j": 135, "jitteri": 186, "john": [51, 53, 55, 57, 59], "jump": 186, "just": [180, 181, 203], "k": 135, "keep": [157, 159, 180, 181, 185], "kei": [22, 23, 124, 148, 157, 159, 162, 188, 195], "kept": [157, 159], "kernel": 186, "keyboard": [186, 190, 192], "kg": 185, "khz": 185, "kill": 38, "kind": [180, 181], "know": [180, 181, 202, 203], "known": 205, "kwd": [4, 5, 6, 7, 8, 9, 10, 11, 13], "l": [135, 203], "lab": [180, 181, 188, 195], "lamp": 208, "languag": 186, "larg": [185, 188, 195, 208], "larger": [188, 195], "laser": [180, 181, 185, 188, 195], "last": [180, 181, 203, 208], "latest": 202, "launch": [182, 183], "learn": [180, 181, 182, 183, 188, 195, 203, 206], "least": 208, "leav": [180, 181, 202], "led": [51, 53, 55, 57, 59, 62, 185, 202], "left": [185, 198, 202], "legaci": [148, 157, 159, 162], "legal": [188, 195], "length": [137, 139], "less": [157, 180, 181, 186, 203], "let": [188, 195, 206], "level": 206, "libitum": [180, 181], "libportaudio2": 186, "libqt5multimedia5": 186, "librari": [157, 159], "licens": [188, 195], "lick": 206, "lick_teach": 206, "lid": [185, 188, 195], "light": [180, 181, 185, 202, 206, 208], "like": [51, 55, 57, 59, 100, 157, 159, 180, 181, 188, 195, 197, 203], "line": [100, 110, 137, 139, 186, 203], "link": [148, 157, 159, 162, 186, 188, 195], "linux": 186, "list": [22, 23, 51, 53, 55, 57, 59, 88, 110, 116, 118, 124, 137, 139, 145, 148, 157, 159, 162, 182, 183, 187, 202], "listen": [148, 157, 159, 162], "lite": 192, "live": [188, 195], "ll": [185, 192, 198], "load": [51, 53, 55, 57, 59, 88, 135], "load_cont": 110, "load_messag": 88, "load_serial_messag": [51, 53, 55, 57, 59, 133, 135], "load_serial_message_ok": 133, "locat": [180, 181], "locomotor": [180, 181], "log": [192, 202], "logic": [51, 53, 55, 57, 59, 159, 162, 206], "login": 186, "long": [180, 181, 188, 195, 203], "longer": [180, 181], "longitudin": [180, 181], "look": 206, "loop": [51, 53, 55, 57, 59], "loop_handl": [51, 53, 55, 57, 59], "loop_interv": [148, 157, 159, 162], "loop_mod": [148, 157, 159, 162], "lose": 203, "lost": 203, "lot": [157, 159, 203], "loud": [180, 181], "low": [188, 195], "lower_cas": 206, "lumin": 208, "m": [135, 186, 208], "machin": [51, 53, 55, 57, 59, 116, 118, 148, 157, 159, 162, 216], "made": [180, 181, 188, 195], "magenta": 208, "mai": [98, 180, 181, 186, 208], "main": [64, 182, 183, 186, 209], "main_set": 23, "maintain": [180, 181, 209], "mainten": [185, 216], "make": [180, 181, 185, 186, 203], "manag": [186, 209], "mani": [180, 181, 203], "manifest": 157, "manipul": [180, 181], "manual": [51, 55, 57, 59, 135, 180, 181, 184, 186, 188, 195, 202, 203, 209], "manual_overrid": [51, 55, 57, 59], "manual_override_exec_ev": 135, "margin": 208, "marinraf": [188, 195], "mark": 208, "mask": [203, 209], "match": 186, "matlab": [157, 159], "matrix": [135, 148, 157, 159, 162], "max_area_no_mous": 208, "max_area_one_mous": 208, "max_stat": [150, 152, 154], "maxim": [180, 181], "maximum": [180, 181, 208], "maximum_dur": 202, "maximum_number_of_tri": 202, "mean": 203, "meant": [180, 181], "measur": [180, 181], "mechan": [188, 195], "memori": [180, 181], "mention": 198, "menu": 202, "messag": [30, 34, 51, 53, 55, 57, 59, 88, 98, 102, 104, 106, 108, 110, 112, 114, 120, 122, 126, 128, 130, 133, 135, 148, 159, 162, 182, 183], "message_api": 53, "message_id": [51, 53, 55, 57, 59], "messageapi": 53, "met": 208, "meta_output_nam": 157, "meth": 110, "method": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 32, 33, 37, 38, 41, 44, 48, 51, 53, 55, 57, 59, 62, 63, 64, 65, 68, 70, 72, 75, 78, 80, 83, 88, 90, 93, 94, 95, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 133, 135, 137, 139, 145, 146, 148, 150, 152, 154, 157, 159, 162, 166, 167, 171, 174, 176, 178, 206], "mg995": 185, "mice": [180, 181, 185, 188, 195, 203, 209], "micro": [185, 186], "microsecond": 157, "might": [203, 208], "min": [180, 181], "mind": [157, 159, 188, 195], "mini": [188, 195], "minim": 208, "minimum": [180, 181, 188, 195], "minor": 208, "minut": [198, 202, 203], "misalign": 203, "misplac": 203, "miss": [180, 181], "mm": [180, 181, 185], "mode": [51, 53, 55, 57, 59, 135, 182, 183, 202], "model": [51, 53, 55, 57, 59, 110, 198, 200, 201], "modif": [180, 181], "modifi": [186, 200, 201, 202, 206], "modul": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 35, 46, 49, 50, 51, 53, 55, 57, 59, 60, 64, 66, 72, 73, 76, 86, 88, 91, 96, 131, 133, 135, 140, 147, 164, 172, 186], "module_event_nam": 133, "module_nam": 88, "module_requested_ev": 133, "moment": [180, 181], "mon": [180, 181], "mondai": [180, 181, 202], "monitor": [148, 157, 159, 162, 180, 181, 186, 188, 190, 195, 205], "monopol": [180, 181], "month": [180, 181, 188, 195, 209], "more": [137, 139, 180, 181, 188, 195, 202, 203, 206], "moreov": [180, 181, 188, 195], "morn": [180, 181], "most": [137, 139, 180, 181, 188, 195, 202], "motiv": [180, 181, 188, 195], "motor": [186, 188, 190, 195, 203, 205], "motor_set": 23, "mount": 185, "mous": [180, 181, 185, 186, 188, 190, 192, 195, 203, 208], "move": [203, 206, 208], "movement": 203, "msg": [88, 137, 139], "msg_id": 88, "much": [180, 181], "multi": [188, 195], "multimedia": 186, "multipl": [180, 181, 208], "must": [62, 63, 70, 75, 78, 137, 139, 148, 157, 159, 162, 180, 181, 193, 202, 206, 208], "mv": 209, "my": [180, 181], "my_bpod": [51, 53, 55, 57, 59], "n_condit": 150, "n_global_count": 152, "n_global_tim": 154, "n_serial_ev": 88, "name": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 25, 51, 53, 55, 57, 59, 62, 64, 95, 100, 106, 108, 114, 116, 118, 124, 133, 135, 148, 157, 159, 162, 202, 206], "name_of_the_project": 206, "nano": 186, "navig": [180, 181, 186], "nearbi": [180, 181], "necessari": [180, 181, 182, 183, 186, 188, 195, 209], "necessarili": [180, 181], "need": [180, 181, 185, 188, 192, 195, 198, 203, 206, 209], "neg": [137, 139], "nest": [188, 195], "net_port": 53, "network": [192, 203], "neurolux": [180, 181], "never": [193, 203], "new": [51, 53, 55, 57, 59, 135, 137, 139, 180, 181, 186, 193, 202, 203, 216], "new_sma_s": 53, "new_state_matrix": 135, "newbot": 193, "newlin": [137, 139], "next": [186, 202], "next_session_tim": 202, "next_set": 202, "night": [180, 181, 202, 208], "nighttim": [188, 195], "nobodi": [180, 181], "noir": [185, 186], "nois": 208, "non": [137, 139, 192], "none": [4, 5, 6, 7, 8, 9, 10, 11, 13, 23, 25, 38, 51, 53, 55, 57, 59, 88, 98, 100, 102, 104, 106, 108, 112, 114, 120, 122, 124, 126, 128, 130, 137, 139, 145, 148, 157, 159, 162, 167, 186, 202], "normal": [180, 181], "note": [186, 208], "notif": [188, 195], "novel": 203, "now": [135, 182, 183, 186, 192, 206], "number": [51, 53, 55, 57, 59, 135, 137, 139, 148, 157, 159, 162, 180, 181, 185, 186, 202, 203, 206, 208], "o": [59, 135, 182, 183, 192], "object": [15, 16, 17, 18, 19, 20, 22, 23, 25, 29, 32, 33, 38, 48, 51, 53, 55, 57, 59, 62, 63, 64, 65, 68, 72, 75, 78, 80, 83, 88, 90, 93, 94, 95, 98, 110, 133, 135, 137, 139, 145, 146, 150, 152, 154, 157, 166, 167, 171, 176, 178], "objectivis": [180, 181], "observ": 208, "obtain": [72, 180, 181, 193], "occasion": [180, 181], "occup": [188, 195], "occupi": [180, 181], "occur": [148, 157, 159, 162, 203, 208], "occurr": [116, 118, 124], "ocean": 185, "off": [202, 203], "off_messag": [148, 157, 159, 162], "offer": [188, 195], "offset": [137, 139], "often": [180, 181, 188, 195, 203], "omit": [137, 139], "on_messag": [148, 157, 159, 162], "on_set_delai": [148, 157, 159, 162], "onc": [180, 181, 182, 183, 190, 192, 202, 203, 206, 208, 209], "one": [51, 53, 55, 57, 59, 135, 137, 139, 148, 157, 159, 162, 180, 181, 186, 188, 195, 202, 206, 208], "oneset_trigg": [148, 157, 159, 162], "onli": [137, 139, 180, 181, 182, 183, 186, 203, 206, 208], "onto": [182, 183], "opb100": 185, "opb100z": 185, "opcod": [51, 53, 55, 57, 59], "open": [38, 51, 53, 55, 57, 59, 93, 180, 181, 182, 183, 192, 193, 197, 198, 202, 203, 205], "opencv": 186, "oper": [137, 139, 180, 181, 182, 183, 186, 188, 192, 195, 208], "optim": [180, 181, 188, 195, 198], "option": [51, 53, 55, 57, 59, 186, 188, 192, 195, 202], "optogenet": [180, 181], "order": 203, "organ": [180, 181, 185, 206], "orient": 198, "origin": [98, 157, 159], "oserror": [137, 139], "oshw": [188, 195], "osmot": [180, 181], "other": [180, 181, 185, 186, 188, 190, 192, 193, 195, 208], "otherwis": [51, 53, 55, 57, 59], "our": [180, 181, 188, 195, 197], "out": [51, 55, 57, 59, 180, 181, 188, 195, 208], "outag": [180, 181], "output": [51, 53, 55, 57, 59, 63, 64, 78, 148, 157, 159, 162], "output_act": [148, 157, 159, 162], "output_matrix": 157, "outputchannel": [28, 51, 53, 55, 57, 59], "outsid": [180, 181], "over": [180, 181, 182, 183, 202], "overdetect": 203, "overlap": 203, "overrid": [51, 53, 55, 57, 59, 135, 137, 139], "override_digital_hw_st": 135, "overview": 216, "own": [180, 181, 182, 183, 188, 195, 206], "p1": 198, "pa1_port1in": [27, 51, 53, 55, 57, 59, 70], "pace": [180, 181, 188, 195], "packag": 186, "page": [184, 186, 192, 197], "pair": [180, 181], "panel": 186, "param": [51, 53, 55, 57, 59, 93, 148, 157, 159, 162], "paramet": [27, 51, 53, 55, 57, 59, 64, 68, 70, 72, 88, 106, 108, 110, 114, 116, 118, 124, 128, 148, 157, 159, 162, 180, 181, 202, 206, 208], "pars": 110, "part": [180, 181, 182, 183, 184, 187, 188, 195, 198], "particip": 193, "particular": [22, 180, 181], "pass": [180, 181], "password": 186, "past": [180, 181], "path": [51, 53, 55, 57, 59, 145, 186], "pattern": 186, "paus": [180, 181], "pc": [98, 203], "pdf": 184, "penalti": [180, 181], "per": [180, 181, 188, 195], "percentag": [180, 181], "perceptu": [180, 181], "perfectli": 208, "perform": [55, 57, 180, 181, 188, 192, 195, 202, 203, 206], "perhap": [180, 181], "period": [180, 181, 188, 195, 202], "peripher": [180, 181], "permit": 208, "persist": 203, "person": [180, 181, 203], "pharmacolog": [180, 181], "phase": [180, 181], "phone": 192, "photog": 203, "physic": 186, "pi": [180, 181, 182, 183, 185, 188, 190, 192, 195, 202], "piec": [180, 181, 182, 183], "pin2": 186, "pipelin": [180, 181], "pitch": 203, "pixel": 208, "pla": 198, "place": [180, 181, 190], "plai": [188, 195, 202, 203], "plan": [182, 183], "plastic": [180, 181, 185, 188, 195], "pleas": 184, "plot": [202, 203, 216], "plu": [180, 181], "plug": [188, 195, 203], "plugin": 186, "po": [137, 139], "point": [180, 181], "poorli": 203, "port": [27, 38, 51, 53, 55, 57, 59, 70, 75, 135, 148, 157, 159, 162, 186, 188, 190, 195, 202, 203, 206], "port1": [27, 51, 53, 55, 57, 59, 70, 75], "port1in": [27, 51, 53, 55, 57, 59, 70], "port1lit": [148, 157, 159, 162], "port1out": 124, "port2": 75, "port2in": 124, "port2out": 124, "port3": 75, "port3in": 124, "port3lit": [148, 157, 159, 162], "port3out": 124, "port4": 75, "port5": 75, "port6": 75, "port7": 75, "port8": 75, "posit": [137, 139, 148, 157, 159, 162, 180, 181, 188, 190, 195, 202], "possibl": [23, 188, 195], "postur": 208, "power": [180, 181, 185, 186, 188, 192, 195, 203], "practic": [180, 181], "pre": [180, 181, 182, 183, 186], "preced": [180, 181], "precis": 157, "predict": [180, 181, 188, 195], "prefer": [182, 183, 188, 195], "preinstal": 186, "premis": [180, 181], "present": [186, 208], "preset": [180, 181], "press": 205, "prevent": [180, 181, 185, 202], "previou": [180, 181], "previous": [148, 157, 159, 162], "price": 185, "primari": 208, "principl": [180, 181], "print": [122, 180, 181, 184, 188, 195, 199], "printabl": [182, 183], "privat": [55, 57], "pro": 186, "probe": [180, 181], "problem": [180, 181, 203, 209], "proce": [182, 183, 186, 208], "procedur": 216, "process": [51, 53, 55, 57, 59, 80, 83, 102, 104, 112, 120, 126, 128, 180, 181, 186, 188, 195, 206, 208], "program": [157, 180, 181], "progress": [180, 181, 202, 206, 209], "project": [188, 195, 197, 206], "promot": [188, 195], "promptli": [180, 181], "proper": 209, "properli": [186, 209], "properti": [145, 206], "prosoci": [180, 181], "protect": [180, 181, 188, 195], "protocol": [51, 53, 55, 57, 59, 122, 188, 195, 202, 216], "provid": [137, 139, 180, 181, 182, 183, 184, 185, 186, 188, 195, 198, 202, 208, 209], "pulseaudio": 186, "pump": [180, 181, 185, 202, 203], "punish": [180, 181], "purchas": [182, 183, 185], "purpos": [180, 181, 188, 195], "push": [185, 205], "put": [180, 181], "pwm": [51, 53, 55, 57, 59, 62, 186], "pwm1": [148, 157, 159, 162], "pwm2": [148, 157, 159, 162], "py": [110, 128, 182, 183, 186, 200, 201, 206], "pybod": [180, 181], "pybpodapi": [51, 53, 55, 57, 59, 157, 159], "pybpodgui_plugin": [102, 104, 110, 112, 120, 122, 126, 128], "pybpodprotocol": [37, 39], "pyqt5": 186, "python": [93, 157, 159, 182, 183, 188, 195, 200, 201, 202, 206], "python3": 186, "qtmultimedia": 186, "qualiti": [180, 181, 185], "qualnam": [4, 5, 6, 7, 8, 9, 10, 11, 13], "quantifi": [180, 181], "quantit": [180, 181], "question": [180, 181], "quickli": [180, 181], "qwidget": 174, "r": 135, "rain": [188, 195], "rais": [137, 139], "rang": [148, 157, 159, 162, 188, 195, 208], "rare": [180, 181, 203], "raspberri": [180, 181, 182, 183, 188, 190, 192, 195, 200, 201, 202], "raspi": [186, 192], "rat": [180, 181, 188, 195], "raw": [198, 202], "rca": 185, "re": [180, 181, 186, 202], "reach": [137, 139, 180, 181, 202, 206], "react": [180, 181], "read": [80, 83, 137, 139, 205], "readabl": [137, 139], "reader": [180, 181, 185, 188, 190, 195, 202], "readi": [182, 183, 186], "readlin": [137, 139], "real": [188, 195, 202, 216], "realli": 186, "realvnc": 192, "reason": [180, 181, 192, 208], "receiv": [51, 55, 57, 59, 72, 133, 182, 183, 185, 188, 193, 195, 216], "recent": [188, 195, 202], "recogn": [186, 200, 201], "recogniz": 186, "recommend": [192, 198, 203], "reconnect": 203, "record": [180, 181, 202, 203, 208], "rectangl": 208, "reduc": [157, 180, 181], "reduct": [188, 195], "reenter": [180, 181], "refer": [182, 183, 186], "referenc": [148, 157, 159, 162], "refil": 203, "reflect": 208, "refractori": 202, "regard": [180, 181, 188, 195], "regardless": [186, 192], "regist": [51, 53, 55, 57, 59], "regress": 206, "regul": [180, 181, 188, 195], "regular": 203, "rel": [137, 139], "relai": 135, "releas": [51, 53, 55, 57, 59], "reliabl": [180, 181, 185, 188, 195, 208], "reload": [186, 203], "remot": [180, 181, 182, 183, 186, 188, 190, 194, 195, 203], "remov": [180, 181, 186, 188, 195, 203, 209], "render": [186, 202], "repeat": [157, 180, 181], "repetit": [124, 180, 181, 188, 195], "replac": [148, 159, 162, 198, 203], "report": [180, 181, 197, 203, 209], "repositori": [186, 188, 195, 199, 206], "repres": [53, 72, 98, 100, 102, 104, 106, 108, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 206], "represent": [22, 23], "reproduc": [180, 181], "request": [55, 57, 133, 135], "requir": [180, 181, 182, 183, 188, 195, 198, 206, 208, 209], "research": [180, 181, 188, 195], "reserv": [180, 181], "reset": [51, 53, 55, 57, 59, 135], "reset_clock": 135, "reset_serial_messag": [51, 53, 55, 57, 59, 133, 135], "resolut": [186, 192], "resolv": [180, 181, 182, 183, 203], "resourc": [188, 195], "respond": [180, 181, 216], "respons": [180, 181, 188, 195, 203], "rest": [180, 181], "restart": [180, 181, 203], "retriev": [51, 53, 55, 57, 59, 137, 139], "return": [23, 27, 38, 39, 42, 45, 51, 53, 55, 57, 59, 64, 68, 70, 93, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 135, 137, 139, 145, 148, 157, 159, 162, 202, 203, 206], "review": [203, 209], "reward": [180, 181, 188, 195], "rfid": [180, 181, 182, 183, 186, 188, 190, 195, 198, 202, 203, 208], "right": [185, 186, 198, 202, 206], "rigid": 185, "rigor": [188, 195], "rise": 203, "rodent": [180, 181, 188, 195], "room": [180, 181, 202, 203, 208], "routin": 209, "row": [98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130], "rtype": [51, 53, 55, 57, 59], "run": [51, 53, 55, 57, 59, 135, 145, 157, 162, 180, 181, 182, 183, 188, 195, 200, 201, 202, 203, 206], "run_asap": [51, 53, 55, 57, 59], "run_state_machin": [51, 53, 55, 57, 59, 133, 135], "run_villag": [182, 183, 186], "safe": [180, 181, 208], "same": [180, 181, 192, 203], "sanwork": [188, 195], "save": [110, 202, 216], "savvi": 206, "scale": [180, 181, 185, 188, 195, 202, 203, 205], "scaleprotocol": [41, 42], "schedul": [180, 181, 194], "scheme": 135, "scipi": 186, "sck": 80, "score": 203, "scratch": [182, 183], "screen": [192, 202, 203, 205], "screen_set": 23, "screenshot": 203, "screwdriv": [182, 183], "script": [180, 181, 203, 206], "sd": [182, 183, 185, 186], "seamless": [188, 195], "search": [51, 53, 55, 57, 59, 193], "second": [148, 157, 159, 162, 180, 181, 202, 203, 208], "section": [182, 183, 185, 188, 192, 195, 202, 208, 209], "see": [148, 157, 159, 162, 192, 203], "seealso": 128, "seek": [137, 139], "seekabl": [137, 139], "select": [186, 193, 202, 205], "self": [180, 181, 206], "send": [38, 51, 53, 55, 57, 59, 88, 135, 148, 159, 162, 180, 181, 188, 193, 194, 195, 203], "send_ev": [148, 157, 159, 162], "send_state_machin": [51, 53, 55, 57, 59], "send_to_hw_seri": 135, "sensor": [182, 183, 185, 186, 188, 190, 195, 202], "sent": 135, "separ": [137, 139, 185, 208], "sergi": 203, "serial": [28, 51, 53, 55, 57, 59, 62, 78, 93, 135, 203], "serial1": [28, 51, 53, 55, 57, 59, 75, 78], "serial1_3": 75, "serial1_4": 75, "serial2": 75, "serial3": 75, "serial_channel": [51, 53, 55, 57, 59], "serial_messag": [51, 53, 55, 57, 59], "serial_port": [51, 53, 55, 57, 59, 88, 93], "serialportnam": 93, "serv": [188, 195], "server": [102, 104, 112, 120, 126, 128, 180, 181, 192], "servic": [180, 181], "servo": [185, 188, 190, 195], "session": [38, 51, 53, 55, 57, 59, 98, 110, 135, 137, 139, 180, 181, 188, 195, 202, 203, 206], "session_io": 110, "session_nam": [51, 53, 55, 57, 59], "sessionio": 110, "set": [51, 53, 55, 57, 59, 62, 63, 70, 72, 75, 78, 135, 137, 139, 148, 157, 159, 162, 180, 181, 182, 183, 190, 192, 193, 200, 201, 203, 205, 208, 216], "set_condit": [148, 157, 159, 162], "set_global_count": [148, 157, 159, 162], "set_global_tim": [148, 157, 159, 162], "set_global_timer_legaci": [148, 157, 159, 162], "set_module_relai": 135, "setup": [72, 185, 188, 195], "setup_input_channel": 64, "setup_output_channel": 64, "setuptools_scm": 186, "seven": [180, 181], "sever": [180, 181, 188, 195, 202, 206], "shadow": 208, "shape": [188, 195], "share": [188, 193, 195], "shine": [188, 195], "short": [180, 181], "shorter": [180, 181], "should": [51, 53, 55, 57, 59, 137, 139, 148, 157, 159, 162, 180, 181, 202, 203, 205, 208], "show": 202, "shown": [180, 181], "sht31": [185, 200, 201], "sick": 203, "side": 202, "signal": [180, 181, 188, 194, 195], "signific": [188, 195], "significantli": 208, "similar": [180, 181], "similarli": 208, "simpl": [180, 181, 206], "simple_task": 206, "simpletask": 206, "simpli": [182, 183, 186, 192, 208], "simplifi": [93, 188, 195, 206], "simultan": 208, "singl": [188, 195, 198, 208], "site": 186, "size": [95, 137, 139, 188, 195, 208], "sleep": 203, "slight": 208, "slightli": 203, "slot": 185, "sma": [51, 53, 55, 57, 59, 124, 148, 157, 159, 162], "small": 185, "so": [137, 139, 157, 159, 180, 181, 186, 203, 208], "social": [188, 195], "soft": [51, 53, 55, 57, 59, 135], "softcod": [28, 51, 53, 55, 57, 59, 78, 114, 203], "softcode1": [28, 51, 53, 55, 57, 59, 78], "softcode_handler_funct": [51, 53, 55, 57, 59], "softwar": [180, 181, 182, 183, 187, 188, 195], "sole": 208, "solut": [188, 195], "some": [188, 192, 195, 198, 203], "someon": [180, 181], "someth": [180, 181, 203, 209], "sometim": [180, 181, 203], "sound": [180, 181, 186, 202, 203], "sound_calibr": 202, "sound_set": 23, "sounddevic": 186, "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 41, 42, 44, 45, 48, 51, 53, 55, 57, 59, 62, 63, 64, 65, 68, 70, 72, 75, 78, 80, 81, 83, 84, 88, 90, 93, 94, 95, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 133, 135, 137, 139, 142, 145, 146, 148, 150, 152, 154, 156, 157, 159, 160, 162, 163, 166, 167, 169, 171, 174, 176, 178, 185, 186, 197], "space": [188, 195], "span": 208, "speaker": [185, 202], "special": [188, 195], "specif": [62, 63, 70, 75, 78, 116, 118, 186, 202, 208, 209], "specifi": [137, 139, 186, 202], "sporad": 203, "stabil": [180, 181, 185], "stabl": [180, 181, 188, 195, 208], "staff": [180, 181], "stage": [180, 181, 203, 206], "stai": [180, 181, 208], "stainless": 185, "standard": [180, 181, 188, 195, 202, 206], "start": [4, 5, 6, 7, 8, 9, 10, 11, 13, 51, 53, 55, 57, 59, 116, 118, 137, 139, 148, 157, 159, 162, 180, 181, 182, 186, 193, 202, 203, 206, 208], "start_tim": 112, "state": [51, 53, 55, 57, 59, 106, 108, 114, 116, 118, 124, 135, 137, 139, 148, 157, 159, 162, 180, 181, 188, 195, 216], "state_change_condit": [148, 157, 159, 162], "state_machin": [51, 53, 55, 57, 59], "state_machine_installation_statu": 133, "state_nam": [116, 118, 148, 157, 159, 162], "state_tim": [148, 157, 159, 162], "state_timer_matrix": 157, "statedur": [116, 118], "statemachin": [51, 53, 55, 57, 59, 124], "statemachinebas": 159, "statemachinebuild": 162, "statemachinerunn": 148, "statement": 122, "stateoccurr": 124, "states_occurr": 124, "static": [27, 51, 53, 55, 57, 59, 68, 70], "statu": [188, 195, 202, 203, 208], "stderr": [80, 83, 102, 104, 112, 120, 126, 128], "stdout": [80, 83], "steel": 185, "step": [186, 192, 200, 201], "still": [148, 157, 159, 162, 180, 181, 203, 208], "stimuli": [180, 181, 186, 188, 195, 202], "stl": 198, "stop": [51, 53, 55, 57, 59, 185, 203], "store": [116, 118, 145, 186], "str": [22, 23, 27, 51, 53, 55, 57, 59, 68, 70, 106, 108, 110, 114, 116, 118, 124, 148, 157, 159, 162], "straightforward": [182, 183, 206], "stream": [80, 83, 137, 139, 146], "strength": [188, 195], "stress": [180, 181, 188, 195], "stretch": 208, "string": [22, 23, 137, 139, 148, 157, 159, 162], "stringio": [137, 139], "strong": [180, 181], "structur": [157, 159, 185, 206], "stuck": 203, "studi": [180, 181], "studio": 198, "subclass": [137, 139], "subfold": 206, "subgroup": [180, 181], "subject": [180, 181, 188, 195, 202, 203, 206, 216], "suboptim": 192, "subscript": 192, "subset": 198, "substitut": [180, 181], "success": 133, "successfulli": [180, 181], "sucros": [180, 181, 209], "sudo": [186, 200, 201], "suffer": [180, 181], "suffici": [180, 181, 206], "suit": [180, 181], "summari": [202, 203], "sundai": [180, 181, 202], "super": 206, "superenum": [4, 5, 6, 7, 8, 9, 10, 11, 12], "supplement": 203, "suppli": [185, 186, 203], "supplier": 185, "support": [51, 53, 55, 57, 59, 62, 184, 185, 198], "sure": [180, 181, 185, 186, 203], "surprisingli": [180, 181], "suspect": [203, 209], "switch": [180, 181, 202], "symbol": 186, "symlink": 186, "sync": [51, 53, 55, 57, 59, 135, 148, 157, 159, 162], "sync_channel": [51, 53, 55, 57, 59], "sync_channel_mod": [133, 135], "sync_channel_mode_ok": 133, "sync_mod": [51, 53, 55, 57, 59], "synchron": [51, 53, 55, 57, 59, 148, 157, 159, 162], "system": [23, 180, 181, 182, 183, 184, 185, 190, 192, 199, 200, 201, 202, 208, 209, 216], "sz": 185, "t": [135, 137, 139, 157, 198, 203, 206], "tab": 193, "tabl": 202, "tag": [188, 195, 202, 203], "take": [148, 157, 159, 162, 180, 181, 198], "tandem": [188, 195], "target_ev": [148, 157, 159, 162], "task": [100, 180, 181, 185, 188, 195, 203], "task_simpl": 206, "tast": [180, 181], "team": 192, "technic": [180, 181], "telegram": [180, 181, 186, 188, 194, 195, 202, 209, 216], "telegram_chat": 193, "telegram_set": 23, "telegram_token": 193, "tell": [137, 139], "temperatur": [180, 181, 182, 183, 185, 186, 188, 190, 195, 202, 203, 205], "tempsensorprotocol": [44, 45], "tend": 203, "termin": [182, 183, 186, 203], "test": [51, 53, 55, 57, 59, 180, 181, 188, 192, 195, 202, 203, 216], "tether": [180, 181], "text": [137, 139, 186, 193], "textio": [137, 139], "textiobas": [137, 139], "than": [51, 53, 55, 57, 59, 157, 180, 181, 186, 203], "thei": [23, 148, 159, 162, 180, 181, 185, 202, 203, 206], "them": [180, 181, 185, 198, 202, 203, 206], "thi": [51, 53, 55, 57, 59, 106, 108, 114, 116, 118, 137, 139, 148, 157, 159, 162, 180, 181, 182, 183, 184, 186, 188, 192, 193, 195, 202, 203, 206, 208, 209], "thing": 100, "those": 208, "though": 208, "three": [188, 195, 198, 208], "threshold": [148, 157, 159, 162, 203, 208], "through": [51, 53, 55, 57, 59, 88, 180, 181, 188, 195, 202], "time": [148, 157, 159, 162, 180, 181, 188, 192, 195, 202, 203, 206, 208, 216], "timeout": 93, "timer": [148, 157, 159, 162, 202], "timer_dur": [148, 157, 159, 162], "timer_id": [148, 157, 159, 162], "timestamp": [51, 53, 55, 57, 59, 106, 108, 114, 116, 118, 124, 135], "todo": [157, 186], "togeth": [180, 181, 188, 195], "toggl": 202, "too": [180, 181, 185], "tool": [200, 201], "toolbar": 186, "top": [180, 181, 185, 188, 195, 198, 202, 203, 205, 208], "torqu": 185, "total": [137, 139, 185, 188, 195], "total_states_ad": 157, "touch": [185, 203, 205], "touchscreen": [180, 181, 188, 195, 203], "touchscreen_set": 23, "towerpro": 185, "track": [180, 181, 202], "tradit": [180, 181], "train": [180, 181, 182, 183, 184, 195, 197, 198, 202, 203, 209, 216], "training_protocol": 206, "transact": 93, "transform": [180, 181], "transient": [180, 181], "transit": [148, 157, 159, 162, 206], "transmiss": [135, 203], "transpar": [180, 181, 185, 188, 195], "transport": [180, 181, 188, 195], "trap": 203, "trial": [51, 53, 55, 57, 59, 145, 157, 180, 181, 202, 203, 206], "trial_start_timestamp": 124, "trigger": [135, 148, 157, 159, 162, 180, 181, 186, 202, 203], "trigger_softcod": 135, "troubl": [182, 183], "troubleshoot": [182, 183], "true": [98, 100, 102, 104, 106, 108, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 137, 139, 203], "truncat": [137, 139], "try": [180, 181, 203, 206], "tty": [51, 53, 55, 57, 59], "ttyacm": 186, "ttyacm0": 186, "ttyacm1": 186, "ttyacm2": 186, "tube": [188, 195], "tune": [180, 181], "tunnel": 185, "tup": [27, 51, 53, 55, 57, 59, 70], "tupl": [148, 157, 159, 162], "turn": [202, 203], "tv": [180, 181], "two": [180, 181, 186, 188, 190, 195, 202, 203, 206, 208, 209], "txt": 186, "txtline": 110, "type": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 23, 27, 38, 39, 42, 45, 51, 53, 55, 57, 59, 63, 68, 70, 110, 124, 135, 145, 148, 159, 162, 180, 181, 182, 183, 186, 188, 195], "typestr": [98, 100, 102, 104, 106, 108, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130], "typic": [180, 181, 186, 208], "u": [135, 180, 181, 182, 183], "udevadm": 186, "ultim": [180, 181], "unchang": [137, 139], "unconsci": [180, 181], "undeclar": [148, 157, 159, 162], "under": [188, 195, 202], "underli": [137, 139], "understand": 186, "unexpect": [180, 181], "unexpectedli": 203, "uniformli": [180, 181], "uniqu": [51, 53, 55, 57, 59, 148, 157, 159, 162], "unless": [198, 203], "unlik": [148, 157, 159, 162, 180, 181, 208], "unplug": 203, "unrel": 203, "unsuccess": 202, "until": [137, 139, 148, 157, 159, 162, 180, 181], "unus": [137, 139], "up": [72, 180, 181, 182, 183, 185, 190, 192, 208], "updat": [51, 53, 55, 57, 59, 188, 195], "update_state_numb": [148, 159, 162], "upgrad": 186, "upload": 53, "us": [51, 53, 55, 57, 59, 88, 137, 139, 148, 157, 159, 162, 180, 181, 184, 185, 188, 192, 195, 200, 201, 202, 205, 206, 216], "usag": 186, "usb": [185, 190, 203], "usb1": 75, "usbmodem1293": [51, 53, 55, 57, 59], "user": [51, 53, 55, 57, 59, 182, 183, 188, 193, 195, 202, 206], "usernam": 186, "username_to_id_bot": 193, "usual": [80, 83, 137, 139, 186, 203, 208], "v": [135, 185, 186], "v3": 185, "valid": [148, 157, 159, 162], "valu": [4, 5, 6, 7, 8, 9, 10, 11, 13, 22, 23, 51, 55, 57, 59, 62, 63, 70, 75, 78, 124, 128, 148, 157, 159, 162, 186, 202, 208], "value_nam": 128, "value_typ": 22, "valueerror": [137, 139], "valv": [28, 51, 53, 55, 57, 59, 62, 78, 202, 203], "vaol": 185, "vari": [186, 208], "variabl": [53, 106, 108, 114, 116, 118, 124, 157, 162, 180, 181, 202, 206], "variat": 208, "variou": [185, 188, 195], "vc4": 186, "ventil": 203, "venv": 186, "veri": [180, 181, 188, 195, 203], "verifi": [200, 201, 203, 205], "version": [51, 53, 55, 57, 59, 148, 157, 159, 162, 185, 188, 195, 206], "via": [148, 157, 159, 162, 180, 181, 188, 195, 203], "video": [186, 188, 195, 202, 203], "view": [184, 188, 195, 202], "view_detection_corridor": 208, "viewer": 192, "villag": [180, 181, 182, 183, 184, 195, 197, 198, 200, 201, 206], "village_project": 206, "virtual": [135, 157], "visual": [202, 208], "volum": 202, "wa": [53, 203], "wai": [180, 181, 192], "wait": [180, 181, 203, 208], "wake": [180, 181], "walk": 203, "want": [180, 181, 186], "warn": [180, 181, 182, 183], "water": [180, 181, 185, 202, 203, 209], "water_calibr": 202, "wayland": 186, "we": [180, 181, 182, 183, 184, 188, 192, 195, 197, 198, 202, 206], "web": 186, "webpag": 192, "week": [180, 181, 209], "weekend": [180, 181], "weigh": 203, "weight": [180, 181, 182, 183, 186, 188, 195, 202, 203, 205], "welcom": [157, 159], "welfar": [188, 195, 202], "well": [180, 181, 190, 202, 203], "were": [148, 159, 162, 180, 181, 198], "what": [180, 181, 185, 203], "when": [22, 23, 51, 53, 55, 57, 59, 148, 157, 159, 162, 180, 181, 182, 183, 185, 186, 202, 203, 206, 208, 209], "whenc": [137, 139], "whenev": 186, "where": [148, 157, 159, 162, 185, 186, 188, 195, 202, 203, 206, 208], "whether": [53, 137, 139, 157, 162, 180, 181, 208], "which": [137, 139, 157, 159, 180, 181, 182, 183, 188, 195, 202, 206], "while": [51, 53, 55, 57, 59, 162, 180, 181, 188, 195, 208], "white": [185, 188, 195, 208], "whole": [157, 159, 188, 195], "whose": [124, 148, 157, 159, 162, 180, 181], "why": [180, 181, 203], "wi": 186, "wide": [185, 186, 188, 195], "window": [182, 183, 192], "wire": [27, 28, 51, 53, 55, 57, 59, 62, 70, 78, 185, 192], "wire1": [28, 51, 53, 55, 57, 59, 75, 78], "wire1high": [27, 28, 51, 53, 55, 57, 59, 70, 78], "wire2": 75, "wireless": [180, 181], "within": [180, 181, 202, 206, 208], "without": [124, 180, 181, 185, 202, 205], "won": 157, "work": [180, 181, 186, 200, 201, 203, 206, 209], "workspace_path": [51, 53, 55, 57, 59], "would": [180, 181], "wrap": [188, 195], "writabl": [137, 139], "write": [51, 55, 57, 59, 135, 137, 139, 193], "write_to_modul": 135, "writelin": [137, 139], "written": [137, 139, 206], "wrong": 203, "x": [135, 180, 181, 185, 186, 203], "x1": 185, "x11": 186, "x2": 185, "x20": 185, "x3": 185, "x6": 185, "x7": 185, "x8": 185, "y": [186, 200, 201], "ye": [180, 181, 186, 203], "yet": [157, 180, 181, 188, 195], "you": [148, 157, 159, 162, 180, 181, 182, 183, 184, 185, 188, 192, 195, 197, 198, 200, 201, 202, 203, 206, 209], "your": [157, 180, 181, 182, 183, 184, 186, 188, 192, 193, 195, 206], "z": 135, "zero": [148, 157, 159, 162], "zone": 203, "\u00b5l": 203}, "titles": ["classes", "collection", "Collection", "enums", "Actions", "Active", "AreaActive", "Color", "Cycle", "DataTable", "Info", "ScreenActive", "State", "SuperEnum", "protocols", "CameraProtocol", "EventProtocol", "PyBpodProtocol", "ScaleProtocol", "TelegramBotProtocol", "TempSensorProtocol", "settings_class", "Setting", "Settings", "subject", "Subject", "task", "Event", "Output", "Task", "village.classes.task.TaskError", "training", "Settings", "Training", "village.classes.training.TrainingError", "devices", "bpod", "PyBpod", "Softcode", "get_bpod", "scale", "Scale", "get_scale", "temp_sensor", "TempSensor", "get_temp_sensor", "gui", "log", "Log", "pybpodapi", "bpod", "Bpod", "bpod_base", "BpodBase", "bpod_com_protocol", "BpodCOMProtocol", "bpod_com_protocol_modules", "BpodCOMProtocolModules", "bpod_io", "BpodIO", "hardware", "channels", "ChannelName", "ChannelType", "Channels", "EventsPositions", "events", "base_eventname", "BaseEventName", "bpod_events", "EventName", "hardware", "Hardware", "input_channels", "bpod_input_channels", "InputName", "output_channels", "bpod_output_channels", "OutputChannel", "non_blockingsocketreceive", "NonBlockingSocketReceive", "village.pybpodapi.bpod.non_blockingsocketreceive.UnexpectedEndOfStream", "non_blockingstreamreader", "NonBlockingStreamReader", "village.pybpodapi.bpod.non_blockingstreamreader.UnexpectedEndOfStream", "settings", "bpod_modules", "bpod_module", "BpodModule", "bpod_modules", "BpodModules", "com", "arcom", "ArCOM", "ArduinoTypes", "DataType", "messaging", "base_message", "BaseMessage", "debug", "DebugMessage", "end_trial", "EndTrial", "error", "ErrorMessage", "event_occurrence", "EventOccurrence", "event_resume", "EventResume", "parser", "MessageParser", "session_info", "SessionInfo", "softcode_occurrence", "SoftcodeOccurrence", "state_occurrence", "StateOccurrence", "state_transition", "StateTransition", "stderr", "StderrMessage", "stdout", "StdoutMessage", "trial", "Trial", "untagged_message", "UntaggedMessage", "value", "ValueMessage", "warning", "WarningMessage", "protocol", "recv_msg_headers", "ReceiveMessageHeader", "send_msg_headers", "SendMessageHeader", "stderr_buffer", "StderrBuffer", "stdout_buffer", "StdoutBuffer", "exceptions", "bpod_error", "village.pybpodapi.exceptions.bpod_error.BpodErrorException", "protocol", "session", "Session", "StreamsWrapper", "state_machine", "StateMachine", "conditions", "Conditions", "global_counters", "GlobalCounters", "global_timers", "GlobalTimers", "state_machine_base", "village.pybpodapi.state_machine.state_machine_base.SMAError", "StateMachineBase", "state_machine_builder", "StateMachineBuilder", "village.pybpodapi.state_machine.state_machine_builder.StateMachineBuilderError", "state_machine_runner", "StateMachineRunner", "village.pybpodapi.state_machine.state_machine_runner.StateMachineRunnerError", "utils", "csv", "Reader", "Writer", "date_parser", "parse", "rt_plots", "RTPlots", "screen", "behaviour_window", "BehaviourWindow", "time_utils", "TimeUtils", "video", "Example", "API", "&lt;no title&gt;", "FAQ", "Build-It-Yourself", "Getting Started", "Assembly Instructions", "List of Parts", "Software Installation", "How to Build It", "What Is The Training Village?", "Schedule Backups", "Hardware Connections", "Send Heartbeat Signals to a Remote Device", "Configure Remote Access", "Create a Telegram Bot", "Initial Configuration", "How Does It Work?", "System ISO Image", "Code Repository", "3D Printing Files", "Resources", "Temperature or Weight Sensor Connection Error", "Troubleshooting", "GUI Overview", "Receive and respond to Telegram Alarms", "Animal Procedures", "Calibrate and Test Corridor Components", "Create a New Training Protocol", "Saved Data", "Calibrate and Test Animal Detection", "Maintenance", "Create Real-Time Plots", "Configure Settings", "System State Machine", "Create New Subjects", "Test a Training Protocol", "Use an Existing Training Protocol", "User Guide"], "titleterms": {"3d": [185, 198], "It": [182, 183, 187, 188, 195], "The": [188, 195], "access": [186, 192], "action": 4, "activ": 5, "alarm": [193, 203], "alia": 186, "aluminium": 185, "an": [186, 193, 215], "anim": [204, 208], "api": 179, "arcom": [92, 93], "arduinotyp": 94, "areaact": 6, "assembli": 184, "backup": 189, "base_eventnam": 67, "base_messag": 97, "baseeventnam": 68, "basemessag": 98, "behavior": [185, 188, 195], "behaviour_window": 173, "behaviourwindow": 174, "biweekli": 209, "bot": 193, "box": [185, 188, 195], "bpod": [36, 50, 51, 81, 84, 185], "bpod_bas": 52, "bpod_com_protocol": 54, "bpod_com_protocol_modul": 56, "bpod_error": [141, 142], "bpod_ev": 69, "bpod_input_channel": 74, "bpod_io": 58, "bpod_modul": [86, 87, 89], "bpod_output_channel": 77, "bpodbas": 53, "bpodcomprotocol": 55, "bpodcomprotocolmodul": 57, "bpoderrorexcept": 142, "bpodio": 59, "bpodmodul": [88, 90], "build": [182, 183, 187], "cabl": 198, "cage": 198, "calibr": [205, 208], "cam": 185, "camera": 198, "cameraprotocol": 15, "chang": 186, "channel": [61, 64], "channelnam": 62, "channeltyp": 63, "check": 193, "class": [0, 30, 34, 179], "cnc": 185, "code": [197, 206], "collect": [1, 2], "color": 7, "com": 91, "commun": 186, "compon": 205, "condit": [149, 150], "configur": [192, 194, 211], "connect": [190, 200, 201], "connector": 198, "consist": 186, "control": [188, 195], "corridor": [188, 195, 198, 205, 208], "creat": [186, 193, 206, 210, 213], "csv": 165, "cycl": 8, "daili": 209, "data": [202, 207], "datat": 9, "datatyp": 95, "date_pars": 168, "debug": 99, "debugmessag": 100, "detect": 208, "devic": [35, 179, 186, 191], "doe": [188, 195], "door": 198, "electron": 185, "end_trial": 101, "endtrial": 102, "enum": 3, "environ": 186, "error": [103, 200, 201], "errormessag": 104, "event": [27, 66], "event_occurr": 105, "event_resum": 107, "eventnam": 70, "eventoccurr": 106, "eventprotocol": 16, "eventresum": 108, "eventsposit": 65, "exampl": 178, "except": [140, 142], "exist": [193, 215], "extrus": 185, "faq": 181, "file": 198, "first": 186, "get": 183, "get_bpod": 39, "get_scal": 42, "get_temp_sensor": 45, "global_count": 151, "global_tim": 153, "globalcount": 152, "globaltim": 154, "gui": [46, 179, 202], "guid": 216, "hardwar": [60, 71, 72, 186, 190], "hat": 185, "heartbeat": 191, "homecag": 185, "how": [187, 188, 195], "i": 188, "i2c": 186, "imag": 196, "info": 10, "initi": 194, "input_channel": 73, "inputnam": 75, "instal": 186, "instruct": 184, "interrog": 203, "iso": 196, "launch": 186, "librari": 186, "list": 185, "log": [47, 48], "machin": [185, 212], "main": 202, "mainten": 209, "make": 193, "messag": 96, "messagepars": 110, "monitor": 202, "monthli": 209, "mount": 198, "name": 186, "need": 186, "new": [206, 213], "non_blockingsocketrec": [79, 81], "non_blockingstreamread": [82, 84], "nonblockingsocketrec": 80, "nonblockingstreamread": 83, "o": 186, "occasion": 209, "open": [188, 195], "organ": 198, "other": 179, "output": 28, "output_channel": 76, "outputchannel": 78, "overview": 202, "pars": 169, "parser": 109, "part": 185, "pi": 186, "pin": 186, "pip": 186, "plot": 210, "port": 185, "prefer": 186, "print": [185, 198], "procedur": 204, "protocol": [14, 131, 143, 206, 214, 215], "pybpod": 37, "pybpodapi": [49, 81, 84, 142, 156, 160, 163, 179], "pybpodprotocol": 17, "python": 186, "raspberri": [185, 186], "reader": 166, "real": 210, "receiv": 203, "receivemessagehead": 133, "recv_msg_head": 132, "remot": [191, 192], "repositori": 197, "resourc": 199, "respond": 203, "rfid": 185, "rt_plot": 170, "rtplot": 171, "rule": 186, "run": 186, "save": 207, "scale": [40, 41], "scaleprotocol": 18, "schedul": 189, "screen": [172, 185, 186], "screenact": 11, "send": 191, "send_msg_head": 134, "sendmessagehead": 135, "sensor": [200, 201], "servo": 186, "session": [144, 145], "session_info": 111, "sessioninfo": 112, "set": [22, 23, 32, 85, 186, 202, 211], "settings_class": 21, "signal": 191, "smaerror": 156, "softcod": 38, "softcode_occurr": 113, "softcodeoccurr": 114, "softwar": 186, "sound": 185, "sourc": [188, 195], "start": 183, "state": [12, 212], "state_machin": [147, 156, 160, 163], "state_machine_bas": [155, 156], "state_machine_build": [158, 160], "state_machine_runn": [161, 163], "state_occurr": 115, "state_transit": 117, "statemachin": 148, "statemachinebas": 157, "statemachinebuild": 159, "statemachinebuildererror": 160, "statemachinerunn": 162, "statemachinerunnererror": 163, "stateoccurr": 116, "statetransit": 118, "stderr": 119, "stderr_buff": 136, "stderrbuff": 137, "stderrmessag": 120, "stdout": 121, "stdout_buff": 138, "stdoutbuff": 139, "stdoutmessag": 122, "streamswrapp": 146, "subject": [24, 25, 213], "superenum": 13, "system": [186, 188, 195, 196, 198, 203, 212], "task": [26, 29, 30, 202, 206], "taskerror": 30, "telegram": [193, 203], "telegrambotprotocol": 19, "temp_sensor": 43, "temperatur": [200, 201], "tempsensor": 44, "tempsensorprotocol": 20, "test": [205, 208, 214], "time": [186, 210], "time_util": 175, "timeutil": 176, "token": 193, "train": [31, 33, 34, 185, 186, 188, 206, 214, 215], "trainingerror": 34, "trial": [123, 124], "trigger": 193, "troubleshoot": 201, "tube": [185, 198], "uart": 186, "udev": 186, "unexpectedendofstream": [81, 84], "untagged_messag": 125, "untaggedmessag": 126, "updat": 186, "us": [186, 215], "usag": [188, 195], "usb": 186, "user": 216, "util": 164, "valu": 127, "valuemessag": 128, "via": 186, "video": 177, "villag": [30, 34, 81, 84, 142, 156, 160, 163, 185, 186, 188], "warn": 129, "warningmessag": 130, "weekli": 209, "weight": [200, 201], "what": [186, 188], "work": [188, 195], "writer": 167, "you": 186, "yourself": [182, 183]}})